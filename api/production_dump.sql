--
-- PostgreSQL database dump
--

-- Dumped from database version 15.3
-- Dumped by pg_dump version 15.4

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: public; Type: SCHEMA; Schema: -; Owner: mealrecommenderprod_user
--

-- *not* creating schema, since initdb creates it


ALTER SCHEMA public OWNER TO mealrecommenderprod_user;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: _prisma_migrations; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public._prisma_migrations (
    id character varying(36) NOT NULL,
    checksum character varying(64) NOT NULL,
    finished_at timestamp with time zone,
    migration_name character varying(255) NOT NULL,
    logs text,
    rolled_back_at timestamp with time zone,
    started_at timestamp with time zone DEFAULT now() NOT NULL,
    applied_steps_count integer DEFAULT 0 NOT NULL
);


ALTER TABLE public._prisma_migrations OWNER TO mealrecommenderprod_user;

--
-- Name: dietary_restrictions; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.dietary_restrictions (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    name text NOT NULL,
    display_name text NOT NULL
);


ALTER TABLE public.dietary_restrictions OWNER TO mealrecommenderprod_user;

--
-- Name: dietary_restrictions_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.dietary_restrictions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.dietary_restrictions_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: dietary_restrictions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.dietary_restrictions_id_seq OWNED BY public.dietary_restrictions.id;


--
-- Name: ingredients; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.ingredients (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.ingredients OWNER TO mealrecommenderprod_user;

--
-- Name: ingredients_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.ingredients_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.ingredients_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: ingredients_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.ingredients_id_seq OWNED BY public.ingredients.id;


--
-- Name: recipe_dietary_restrictions; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.recipe_dietary_restrictions (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    recipe_id integer NOT NULL,
    dietary_restriction_id integer NOT NULL
);


ALTER TABLE public.recipe_dietary_restrictions OWNER TO mealrecommenderprod_user;

--
-- Name: recipe_dietary_restrictions_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.recipe_dietary_restrictions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recipe_dietary_restrictions_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: recipe_dietary_restrictions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.recipe_dietary_restrictions_id_seq OWNED BY public.recipe_dietary_restrictions.id;


--
-- Name: recipe_ingredients; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.recipe_ingredients (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    "recipeId" integer NOT NULL,
    "ingredientId" integer NOT NULL,
    quantity integer NOT NULL,
    unit text NOT NULL
);


ALTER TABLE public.recipe_ingredients OWNER TO mealrecommenderprod_user;

--
-- Name: recipe_ingredients_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.recipe_ingredients_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recipe_ingredients_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: recipe_ingredients_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.recipe_ingredients_id_seq OWNED BY public.recipe_ingredients.id;


--
-- Name: recipes; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.recipes (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    name text NOT NULL,
    instructions text NOT NULL
);


ALTER TABLE public.recipes OWNER TO mealrecommenderprod_user;

--
-- Name: recipes_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.recipes_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.recipes_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: recipes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.recipes_id_seq OWNED BY public.recipes.id;


--
-- Name: request_cache; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.request_cache (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    url text NOT NULL,
    method text NOT NULL,
    headers jsonb,
    body jsonb
);


ALTER TABLE public.request_cache OWNER TO mealrecommenderprod_user;

--
-- Name: request_cache_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.request_cache_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.request_cache_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: request_cache_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.request_cache_id_seq OWNED BY public.request_cache.id;


--
-- Name: request_response_cache; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.request_response_cache (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    "requestId" integer NOT NULL,
    "responseId" integer NOT NULL
);


ALTER TABLE public.request_response_cache OWNER TO mealrecommenderprod_user;

--
-- Name: request_response_cache_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.request_response_cache_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.request_response_cache_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: request_response_cache_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.request_response_cache_id_seq OWNED BY public.request_response_cache.id;


--
-- Name: response_cache; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.response_cache (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    status_code integer NOT NULL,
    headers jsonb,
    body jsonb
);


ALTER TABLE public.response_cache OWNER TO mealrecommenderprod_user;

--
-- Name: response_cache_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.response_cache_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.response_cache_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: response_cache_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.response_cache_id_seq OWNED BY public.response_cache.id;


--
-- Name: user_recipes; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.user_recipes (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    "userId" integer NOT NULL,
    "recipeId" integer NOT NULL
);


ALTER TABLE public.user_recipes OWNER TO mealrecommenderprod_user;

--
-- Name: user_recipes_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.user_recipes_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.user_recipes_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: user_recipes_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.user_recipes_id_seq OWNED BY public.user_recipes.id;


--
-- Name: users; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.users (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    email text NOT NULL,
    password text NOT NULL
);


ALTER TABLE public.users OWNER TO mealrecommenderprod_user;

--
-- Name: users_dietary_restrictions; Type: TABLE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE TABLE public.users_dietary_restrictions (
    id integer NOT NULL,
    created_at timestamp(3) without time zone DEFAULT CURRENT_TIMESTAMP NOT NULL,
    updated_at timestamp(3) without time zone NOT NULL,
    user_id integer NOT NULL,
    dietary_restriction_id integer NOT NULL
);


ALTER TABLE public.users_dietary_restrictions OWNER TO mealrecommenderprod_user;

--
-- Name: users_dietary_restrictions_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.users_dietary_restrictions_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_dietary_restrictions_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: users_dietary_restrictions_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.users_dietary_restrictions_id_seq OWNED BY public.users_dietary_restrictions.id;


--
-- Name: users_id_seq; Type: SEQUENCE; Schema: public; Owner: mealrecommenderprod_user
--

CREATE SEQUENCE public.users_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.users_id_seq OWNER TO mealrecommenderprod_user;

--
-- Name: users_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: mealrecommenderprod_user
--

ALTER SEQUENCE public.users_id_seq OWNED BY public.users.id;


--
-- Name: dietary_restrictions id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.dietary_restrictions ALTER COLUMN id SET DEFAULT nextval('public.dietary_restrictions_id_seq'::regclass);


--
-- Name: ingredients id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.ingredients ALTER COLUMN id SET DEFAULT nextval('public.ingredients_id_seq'::regclass);


--
-- Name: recipe_dietary_restrictions id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipe_dietary_restrictions ALTER COLUMN id SET DEFAULT nextval('public.recipe_dietary_restrictions_id_seq'::regclass);


--
-- Name: recipe_ingredients id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipe_ingredients ALTER COLUMN id SET DEFAULT nextval('public.recipe_ingredients_id_seq'::regclass);


--
-- Name: recipes id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipes ALTER COLUMN id SET DEFAULT nextval('public.recipes_id_seq'::regclass);


--
-- Name: request_cache id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.request_cache ALTER COLUMN id SET DEFAULT nextval('public.request_cache_id_seq'::regclass);


--
-- Name: request_response_cache id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.request_response_cache ALTER COLUMN id SET DEFAULT nextval('public.request_response_cache_id_seq'::regclass);


--
-- Name: response_cache id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.response_cache ALTER COLUMN id SET DEFAULT nextval('public.response_cache_id_seq'::regclass);


--
-- Name: user_recipes id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.user_recipes ALTER COLUMN id SET DEFAULT nextval('public.user_recipes_id_seq'::regclass);


--
-- Name: users id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.users ALTER COLUMN id SET DEFAULT nextval('public.users_id_seq'::regclass);


--
-- Name: users_dietary_restrictions id; Type: DEFAULT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.users_dietary_restrictions ALTER COLUMN id SET DEFAULT nextval('public.users_dietary_restrictions_id_seq'::regclass);


--
-- Data for Name: _prisma_migrations; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public._prisma_migrations (id, checksum, finished_at, migration_name, logs, rolled_back_at, started_at, applied_steps_count) FROM stdin;
16a5fee2-c07b-4ff3-bfc6-fc54c75a0285	b1303c3581de147e332cb06200791a58d24490da307722cdd4195eb84e93ff28	2023-08-20 10:41:52.373451+00	20230813152341_user_init	\N	\N	2023-08-20 10:41:52.357477+00	1
163c0e5b-805f-4aa6-871e-46a44bca8089	7e79879095e3790102bc3a8312f357a5f72f5b538d88b16b4c3fab00e636b5c7	2023-08-20 10:41:52.547377+00	20230814183223_food_models	\N	\N	2023-08-20 10:41:52.376389+00	1
2c79b333-d5e8-4dea-8c00-67a16ba2bb24	c27ddc0ea1d54f1b3250104a1a02dbc95d3375409a5592129599fd877f21ecec	2023-08-20 10:41:52.605943+00	20230815125433_request_response_cache	\N	\N	2023-08-20 10:41:52.550642+00	1
db197dec-f327-48e3-b09f-49d71d4cd25c	328c227287dbf8551ce5e21dabbada47f08ddfb4c2bd95bb764c2739db43ca51	2023-08-20 10:41:52.644118+00	20230816190059_dietary_restrictions	\N	\N	2023-08-20 10:41:52.609736+00	1
e86e2f9b-e03c-4b5b-b62c-f81f48a2bd6b	b7ada4df259cb1a66ab8e05d0100aadc04e31b5c7640639eb93afb0e55024134	2023-08-26 14:49:12.963545+00	20230824110939_recipe_metadata	\N	\N	2023-08-26 14:49:12.952781+00	1
\.


--
-- Data for Name: dietary_restrictions; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.dietary_restrictions (id, created_at, updated_at, name, display_name) FROM stdin;
1	2023-08-20 13:41:11.467	2023-08-20 13:41:11.467	low carb	Low Carb
2	2023-08-20 13:41:15.754	2023-08-20 13:41:15.754	keto	Keto
3	2023-08-20 13:41:20.734	2023-08-20 13:41:20.734	grain free	Grain Free
4	2023-08-20 15:33:43.855	2023-08-20 15:33:43.855	sugar	Sugar
5	2023-08-20 15:33:50.67	2023-08-20 15:33:50.67	eggs	Eggs
6	2023-08-20 15:34:14.78	2023-08-20 15:34:14.78	peach	Peach
7	2023-08-20 15:34:58.652	2023-08-20 15:34:58.652	blueberries	Blueberries
8	2023-08-20 17:12:52.05	2023-08-20 17:12:52.05	chicken	Chicken
9	2023-08-20 17:13:01.315	2023-08-20 17:13:01.315	no sugar	No Sugar
10	2023-08-22 15:57:28.059	2023-08-22 15:57:28.059	no grains	No Grains
11	2023-08-22 15:57:30.563	2023-08-22 15:57:30.563	sugar free	Sugar Free
12	2023-08-22 19:19:52.436	2023-08-22 19:19:52.436	olives	Olives
13	2023-08-22 19:20:00.228	2023-08-22 19:20:00.228	no olives	No Olives
14	2023-08-26 14:38:16.617	2023-08-26 14:38:16.617	soy	Soy
15	2023-08-26 14:38:21.273	2023-08-26 14:38:21.273	gluten	Gluten
16	2023-08-26 14:38:36.709	2023-08-26 14:38:36.709	no soy	No Soy
17	2023-08-26 14:38:39.835	2023-08-26 14:38:39.835	no gluten	No Gluten
18	2023-08-26 14:56:46.896	2023-08-26 14:56:46.896	add hamburg	Add Hamburg
19	2023-08-29 15:15:37.658	2023-08-29 15:15:37.658	calories	Calories
20	2023-08-29 15:15:43.639	2023-08-29 15:15:43.639	pineapple	Pineapple
21	2023-08-29 15:18:17.31	2023-08-29 15:18:17.31	goam	Goam
22	2023-08-29 15:18:25.279	2023-08-29 15:18:25.279	windex	Windex
23	2023-08-29 15:18:59.752	2023-08-29 15:18:59.752	bleach	Bleach
24	2023-08-29 15:19:08.937	2023-08-29 15:19:08.937	ammonia	Ammonia
25	2023-08-29 15:19:12.827	2023-08-29 15:19:12.827	meth	Meth
26	2023-08-29 15:19:35.902	2023-08-29 15:19:35.902	cocaine	Cocaine
27	2023-08-29 15:19:55.991	2023-08-29 15:19:55.991	motor oil	Motor Oil
28	2023-08-29 15:25:43.721	2023-08-29 15:25:43.721	low cholesterol	Low Cholesterol
29	2023-08-29 15:25:48.653	2023-08-29 15:25:48.653	gloom	Gloom
30	2023-08-29 15:25:59.964	2023-08-29 15:25:59.964	sundelions	Sundelions
31	2023-08-29 15:26:09.826	2023-08-29 15:26:09.826	sizzlefin trout	Sizzlefin Trout
32	2023-08-29 15:28:26.396	2023-08-29 15:28:26.396	no gloom	No Gloom
33	2023-08-29 15:28:45.42	2023-08-29 15:28:45.42	bleach free	Bleach Free
34	2023-08-29 15:28:58.564	2023-08-29 15:28:58.564	zero cannibalism	Zero Cannibalism
35	2023-08-29 15:29:08.862	2023-08-29 15:29:08.862	human hair	Human Hair
36	2023-08-29 15:56:12.196	2023-08-29 15:56:12.196	elon musk	Elon Musk
37	2023-08-29 15:56:17.737	2023-08-29 15:56:17.737	zuckerberg	Zuckerberg
\.


--
-- Data for Name: ingredients; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.ingredients (id, created_at, updated_at, name) FROM stdin;
3	2023-08-20 13:41:45.132	2023-08-20 13:41:45.132	frozen mixed vegetables
5	2023-08-20 13:41:45.239	2023-08-20 13:41:45.239	sesame seeds
10	2023-08-20 13:41:45.133	2023-08-20 13:41:45.133	tamari sauce
235	2023-08-29 15:25:34.673	2023-08-30 15:54:39.641	extra virgin olive oil
17	2023-08-20 13:46:39.934	2023-08-20 13:46:39.934	red pepper flakes
68	2023-08-20 17:13:23.766	2023-08-29 15:27:25.957	mushrooms
20	2023-08-20 13:46:39.934	2023-08-20 13:46:39.934	fresh basil
21	2023-08-20 13:47:41.275	2023-08-20 13:47:41.275	chicken wings
23	2023-08-20 13:47:41.275	2023-08-20 13:47:41.275	all-purpose flour
14	2023-08-20 13:46:39.934	2023-08-29 15:56:38.972	zucchini
29	2023-08-20 13:47:41.276	2023-08-20 13:47:41.276	chopped parsley
130	2023-08-26 14:57:14.268	2023-08-29 15:27:25.958	sour cream
32	2023-08-20 14:02:29.615	2023-08-20 14:02:29.615	fresh parsley
33	2023-08-20 14:02:29.52	2023-08-20 14:02:29.52	nutmeg
211	2023-08-29 15:23:08.83	2023-08-29 15:30:00.826	lime juice
120	2023-08-26 14:51:30.574	2023-08-26 14:51:30.574	green peas
37	2023-08-20 14:02:29.319	2023-08-20 14:02:29.319	heavy cream
38	2023-08-20 14:02:29.315	2023-08-20 14:02:29.315	parmesan cheese
39	2023-08-20 14:02:29.52	2023-08-20 14:02:29.52	cream cheese
40	2023-08-20 14:03:13.614	2023-08-20 14:03:13.614	cauliflower rice
43	2023-08-20 14:03:13.616	2023-08-20 14:03:13.616	chili powder
27	2023-08-20 13:47:41.276	2023-08-20 14:03:13.616	minced garlic
46	2023-08-20 14:03:13.616	2023-08-20 14:03:13.616	chopped green bell pepper
47	2023-08-20 14:03:13.615	2023-08-20 14:03:13.615	canned black beans
69	2023-08-20 17:13:23.765	2023-08-26 16:51:40.564	bell pepper
18	2023-08-20 13:46:39.934	2023-08-29 15:56:38.973	olive oil
123	2023-08-26 14:51:30.577	2023-08-26 14:51:30.577	spring onions
53	2023-08-20 14:03:13.616	2023-08-20 14:03:13.616	chopped red onion
54	2023-08-20 15:35:17.581	2023-08-20 15:35:17.581	blueberries
57	2023-08-20 15:35:17.583	2023-08-20 15:35:17.583	milk
58	2023-08-20 15:35:17.583	2023-08-20 15:35:17.583	yogurt
101	2023-08-22 19:20:46.472	2023-08-29 15:30:46.906	vegetable oil
165	2023-08-26 14:58:12.97	2023-08-30 15:54:39.641	red onion
11	2023-08-20 13:41:45.132	2023-08-26 14:51:30.577	eggs
63	2023-08-20 17:13:23.765	2023-08-20 17:13:23.765	broccoli florets
8	2023-08-20 13:41:44.933	2023-08-26 14:51:30.577	sesame oil
24	2023-08-20 13:47:41.276	2023-08-26 15:04:35.201	grated Parmesan cheese
70	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Tofu
71	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Broccoli
72	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Ginger
73	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Garlic
74	2023-08-20 17:27:29.351	2023-08-20 17:27:29.351	Salt
75	2023-08-20 17:27:29.352	2023-08-20 17:27:29.352	Curry powder
76	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Coconut milk
77	2023-08-20 17:27:29.35	2023-08-20 17:27:29.35	Onion
78	2023-08-20 17:27:29.35	2023-08-20 17:27:29.35	Black pepper
79	2023-08-20 17:27:29.352	2023-08-20 17:27:29.352	Soy sauce
80	2023-08-20 17:27:29.348	2023-08-20 17:27:29.348	Bell pepper
81	2023-08-20 17:27:29.347	2023-08-20 17:27:29.347	Carrot
82	2023-08-20 17:27:29.348	2023-08-20 17:27:29.348	Olive oil
198	2023-08-26 15:04:35.2	2023-08-26 15:04:35.2	fresh basil leaves
199	2023-08-26 15:04:35.2	2023-08-26 15:04:35.2	pine nuts
92	2023-08-22 19:20:46.469	2023-08-22 19:20:46.469	cornstarch
22	2023-08-20 13:47:41.275	2023-08-29 15:27:41.121	garlic powder
84	2023-08-22 15:57:55.829	2023-08-22 19:20:46.477	broccoli
55	2023-08-20 15:35:17.583	2023-08-29 15:23:08.833	honey
4	2023-08-20 13:41:44.944	2023-08-22 19:20:46.661	green onions
117	2023-08-26 14:51:30.574	2023-08-29 15:30:46.907	cauliflower
103	2023-08-22 19:20:46.565	2023-08-22 19:20:46.565	hoisin sauce
102	2023-08-22 19:20:46.482	2023-08-22 19:20:46.482	snow peas
13	2023-08-20 13:46:39.934	2023-08-26 14:57:54.885	shrimp
105	2023-08-22 19:20:46.661	2023-08-22 19:20:46.661	chicken broth
85	2023-08-22 15:57:55.831	2023-08-26 14:57:54.886	lemon
151	2023-08-26 14:57:44.938	2023-08-26 14:57:54.886	parsley
111	2023-08-26 14:50:52.946	2023-08-26 14:50:52.946	cheddar cheese
112	2023-08-26 14:50:52.945	2023-08-26 14:50:52.945	cooked rice
231	2023-08-29 15:25:34.672	2023-08-29 15:25:34.672	tomatoes
137	2023-08-26 14:57:14.268	2023-08-26 14:57:14.268	shredded cheese
138	2023-08-26 14:57:26.242	2023-08-26 14:57:26.242	flour tortillas
42	2023-08-20 14:03:13.614	2023-08-26 14:57:26.242	ground beef
135	2023-08-26 14:57:14.269	2023-08-26 14:57:26.242	taco seasoning
131	2023-08-26 14:57:14.268	2023-08-26 14:57:26.243	shredded lettuce
49	2023-08-20 14:03:13.617	2023-08-26 14:57:26.243	diced tomatoes
41	2023-08-20 14:03:13.614	2023-08-26 14:57:26.243	salsa
45	2023-08-20 14:03:13.615	2023-08-26 14:57:26.243	shredded cheddar cheese
146	2023-08-26 14:57:26.243	2023-08-26 14:57:26.243	guacamole
25	2023-08-20 13:47:41.276	2023-08-26 14:57:54.886	butter
177	2023-08-26 14:58:35.29	2023-08-26 14:59:26.126	yellow bell pepper
209	2023-08-26 16:51:40.566	2023-08-30 15:54:39.641	feta cheese
108	2023-08-26 14:50:52.94	2023-08-26 14:58:12.97	bell peppers
168	2023-08-26 14:58:12.97	2023-08-26 14:59:26.126	chicken breasts
236	2023-08-29 15:25:34.673	2023-08-30 15:54:39.641	kalamata olives
167	2023-08-26 14:58:12.971	2023-08-26 14:58:12.971	balsamic vinegar
214	2023-08-29 15:23:08.832	2023-08-29 15:23:08.832	almond milk
204	2023-08-26 16:51:40.562	2023-08-30 15:54:39.641	cucumber
194	2023-08-26 15:04:35.201	2023-08-26 15:04:35.201	extra-virgin olive oil
230	2023-08-29 15:25:34.671	2023-08-30 15:54:39.64	romaine lettuce
210	2023-08-29 15:23:08.827	2023-08-29 15:23:08.827	fresh mint leaves
56	2023-08-20 15:35:17.632	2023-08-29 15:23:08.836	ice cubes
216	2023-08-29 15:23:08.83	2023-08-29 15:23:08.83	banana
217	2023-08-29 15:23:08.828	2023-08-29 15:23:08.828	spinach
136	2023-08-26 14:57:14.269	2023-08-29 15:24:45.38	tortillas
95	2023-08-22 19:20:46.481	2023-08-29 15:27:36.087	carrot
201	2023-08-26 16:51:40.563	2023-08-30 15:54:39.641	tomato
115	2023-08-26 14:50:52.944	2023-08-29 15:30:00.826	garlic cloves
30	2023-08-20 14:02:29.244	2023-08-30 15:54:39.639	chicken breast
223	2023-08-29 15:24:45.38	2023-08-29 15:24:45.38	cumin
224	2023-08-29 15:24:45.38	2023-08-29 15:24:45.38	black beans
9	2023-08-20 13:41:44.924	2023-08-29 15:30:00.826	cauliflower florets
226	2023-08-29 15:24:45.38	2023-08-29 15:24:45.38	avocado
227	2023-08-29 15:24:45.38	2023-08-29 15:24:45.38	lime
203	2023-08-26 16:51:40.566	2023-08-30 15:54:39.642	lemon juice
109	2023-08-26 14:50:52.944	2023-08-29 15:26:55.799	paprika
119	2023-08-26 14:51:30.574	2023-08-29 15:30:46.906	carrots
7	2023-08-20 13:41:44.937	2023-08-29 15:30:46.906	ginger
180	2023-08-26 14:58:35.29	2023-08-29 15:30:46.906	red bell pepper
52	2023-08-20 14:03:13.617	2023-08-29 15:30:46.907	ground cumin
15	2023-08-20 13:46:39.934	2023-08-29 15:30:46.907	cherry tomatoes
245	2023-08-29 15:26:55.798	2023-08-29 15:26:55.798	tomato paste
60	2023-08-20 17:13:24.061	2023-08-29 15:26:55.798	soy sauce
259	2023-08-29 15:27:25.957	2023-08-29 15:27:25.957	bay leaves
267	2023-08-29 15:27:25.958	2023-08-29 15:27:25.958	liquid smoke
250	2023-08-29 15:26:55.798	2023-08-29 15:27:36.086	beef
253	2023-08-29 15:26:55.798	2023-08-29 15:27:36.087	potato
256	2023-08-29 15:27:25.957	2023-08-29 15:27:36.087	thyme
273	2023-08-29 15:27:36.087	2023-08-29 15:27:36.087	red wine
242	2023-08-29 15:26:55.798	2023-08-29 15:27:36.087	beef broth
282	2023-08-29 15:27:41.121	2023-08-29 15:27:41.121	fresh herbs (such as rosemary, thyme, or oregano)
286	2023-08-29 15:30:00.826	2023-08-29 15:30:00.826	turmeric
302	2023-08-29 15:30:00.826	2023-08-29 15:30:00.826	pepper
133	2023-08-26 14:57:14.267	2023-08-29 15:30:46.905	flour
298	2023-08-29 15:30:00.826	2023-08-29 15:30:46.906	sweet potato
295	2023-08-29 15:30:00.826	2023-08-29 15:30:46.907	coconut milk
310	2023-08-29 15:30:46.907	2023-08-29 15:30:46.907	ground turmeric
312	2023-08-29 15:30:46.907	2023-08-29 15:30:46.907	ground cinnamon
67	2023-08-20 17:13:23.766	2023-08-29 15:30:46.906	onion
289	2023-08-29 15:30:00.826	2023-08-29 15:30:46.907	cayenne pepper
260	2023-08-29 15:27:25.957	2023-08-29 15:30:46.907	vegetable broth
301	2023-08-29 15:30:00.826	2023-08-29 15:30:46.907	fresh cilantro
299	2023-08-29 15:30:00.826	2023-08-29 15:30:46.907	curry powder
290	2023-08-29 15:30:00.826	2023-08-29 15:30:46.907	ground coriander
1	2023-08-20 13:41:44.933	2023-08-29 15:56:38.974	garlic
176	2023-08-26 14:58:35.291	2023-08-30 15:54:39.641	dried oregano
2	2023-08-20 13:41:45.237	2023-08-30 15:54:39.642	salt
6	2023-08-20 13:41:45.239	2023-08-30 15:54:39.642	black pepper
\.


--
-- Data for Name: recipe_dietary_restrictions; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.recipe_dietary_restrictions (id, created_at, updated_at, recipe_id, dietary_restriction_id) FROM stdin;
1	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	1
2	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	10
3	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	11
4	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	13
5	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	1
6	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	10
7	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	11
8	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	13
9	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	16
10	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	17
11	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	18
12	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	16
13	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	17
14	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	16
15	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	17
16	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	16
17	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	17
18	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	16
19	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	17
20	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	16
21	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	17
22	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	16
23	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	17
24	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	1
25	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	10
26	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	11
27	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	13
28	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	1
29	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	10
30	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	11
31	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	13
32	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	22
33	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	23
34	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	24
35	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	25
36	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	26
37	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	27
38	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	22
39	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	23
40	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	24
41	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	25
42	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	26
43	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	27
44	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	29
45	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	30
46	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	31
47	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	28
48	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	1
49	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	10
50	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	11
51	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	13
52	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	28
53	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	32
54	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	33
55	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	34
56	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	35
57	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	36
58	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	37
59	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	1
60	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	10
61	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	11
\.


--
-- Data for Name: recipe_ingredients; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.recipe_ingredients (id, created_at, updated_at, "recipeId", "ingredientId", quantity, unit) FROM stdin;
1	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	9	1	cups
2	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	8	1	tablespoon
3	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	1	2	cloves
4	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	7	1	teaspoon
5	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	4	3	stalks
6	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	3	0	cup
7	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	10	2	tablespoons
8	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	11	2	large
9	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	2	1	teaspoon
10	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	6	0	teaspoon
11	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	1	5	1	tablespoon
12	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	21	2	pounds
13	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	23	0	cup
14	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	22	1	teaspoon
15	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	2	1	teaspoon
16	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	6	0	teaspoon
17	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	25	4	tablespoons
18	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	27	2	teaspoons
19	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	24	0	cup
20	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	3	29	2	tablespoons
21	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	30	2	pieces
22	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	18	2	tablespoons
23	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	2	1	teaspoon
24	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	6	1	teaspoon
25	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	22	1	teaspoon
26	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	37	1	cup
27	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	39	4	ounces
28	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	38	1	cup
29	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	33	1	teaspoon
30	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	4	32	2	tablespoons
31	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	42	1	lbs
32	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	40	4	cups
33	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	41	1	cup
34	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	47	1	cup
35	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	45	1	cups
36	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	49	1	cup
37	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	46	1	cup
38	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	53	0	cup
39	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	27	2	cloves
40	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	43	2	tbsp
41	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	52	1	tbsp
42	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	2	1	tsp
43	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	6	0	tsp
44	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	5	18	1	tbsp
45	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	6	54	1	cup
46	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	6	58	1	cup
47	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	6	57	1	cup
48	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	6	55	1	tablespoon
49	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	6	56	5	count
50	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	30	1	lb
51	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	63	2	cups
52	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	69	1	count
53	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	68	1	cup
54	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	67	1	count
55	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	1	2	cloves
56	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	7	1	inch
57	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	60	3	tablespoons
58	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	8	1	tablespoon
59	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	18	2	tablespoons
60	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	7	2	0	teaspoon
61	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	70	1	block
62	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	71	2	cup
63	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	80	1	piece
64	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	81	2	piece
65	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	77	1	piece
66	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	73	2	clove
67	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	72	1	inch
68	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	76	1	can
69	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	75	2	teaspoon
70	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	79	2	tablespoon
71	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	74	1	teaspoon
72	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	78	0	teaspoon
73	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	8	82	1	tablespoon
74	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	13	1	pound
75	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	84	2	cups
76	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	1	2	cloves
77	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	85	1	whole
78	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	18	2	tablespoons
79	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	2	0	teaspoon
80	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	9	6	0	teaspoon
81	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	30	2	pieces
82	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	60	2	tablespoons
83	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	92	1	tablespoon
84	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	8	1	tablespoon
85	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	101	2	tablespoons
86	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	1	3	cloves
87	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	7	1	tablespoon
88	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	69	1	piece
89	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	84	1	head
90	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	95	1	piece
91	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	102	0	cup
92	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	105	0	cup
93	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	103	2	tablespoons
94	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	2	0	teaspoon
95	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	6	0	teaspoon
96	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	10	4	2	stalks
97	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	108	4	large
98	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	42	1	pound
99	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	67	1	medium
100	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	115	2	cloves
101	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	112	1	cup
102	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	49	1	can
103	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	111	1	cup
104	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	2	1	teaspoon
105	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	6	0	teaspoon
106	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	109	0	teaspoon
107	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	11	18	2	tablespoons
108	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	117	1	head
109	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	119	2	medium
110	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	120	0	cup
111	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	67	1	medium
112	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	115	2	cloves
113	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	7	1	teaspoon
114	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	60	2	tablespoons
115	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	8	1	tablespoon
116	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	11	2	large
117	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	123	2	stalks
118	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	101	2	tablespoons
119	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	2	0	teaspoon
120	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	12	6	0	teaspoon
121	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	133	0	cup
122	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	42	1	pound
123	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	49	1	cup
124	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	131	1	cup
125	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	137	1	cup
126	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	130	0	cup
127	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	135	1	packet
128	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	13	136	8	pieces
129	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	42	1	pound
130	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	135	2	tablespoons
131	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	138	8	pieces
132	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	131	2	cups
133	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	49	1	cup
134	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	45	1	cup
135	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	130	1	cup
136	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	41	1	cup
137	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	14	146	1	cup
138	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	13	1	pound
139	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	85	2	medium
140	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	115	4	large
141	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	25	4	tablespoons
142	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	18	2	tablespoons
143	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	2	1	teaspoon
144	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	6	0	teaspoon
145	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	15	151	1	tablespoon
146	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	13	1	pound
147	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	1	4	cloves
148	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	85	1	count
149	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	25	4	tablespoons
150	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	18	2	tablespoons
151	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	2	0	teaspoon
152	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	6	0	teaspoon
153	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	16	151	2	tablespoons
154	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	168	2	pieces
155	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	108	2	pieces
156	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	14	1	piece
157	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	165	1	piece
158	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	18	2	tablespoons
159	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	167	2	tablespoons
160	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	1	2	cloves
161	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	2	1	teaspoon
162	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	17	6	1	teaspoon
163	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	168	2	count
164	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	14	2	count
165	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	180	1	count
166	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	177	1	count
167	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	165	1	count
168	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	18	2	tablespoons
169	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	1	2	cloves
170	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	176	1	teaspoon
171	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	2	1	teaspoons
172	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	18	6	0	teaspoon
173	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	168	4	pieces
174	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	180	1	piece
175	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	177	1	piece
176	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	14	1	piece
177	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	165	1	piece
178	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	18	2	tablespoons
179	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	2	1	teaspoon
180	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	6	1	teaspoon
181	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	22	1	teaspoon
182	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	19	109	1	teaspoon
183	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	14	2	medium
184	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	198	2	cups
185	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	199	1	cup
186	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	115	2	cloves
187	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	194	0	cup
188	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	24	0	cup
189	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	2	1	teaspoon
190	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	20	6	0	teaspoon
191	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	204	1	medium
192	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	201	4	medium
193	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	165	0	small
194	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	69	1	medium
195	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	209	200	grams
196	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	18	2	tablespoons
197	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	203	1	tablespoon
198	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	176	1	teaspoon
199	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	2	0	teaspoon
200	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	21	6	0	teaspoon
201	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	210	8	leaves
202	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	217	1	cup
203	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	204	1	medium
204	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	216	1	large
205	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	211	2	tablespoons
206	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	55	1	tablespoon
207	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	214	1	cup
208	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	22	56	1	cup
209	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	133	0	cup
210	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	224	1	can
211	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	67	1	medium
212	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	1	2	cloves
213	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	223	1	teaspoon
214	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	109	1	teaspoon
215	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	2	0	teaspoon
216	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	6	0	teaspoon
217	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	18	2	tablespoons
218	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	136	4	medium
219	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	226	1	large
220	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	23	227	1	medium
221	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	230	1	head
222	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	204	1	large
223	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	231	2	large
224	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	165	0	medium
225	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	236	0	cup
226	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	209	0	cup
227	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	235	2	tablespoons
228	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	203	1	tablespoon
229	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	1	2	cloves
230	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	176	1	teaspoon
231	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	2	1	teaspoon
232	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	24	6	0	teaspoon
233	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	250	1	pound
234	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	67	1	medium
235	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	95	2	medium
236	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	253	2	medium
237	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	1	2	cloves
238	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	242	4	cups
239	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	245	2	tablespoons
240	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	60	1	tablespoon
241	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	133	2	tablespoons
242	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	2	1	teaspoon
243	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	6	1	teaspoon
244	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	25	109	1	teaspoon
245	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	133	0	cup
246	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	18	2	tablespoons
247	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	67	1	medium
248	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	1	2	cloves
249	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	95	1	medium
250	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	253	2	large
251	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	68	8	ounces
252	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	260	4	cups
253	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	256	1	teaspoon
254	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	259	2	leaves
255	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	2	1	teaspoon
256	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	6	0	teaspoon
257	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	267	1	teaspoon
258	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	26	130	0	cup
259	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	250	1	pound
260	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	67	1	large
261	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	95	2	medium
262	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	253	2	large
263	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	201	2	medium
264	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	1	4	cloves
265	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	242	4	cups
266	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	273	0	cup
267	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	256	1	teaspoon
268	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	2	1	teaspoon
269	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	6	0	teaspoon
270	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	27	18	2	tablespoons
271	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	30	2	pieces
272	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	18	2	tablespoons
273	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	282	2	teaspoons
274	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	22	1	teaspoon
275	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	2	1	teaspoon
276	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	28	6	1	teaspoon
277	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	101	2	tablespoons
278	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	67	1	large
279	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	115	3	cloves
280	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	7	1	inch
281	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	299	2	teaspoons
282	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	286	1	teaspoon
283	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	52	1	teaspoon
284	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	290	1	teaspoon
285	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	289	1	teaspoon
286	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	119	2	large
287	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	298	1	large
288	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	9	2	cups
289	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	295	1	can (14 oz)
290	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	260	1	cups
291	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	2	1	teaspoon
292	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	302	0	teaspoon
293	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	211	1	tablespoon
294	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	29	301	2	tablespoons
295	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	133	0	cup
296	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	101	2	tablespoons
297	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	67	1	large
298	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	1	3	cloves
299	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	7	1	inch
300	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	180	1	count
301	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	119	2	count
302	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	298	1	large
303	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	117	1	small head
304	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	299	2	tablespoons
305	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	310	1	teaspoon
306	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	52	1	teaspoon
307	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	290	1	teaspoon
308	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	312	0	teaspoon
309	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	289	0	teaspoon
310	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	295	1	cups
311	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	260	0	cup
312	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	15	1	cup
313	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	301	0	cup
314	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	2	1	teaspoon
315	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	30	6	0	teaspoon
316	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	14	2	count
317	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	18	2	tbsp
318	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	1	2	cloves
319	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	31	2	0	tsp
320	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	30	2	pieces
321	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	230	1	head
322	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	204	1	piece
323	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	165	0	piece
324	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	201	1	piece
325	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	236	0	cup
326	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	209	0	cup
327	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	235	2	tablespoons
328	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	203	2	tablespoons
329	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	176	1	teaspoon
330	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	2	1	teaspoon
331	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	32	6	0	teaspoon
\.


--
-- Data for Name: recipes; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.recipes (id, created_at, updated_at, name, instructions) FROM stdin;
1	2023-08-20 13:41:44.919	2023-08-20 13:41:44.919	Keto Cauliflower Fried Rice	1. Place the cauliflower florets in a food processor and pulse until they resemble rice-like grains. Set aside.\n\n2. Heat the sesame oil in a large skillet or wok over medium heat.\n\n3. Add the garlic and ginger to the skillet and cook for 1 minute, until fragrant.\n\n4. Add the green onions and frozen mixed vegetables to the skillet and cook for 3-4 minutes, until the vegetables are heated through.\n\n5. Push the vegetables to one side of the skillet and add the cauliflower rice to the empty side. Cook for 5-6 minutes, stirring occasionally, until the cauliflower is tender.\n\n6. In a small bowl, whisk the tamari sauce with the eggs, salt, and black pepper.\n\n7. Push the cauliflower rice to one side of the skillet again and pour the tamari sauce mixture into the empty side. Let it cook for a minute, then scramble the eggs with a spatula and mix them with the cauliflower rice and vegetables.\n\n8. Remove from heat and sprinkle with sesame seeds.\n\n9. Serve the keto cauliflower fried rice hot as a delicious low-carb side dish or main course.
3	2023-08-20 13:47:41.271	2023-08-20 13:47:41.271	Garlic Parmesan Chicken Wings	1. Preheat the oven to 425°F (220°C). Line a baking sheet with foil and place a wire rack on top.\n\n2. In a shallow dish, combine the flour, garlic powder, salt, and black pepper. Dredge the chicken wings in the flour mixture, making sure to coat them evenly.\n\n3. Place the coated wings on the wire rack and bake for 40-45 minutes, or until they are crispy and cooked through.\n\n4. While the wings are baking, melt the butter in a small saucepan over medium heat. Add the minced garlic and cook for 1-2 minutes, until fragrant.\n\n5. Remove the wings from the oven and transfer them to a large bowl. Pour the melted garlic butter over the wings and toss to coat.\n\n6. Sprinkle the grated Parmesan cheese and chopped parsley over the wings and toss again to evenly distribute.\n\n7. Serve the garlic Parmesan chicken wings hot and enjoy!
4	2023-08-20 14:02:29.239	2023-08-20 14:02:29.239	Keto Chicken Alfredo	1. Preheat the oven to 400°F (200°C).\n2. Season the chicken breasts with salt, black pepper, and garlic powder.\n3. Heat olive oil in an oven-safe skillet over medium-high heat.\n4. Add the chicken breasts to the skillet and cook for 3-4 minutes on each side until browned.\n5. Transfer the skillet to the preheated oven and bake for about 15 minutes or until the chicken is cooked through.\n6. Remove the skillet from the oven and transfer the chicken to a plate. Let it rest for a few minutes, then slice it.\n7. In the same skillet, add heavy cream and cream cheese. Cook over medium heat, stirring frequently, until the cream cheese is melted and the sauce is smooth.\n8. Stir in parmesan cheese and nutmeg until well combined and creamy.\n9. Return the sliced chicken to the skillet and cook for another 2-3 minutes until heated through.\n10. Serve the chicken Alfredo topped with fresh parsley.\nEnjoy your Keto Chicken Alfredo!
5	2023-08-20 14:03:13.535	2023-08-20 14:03:13.535	Low Carb Mexican Casserole	1. Preheat the oven to 375°F (190°C).\n2. In a large skillet, heat olive oil over medium heat. Add minced garlic and sauté for 1-2 minutes.\n3. Add ground beef to the skillet and cook until browned. Drain excess grease.\n4. Stir in chili powder, ground cumin, salt, and black pepper.\n5. Add diced tomatoes, chopped green bell pepper, and chopped red onion. Cook for 5 minutes.\n6. Stir in cauliflower rice, salsa, and canned black beans. Cook for another 5 minutes.\n7. Transfer the mixture to a casserole dish and spread it evenly.\n8. Sprinkle shredded cheddar cheese on top.\n9. Bake in the preheated oven for 20-25 minutes, or until the cheese is melted and bubbly.\n10. Remove from the oven and let it cool for a few minutes before serving.\n11. Enjoy your Low Carb Mexican Casserole!
6	2023-08-20 15:35:17.578	2023-08-20 15:35:17.578	Blueberry Smoothie	1. Place the blueberries, yogurt, milk, honey, and ice cubes in a blender.\n2. Blend until smooth and creamy.\n3. Pour into glasses and serve immediately.
7	2023-08-20 17:13:23.758	2023-08-20 17:13:23.758	Low Carb Chicken Stir Fry	1. Slice the chicken breast into thin strips.\n2. Chop the broccoli florets, bell pepper, mushrooms, onion, garlic, and ginger.\n3. In a small bowl, mix together soy sauce, sesame oil, and salt.\n4. Heat olive oil in a large skillet or wok over medium-high heat.\n5. Add the chicken and stir-fry until cooked through, about 5-6 minutes.\n6. Remove the chicken from the skillet and set aside.\n7. In the same skillet, add the vegetables and stir-fry for 3-4 minutes until tender-crisp.\n8. Add the cooked chicken back to the skillet.\n9. Pour the soy sauce mixture over the chicken and vegetables.\n10. Stir-fry for an additional 2-3 minutes until everything is well coated and heated through.\n11. Serve hot and enjoy!
8	2023-08-20 17:27:29.343	2023-08-20 17:27:29.343	Vegan Curry Stir-Fry	1. Press tofu to remove excess water, then cut into cubes.\n2. Heat olive oil in a large pan or wok over medium heat.\n3. Add tofu to the pan and cook until golden brown on all sides.\n4. Remove tofu from the pan and set aside.\n5. In the same pan, add chopped onion, minced garlic, and grated ginger. Saute for 2 minutes.\n6. Add chopped bell pepper, carrot, and broccoli to the pan. Stir-fry for 5 minutes.\n7. In a separate bowl, mix coconut milk, curry powder, soy sauce, salt, and black pepper.\n8. Pour the sauce mixture into the pan with the vegetables and stir well.\n9. Add the cooked tofu back to the pan and stir-fry for an additional 2 minutes.\n10. Serve the vegan curry stir-fry over rice or noodles.\n
9	2023-08-22 15:57:55.817	2023-08-22 15:57:55.817	Lemon Garlic Shrimp with Broccoli	1. In a large skillet, heat olive oil over medium heat.\n2. Add minced garlic and cook for 1-2 minutes until fragrant.\n3. Add shrimp to the skillet and cook for 2-3 minutes on each side until pink and opaque.\n4. Squeeze the juice of one lemon over the shrimp.\n5. Season with salt and black pepper.\n6. In a separate pot, steam the broccoli until tender, about 5 minutes.\n7. Serve the lemon garlic shrimp with the steamed broccoli.\n8. Optional: garnish with lemon slices and chopped parsley.
10	2023-08-22 19:20:46.461	2023-08-22 19:20:46.461	Chicken Stir-Fry with Vegetables	1. In a bowl, mix soy sauce, cornstarch, and sesame oil. Add chicken, toss to coat, and marinate for 15 minutes.\n\n2. Heat vegetable oil in a pan over medium-high heat. Add garlic and ginger, and stir-fry for 1 minute.\n\n3. Add marinated chicken and stir-fry until cooked, about 5-7 minutes. Remove from pan and set aside.\n\n4. In the same pan, add bell pepper, broccoli, carrot, and snow peas. Stir-fry for 3-4 minutes.\n\n5. In a small bowl, mix chicken broth and hoisin sauce. Pour into the pan with vegetables.\n\n6. Return cooked chicken to the pan and stir to combine. Season with salt and black pepper.\n\n7. Cook for another 2-3 minutes, until the sauce thickens.\n\n8. Serve hot, garnished with chopped green onions.
11	2023-08-26 14:50:52.932	2023-08-26 14:50:52.932	Stuffed Bell Peppers	1. Preheat the oven to 350°F (175°C).\n2. Cut off the tops of the bell peppers and remove the seeds and membranes inside.\n3. In a large skillet, heat the olive oil over medium heat.\n4. Add the onion and garlic cloves to the skillet and cook until the onion is translucent.\n5. Add the ground beef to the skillet and cook until browned.\n6. Stir in the cooked rice, diced tomatoes, salt, black pepper, and paprika.\n7. Fill each bell pepper with the ground beef mixture and place them upright in a baking dish.\n8. Sprinkle cheddar cheese evenly over the stuffed peppers.\n9. Cover the baking dish with foil and bake for 30 minutes.\n10. Remove the foil and bake for an additional 10 minutes or until the peppers are tender.\n11. Serve hot and enjoy!
12	2023-08-26 14:51:30.569	2023-08-26 14:51:30.569	Cauliflower Fried Rice	1. Cut the cauliflower into florets and pulse them in a food processor until they resemble rice grains. Set aside.\n2. Peel and finely chop the carrots, dice the onion, mince the garlic cloves, grate the ginger, and chop the spring onions.\n3. Heat 1 tablespoon of vegetable oil in a large skillet or wok over medium heat.\n4. Add the chopped onion and cook until translucent, about 2 minutes.\n5. Add the minced garlic and grated ginger, and cook for another 1 minute.\n6. Push the onion, garlic, and ginger mixture to one side of the skillet and crack the eggs into the empty space. Scramble the eggs using a spatula until they are cooked through.\n7. Add the chopped carrots and green peas to the skillet and cook for 2-3 minutes, stirring occasionally.\n8. Add the cauliflower rice to the skillet and stir to combine all the ingredients.\n9. Add soy sauce, sesame oil, salt, and black pepper to the skillet. Stir well to coat the cauliflower rice evenly with the sauce.\n10. Cook for another 3-4 minutes, stirring occasionally, until the cauliflower rice is tender but not mushy.\n11. Garnish with chopped spring onions and serve hot. Enjoy!
13	2023-08-26 14:57:14.263	2023-08-26 14:57:14.263	Hamburg Tacos	1. In a large skillet, brown the ground beef over medium heat.\n2. Drain any excess grease from the skillet.\n3. Add the taco seasoning and diced tomatoes to the skillet. Stir well.\n4. Simmer for 5-10 minutes until the flavors are well combined.\n5. Warm the tortillas in a separate skillet or in the microwave.\n6. Place a scoop of the ground beef mixture onto each tortilla.\n7. Top with shredded lettuce, shredded cheese, and sour cream.\n8. Fold the tortilla over the filling to form a taco.\n9. Serve and enjoy!
14	2023-08-26 14:57:26.239	2023-08-26 14:57:26.239	Hamburg Tacos	1. In a large skillet, cook the ground beef over medium heat until browned. Drain any excess grease.\n2. Stir in the taco seasoning and cook for an additional 2-3 minutes.\n3. Warm the flour tortillas in a dry skillet or microwave until pliable.\n4. Divide the ground beef mixture evenly among the tortillas.\n5. Top with shredded lettuce, diced tomatoes, shredded cheddar cheese, sour cream, salsa, and guacamole.\n6. Fold the tortillas in half and serve immediately.
15	2023-08-26 14:57:44.931	2023-08-26 14:57:44.931	Lemon Garlic Shrimp	1. Peel and devein the shrimp.\n2. Mince the garlic cloves.\n3. Juice one lemon.\n4. Cut the other lemon into wedges.\n5. In a large skillet, melt the butter and olive oil over medium heat.\n6. Add the minced garlic and sauté for 1-2 minutes until fragrant.\n7. Add the shrimp to the skillet and cook for 2-3 minutes per side until pink and opaque.\n8. Season with salt and black pepper.\n9. Pour the lemon juice over the shrimp and cook for an additional minute.\n10. Remove from heat and sprinkle with chopped parsley.\n11. Serve with lemon wedges and enjoy!
16	2023-08-26 14:57:54.88	2023-08-26 14:57:54.88	Lemon Garlic Shrimp	1. Peel and devein the shrimp.\n2. Mince the garlic.\n3. Juice the lemon.\n4. In a large skillet, heat the butter and olive oil over medium heat.\n5. Add the minced garlic and sauté for 1-2 minutes.\n6. Add the shrimp, salt, and black pepper to the skillet, and cook until the shrimp are pink and cooked through, about 3-4 minutes per side.\n7. Remove the skillet from heat and stir in the lemon juice.\n8. Sprinkle with parsley and serve hot.
17	2023-08-26 14:58:12.966	2023-08-26 14:58:12.966	Grilled Chicken with Roasted Vegetables	1. Preheat the grill to medium-high heat.\n\n2. Season the chicken breasts with 1/2 teaspoon of salt and 1/2 teaspoon of black pepper.\n\n3. In a mixing bowl, combine olive oil, balsamic vinegar, minced garlic, 1/2 teaspoon of salt, and 1/2 teaspoon of black pepper.\n\n4. Slice the bell peppers, zucchini, and red onion into thick strips.\n\n5. Toss the sliced vegetables with the prepared marinade.\n\n6. Grill the chicken breasts for about 6-8 minutes on each side or until cooked through.\n\n7. While the chicken is grilling, place the marinated vegetables onto a grill pan or vegetable grill basket.\n\n8. Grill the vegetables for 10-12 minutes, turning occasionally, until they are tender and lightly charred.\n\n9. Remove the chicken and vegetables from the grill and let them rest for a few minutes.\n\n10. Serve the grilled chicken with roasted vegetables on the side.\n\nEnjoy your delicious grilled chicken with roasted vegetables!
18	2023-08-26 14:58:35.283	2023-08-26 14:58:35.283	Grilled Chicken with Roasted Vegetables	1. Preheat the grill to medium-high heat.\n\n2. In a small bowl, mix together the olive oil, minced garlic, dried oregano, salt, and black pepper.\n\n3. Place the chicken breasts in a shallow dish and brush both sides with the marinade.\n\n4. Cut the zucchini, red bell pepper, yellow bell pepper, and red onion into bite-sized pieces.\n\n5. Place the vegetables in a large bowl and toss with the remaining marinade.\n\n6. Thread the chicken and vegetables onto skewers, alternating between chicken and vegetables.\n\n7. Grill the skewers for about 10-12 minutes, turning occasionally, until the chicken is cooked through and the vegetables are tender.\n\n8. Remove from the grill and let the skewers rest for a few minutes before serving.\n\n9. Serve the grilled chicken skewers with the roasted vegetables. Enjoy!
19	2023-08-26 14:59:26.12	2023-08-26 14:59:26.12	Grilled Chicken with Roasted Vegetables	1. Preheat grill to medium-high heat.\n2. Cut the red and yellow bell peppers, zucchini, and red onion into thick slices.\n3. In a large bowl, toss the sliced vegetables with olive oil, salt, black pepper, garlic powder, and paprika until evenly coated.\n4. Place the chicken breasts on the preheated grill and cook for about 6-8 minutes per side, or until the internal temperature reaches 165°F.\n5. While the chicken is cooking, arrange the seasoned vegetables on a grill pan or directly on the grill grates.\n6. Grill the vegetables for about 6-8 minutes, or until they are tender and slightly charred.\n7. Remove the chicken and vegetables from the grill.\n8. Serve the grilled chicken with the roasted vegetables.\n9. Enjoy!
20	2023-08-26 15:04:35.198	2023-08-26 15:04:35.198	Zucchini Noodles with Pesto	1. Create zucchini noodles using a spiralizer or julienne peeler.\n2. In a food processor, add the basil, pine nuts, garlic, Parmesan cheese, salt, and black pepper. Pulse until roughly chopped.\n3. With the food processor running, slowly pour in the olive oil until the mixture is well combined and reaches a pesto consistency.\n4. Heat a large skillet over medium heat. Add the zucchini noodles and cook for 3-5 minutes, tossing occasionally, until tender.\n5. Remove the skillet from heat and toss the zucchini noodles with the pesto sauce until well coated.\n6. Serve immediately and garnish with additional Parmesan cheese if desired.
21	2023-08-26 16:51:40.558	2023-08-26 16:51:40.558	No Olive Greek Salad	1. Chop the cucumber, tomato, red onion, and bell pepper into bite-sized pieces.\n2. In a large bowl, combine the chopped vegetables.\n3. Crumble the feta cheese over the vegetables.\n4. In a small bowl, whisk together the olive oil, lemon juice, dried oregano, salt, and black pepper.\n5. Pour the dressing over the salad and toss to coat evenly.\n6. Serve immediately and enjoy!
22	2023-08-29 15:23:08.821	2023-08-29 15:23:08.821	Refreshing Mint Smoothie	1. In a blender, combine the fresh mint leaves, spinach, cucumber, banana, lime juice, honey, almond milk, and ice cubes.\n2. Blend on high speed until smooth and creamy.\n3. Pour into glasses and serve immediately.
23	2023-08-29 15:24:45.376	2023-08-29 15:24:45.376	Black Bean Tacos	1. Heat olive oil in a pan over medium heat. Add chopped onion and minced garlic. Cook until onion is translucent. \n2. Add cumin, paprika, salt, and black pepper to the pan. Stir well. \n3. Drain and rinse black beans. Add black beans to the pan and cook for 5 minutes, stirring occasionally. \n4. Mash the black beans slightly with a fork or potato masher, leaving some whole beans for texture. \n5. Slice the avocado and squeeze lime juice over it to prevent browning. \n6. Warm tortillas in a separate pan or in the oven. \n7. Assemble the tacos by spreading a layer of black beans on each tortilla, topping with sliced avocado, and adding any additional desired toppings such as salsa or shredded cheese. \n8. Serve warm and enjoy!
24	2023-08-29 15:25:34.667	2023-08-29 15:25:34.667	Mediterranean Salad	1. Chop the romaine lettuce, cucumber, tomatoes, and red onion.\n2. In a large bowl, combine the chopped vegetables with kalamata olives and crumbled feta cheese.\n3. In a small bowl, whisk together extra virgin olive oil, lemon juice, minced garlic, dried oregano, salt, and black pepper.\n4. Pour the dressing over the salad and toss well to coat.\n5. Serve immediately or refrigerate until ready to serve.
25	2023-08-29 15:26:55.795	2023-08-29 15:26:55.795	Gloom Stew	1. In a large pot, heat some oil over medium-high heat.\n2. Add the beef and cook until browned. Remove the beef from the pot and set it aside.\n3. In the same pot, add the onion, carrot, and potato. Cook for about 5 minutes until they start to soften.\n4. Add the garlic and cook for another minute.\n5. Return the beef to the pot and stir in the beef broth, tomato paste, and soy sauce.\n6. In a separate small bowl, whisk together the flour, salt, black pepper, and paprika. Sprinkle this mixture over the stew and stir well to combine.\n7. Bring the stew to a boil, then reduce the heat to low, cover, and simmer for about 1 hour until the beef is tender and the flavors have melded together.\n8. Serve hot and enjoy!
26	2023-08-29 15:27:25.95	2023-08-29 15:27:25.95	Gloom Stew	1. In a large pot, heat olive oil over medium heat. Add chopped onion and minced garlic, and cook until the onion becomes translucent.\n\n2. Add sliced carrots and potatoes to the pot, and cook for a few minutes until they start to soften.\n\n3. Stir in sliced mushrooms and continue cooking for a couple of minutes.\n\n4. Pour in vegetable broth, and add thyme, bay leaves, salt, and black pepper. Bring to a simmer and let it cook for about 20 minutes, or until the vegetables are tender.\n\n5. Remove the bay leaves from the stew and stir in liquid smoke.\n\n6. Serve the Gloom Stew hot with a dollop of sour cream on top.\n\nEnjoy your comforting and flavorful Gloom Stew!
27	2023-08-29 15:27:36.084	2023-08-29 15:27:36.084	Gloom Stew	1. Cut the beef into bite-sized cubes.\n2. Dice the onion, carrot, and potato.\n3. Peel and dice the tomato.\n4. Mince the garlic.\n5. In a large pot, heat olive oil over medium-high heat.\n6. Add the beef to the pot and cook until browned on all sides.\n7. Add the diced onion and minced garlic to the pot and cook for 2-3 minutes, until fragrant.\n8. Add the diced carrot, potato, and tomato to the pot.\n9. Pour in the beef broth and red wine.\n10. Season with thyme, salt, and black pepper.\n11. Stir well and bring the stew to a boil.\n12. Reduce heat to low, cover the pot, and simmer for 1-2 hours, until the beef is tender.\n13. Serve the Gloom Stew hot with crusty bread.
28	2023-08-29 15:27:41.118	2023-08-29 15:27:41.118	Baked Chicken Breast with Herbs	1. Preheat your oven to 400°F (200°C).\n\n2. In a small bowl, mix together the olive oil, fresh herbs, garlic powder, salt, and black pepper.\n\n3. Place the chicken breasts on a baking sheet lined with parchment paper.\n\n4. Brush both sides of the chicken breasts with the herb mixture.\n\n5. Bake in the preheated oven for 20-25 minutes, or until the chicken is cooked through and reaches an internal temperature of 165°F (75°C).\n\n6. Remove from the oven and let the chicken rest for a few minutes before serving.\n\n7. Serve the baked chicken breast with your favorite side dishes and enjoy!
29	2023-08-29 15:30:00.823	2023-08-29 15:30:00.823	Vibrant Vegetable Curry	1. Heat vegetable oil in a large pot over medium heat.\n\n2. Add the onion, garlic, and ginger. Cook for 5 minutes until onions are translucent.\n\n3. Add curry powder, turmeric, ground cumin, ground coriander, and cayenne pepper to the pot. Stir well to coat the onions and spices.\n\n4. Add carrots, sweet potato, and cauliflower to the pot. Stir to coat the vegetables with the spices.\n\n5. Pour in the coconut milk and vegetable broth. Season with salt and pepper. Bring to a simmer and cook for 20 minutes until the vegetables are tender.\n\n6. Stir in lime juice and fresh cilantro.\n\n7. Serve the vibrant vegetable curry over cooked rice or with naan bread.\n\nEnjoy!
30	2023-08-29 15:30:46.901	2023-08-29 15:30:46.901	Vibrant Vegetable Curry	1. In a large pot, heat the vegetable oil over medium heat.\n2. Add the chopped onion and cook until translucent, about 5 minutes.\n3. Add the minced garlic and grated ginger, cook for another minute.\n4. Add the curry powder, turmeric, cumin, coriander, cinnamon, and cayenne pepper. Stir well to coat the onions and spices.\n5. Add the chopped red bell pepper, sliced carrots, peeled and cubed sweet potato, and cauliflower florets. Cook for 3-4 minutes.\n6. Pour in the coconut milk and vegetable broth. Stir well, bring to a simmer, then reduce the heat to low and cover the pot. Let it cook for about 20-25 minutes, or until the vegetables are tender.\n7. Stir in the cherry tomatoes and cook for another 5 minutes.\n8. Season with salt and black pepper.\n9. Serve the vibrant vegetable curry over cooked rice or with naan bread.\n10. Garnish with fresh cilantro before serving.
31	2023-08-29 15:56:38.97	2023-08-29 15:56:38.97	Low Carb Zucchini Noodles	1. Spiralize the zucchini into noodles using a spiralizer.\n2. Heat olive oil in a large pan over medium heat.\n3. Add garlic and sauté for a minute until fragrant.\n4. Add zucchini noodles to the pan and sauté for 2-3 minutes until they soften slightly.\n5. Season with salt and toss the noodles well.\n6. Remove from heat and serve hot.
32	2023-08-30 15:54:39.636	2023-08-30 15:54:39.636	Greek Salad with Grilled Chicken	1. Preheat grill to medium-high heat.\n2. Season the chicken breasts with salt, black pepper, and dried oregano.\n3. Grill the chicken for about 6-8 minutes per side, or until cooked through. Let it rest for a few minutes, then cut into slices.\n4. Meanwhile, chop the romaine lettuce, cucumber, red onion, and tomato.\n5. In a large bowl, combine the lettuce, cucumber, red onion, tomato, kalamata olives, and feta cheese.\n6. In a small bowl, whisk together the extra virgin olive oil, lemon juice, dried oregano, salt, and black pepper.\n7. Pour the dressing over the salad and toss to combine.\n8. Divide the salad onto plates and top with the grilled chicken slices.\n9. Serve and enjoy!
\.


--
-- Data for Name: request_cache; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.request_cache (id, created_at, updated_at, url, method, headers, body) FROM stdin;
1	2023-08-20 13:41:26.004	2023-08-20 13:41:26.004	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
2	2023-08-20 13:41:44.906	2023-08-20 13:41:44.906	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "559", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Keto Cauliflower Fried Rice. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
3	2023-08-20 13:46:25.622	2023-08-20 13:46:25.622	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
4	2023-08-20 13:46:39.812	2023-08-20 13:46:39.812	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "560", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Zucchini Noodles with Shrimp. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
5	2023-08-20 13:47:17.109	2023-08-20 13:47:17.109	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
6	2023-08-20 13:47:24.42	2023-08-20 13:47:24.42	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
7	2023-08-20 13:47:41.26	2023-08-20 13:47:41.26	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "561", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Garlic Parmesan Chicken Wings. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
8	2023-08-20 13:47:59.542	2023-08-20 13:47:59.542	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
9	2023-08-20 13:48:16.63	2023-08-20 13:48:16.63	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "552", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Keto Chicken Alfredo. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
10	2023-08-20 14:02:29.164	2023-08-20 14:02:29.164	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "552", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Keto Chicken Alfredo. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
11	2023-08-20 14:02:59.739	2023-08-20 14:02:59.739	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "377", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, Keto, Grain Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
12	2023-08-20 14:03:13.518	2023-08-20 14:03:13.518	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "558", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Low Carb Mexican Casserole. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
13	2023-08-20 15:34:22.803	2023-08-20 15:34:22.803	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "356", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Peach. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
14	2023-08-20 15:35:03.203	2023-08-20 15:35:03.203	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "362", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Blueberries. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
15	2023-08-20 15:35:17.567	2023-08-20 15:35:17.567	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "550", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Blueberry Smoothie. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
16	2023-08-20 15:35:39.251	2023-08-20 15:35:39.251	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "362", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Blueberries. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
17	2023-08-20 17:13:05.735	2023-08-20 17:13:05.735	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "384", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Keto, Chicken, Low Carb, No Sugar. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
18	2023-08-20 17:13:23.741	2023-08-20 17:13:23.741	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "557", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Low Carb Chicken Stir Fry. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
19	2023-08-20 17:27:08.776	2023-08-20 17:27:08.776	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "351", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: . Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
20	2023-08-20 17:27:29.292	2023-08-20 17:27:29.292	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "552", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Vegan Curry Stir-Fry. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
21	2023-08-20 17:32:48.375	2023-08-20 17:32:48.375	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "384", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Keto, Chicken, Low Carb, No Sugar. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
22	2023-08-20 19:08:53.104	2023-08-20 19:08:53.104	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "384", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Keto, Chicken, Low Carb, No Sugar. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
23	2023-08-22 15:57:35.657	2023-08-22 15:57:35.657	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "382", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
24	2023-08-22 15:57:55.78	2023-08-22 15:57:55.78	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "565", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Lemon Garlic Shrimp with Broccoli. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
25	2023-08-22 19:20:05.345	2023-08-22 19:20:05.345	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
26	2023-08-22 19:20:46.45	2023-08-22 19:20:46.45	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "564", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Chicken Stir-Fry with Vegetables. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
27	2023-08-26 14:50:34.942	2023-08-26 14:50:34.942	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
28	2023-08-26 14:50:52.915	2023-08-26 14:50:52.915	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "552", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Stuffed Bell Peppers. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
29	2023-08-26 14:51:08.742	2023-08-26 14:51:08.742	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
30	2023-08-26 14:51:30.558	2023-08-26 14:51:30.558	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "554", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Cauliflower Fried Rice. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
31	2023-08-26 14:56:12.469	2023-08-26 14:56:12.469	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "368", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Soy, No Gluten. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
32	2023-08-26 14:56:58.841	2023-08-26 14:56:58.841	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "381", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Soy, No Gluten, Add Hamburg. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
33	2023-08-26 14:57:14.255	2023-08-26 14:57:14.255	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "545", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Hamburg Tacos. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
34	2023-08-26 14:57:26.221	2023-08-26 14:57:26.221	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "545", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Hamburg Tacos. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
35	2023-08-26 14:57:30.159	2023-08-26 14:57:30.159	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "368", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Soy, No Gluten. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
36	2023-08-26 14:57:44.916	2023-08-26 14:57:44.916	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "551", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Lemon Garlic Shrimp. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
37	2023-08-26 14:57:54.86	2023-08-26 14:57:54.86	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "551", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Lemon Garlic Shrimp. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
38	2023-08-26 14:57:56.317	2023-08-26 14:57:56.317	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "368", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Soy, No Gluten. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
39	2023-08-26 14:58:12.948	2023-08-26 14:58:12.948	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "571", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Grilled chicken with roasted vegetables. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
40	2023-08-26 14:58:35.266	2023-08-26 14:58:35.266	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "571", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Grilled chicken with roasted vegetables. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
41	2023-08-26 14:59:26.095	2023-08-26 14:59:26.095	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "571", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Grilled chicken with roasted vegetables. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
42	2023-08-26 15:00:42.772	2023-08-26 15:00:42.772	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
43	2023-08-26 15:04:19.564	2023-08-26 15:04:19.564	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
44	2023-08-26 15:04:35.188	2023-08-26 15:04:35.188	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "559", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Zucchini Noodles with Pesto. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
45	2023-08-26 16:51:25.139	2023-08-26 16:51:25.139	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
46	2023-08-26 16:51:40.544	2023-08-26 16:51:40.544	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "552", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for No Olive Greek Salad. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
47	2023-08-29 12:51:30.984	2023-08-29 12:51:30.984	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
48	2023-08-29 12:51:33.228	2023-08-29 12:51:33.228	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
49	2023-08-29 12:51:35.09	2023-08-29 12:51:35.09	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
50	2023-08-29 15:15:51.98	2023-08-29 15:15:51.98	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
51	2023-08-29 15:15:54.255	2023-08-29 15:15:54.255	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
52	2023-08-29 15:15:56.182	2023-08-29 15:15:56.182	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
53	2023-08-29 15:15:58.507	2023-08-29 15:15:58.507	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
54	2023-08-29 15:16:00.87	2023-08-29 15:16:00.87	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
55	2023-08-29 15:16:03.717	2023-08-29 15:16:03.717	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
56	2023-08-29 15:16:05.91	2023-08-29 15:16:05.91	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
57	2023-08-29 15:16:08.351	2023-08-29 15:16:08.351	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
58	2023-08-29 15:16:10.787	2023-08-29 15:16:10.787	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
59	2023-08-29 15:16:13.391	2023-08-29 15:16:13.391	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
60	2023-08-29 15:16:15.694	2023-08-29 15:16:15.694	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
61	2023-08-29 15:16:17.674	2023-08-29 15:16:17.674	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
62	2023-08-29 15:16:19.829	2023-08-29 15:16:19.829	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
63	2023-08-29 15:16:21.949	2023-08-29 15:16:21.949	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
64	2023-08-29 15:16:23.772	2023-08-29 15:16:23.772	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
65	2023-08-29 15:16:26.491	2023-08-29 15:16:26.491	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
66	2023-08-29 15:16:28.427	2023-08-29 15:16:28.427	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "370", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Calories, Pineapple. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
67	2023-08-29 15:18:30.783	2023-08-29 15:18:30.783	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
68	2023-08-29 15:18:32.62	2023-08-29 15:18:32.62	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
69	2023-08-29 15:18:34.365	2023-08-29 15:18:34.365	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
70	2023-08-29 15:18:36.375	2023-08-29 15:18:36.375	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
71	2023-08-29 15:18:38.435	2023-08-29 15:18:38.435	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
72	2023-08-29 15:18:39.984	2023-08-29 15:18:39.984	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
73	2023-08-29 15:18:42.319	2023-08-29 15:18:42.319	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
74	2023-08-29 15:18:44.043	2023-08-29 15:18:44.043	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
75	2023-08-29 15:18:46.117	2023-08-29 15:18:46.117	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
76	2023-08-29 15:18:49.636	2023-08-29 15:18:49.636	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
77	2023-08-29 15:18:51.723	2023-08-29 15:18:51.723	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
78	2023-08-29 15:18:53.257	2023-08-29 15:18:53.257	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "357", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
79	2023-08-29 15:20:01.038	2023-08-29 15:20:01.038	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
80	2023-08-29 15:20:03.924	2023-08-29 15:20:03.924	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
81	2023-08-29 15:20:05.449	2023-08-29 15:20:05.449	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
82	2023-08-29 15:20:08.07	2023-08-29 15:20:08.07	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
83	2023-08-29 15:20:09.888	2023-08-29 15:20:09.888	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
84	2023-08-29 15:20:12.319	2023-08-29 15:20:12.319	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
85	2023-08-29 15:20:15.253	2023-08-29 15:20:15.253	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
86	2023-08-29 15:20:17.272	2023-08-29 15:20:17.272	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
87	2023-08-29 15:20:19.762	2023-08-29 15:20:19.762	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
88	2023-08-29 15:20:25.032	2023-08-29 15:20:25.032	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
89	2023-08-29 15:20:27.361	2023-08-29 15:20:27.361	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
90	2023-08-29 15:20:29.288	2023-08-29 15:20:29.288	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
91	2023-08-29 15:20:31.574	2023-08-29 15:20:31.574	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
92	2023-08-29 15:20:33.822	2023-08-29 15:20:33.822	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
93	2023-08-29 15:20:35.396	2023-08-29 15:20:35.396	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
94	2023-08-29 15:20:37.237	2023-08-29 15:20:37.237	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
95	2023-08-29 15:20:39.596	2023-08-29 15:20:39.596	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
96	2023-08-29 15:20:41.761	2023-08-29 15:20:41.761	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
97	2023-08-29 15:20:43.898	2023-08-29 15:20:43.898	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
98	2023-08-29 15:20:46.458	2023-08-29 15:20:46.458	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
99	2023-08-29 15:20:48.665	2023-08-29 15:20:48.665	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
100	2023-08-29 15:20:50.525	2023-08-29 15:20:50.525	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
101	2023-08-29 15:20:52.142	2023-08-29 15:20:52.142	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
102	2023-08-29 15:20:54.219	2023-08-29 15:20:54.219	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
103	2023-08-29 15:20:56.796	2023-08-29 15:20:56.796	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
104	2023-08-29 15:20:58.942	2023-08-29 15:20:58.942	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
105	2023-08-29 15:21:01.239	2023-08-29 15:21:01.239	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
106	2023-08-29 15:21:03.064	2023-08-29 15:21:03.064	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
107	2023-08-29 15:21:05.309	2023-08-29 15:21:05.309	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
108	2023-08-29 15:21:07.208	2023-08-29 15:21:07.208	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
109	2023-08-29 15:21:09.527	2023-08-29 15:21:09.527	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
110	2023-08-29 15:21:11.298	2023-08-29 15:21:11.298	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
111	2023-08-29 15:21:13.709	2023-08-29 15:21:13.709	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
112	2023-08-29 15:21:15.769	2023-08-29 15:21:15.769	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
113	2023-08-29 15:21:17.644	2023-08-29 15:21:17.644	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
114	2023-08-29 15:21:20.127	2023-08-29 15:21:20.127	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
115	2023-08-29 15:21:21.964	2023-08-29 15:21:21.964	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
116	2023-08-29 15:21:23.879	2023-08-29 15:21:23.879	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
117	2023-08-29 15:21:25.777	2023-08-29 15:21:25.777	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
118	2023-08-29 15:21:27.886	2023-08-29 15:21:27.886	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
119	2023-08-29 15:21:30.022	2023-08-29 15:21:30.022	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
120	2023-08-29 15:21:32.135	2023-08-29 15:21:32.135	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
121	2023-08-29 15:21:34.254	2023-08-29 15:21:34.254	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
122	2023-08-29 15:21:36.321	2023-08-29 15:21:36.321	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
123	2023-08-29 15:21:37.297	2023-08-29 15:21:37.297	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "393", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free, No Olives. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
124	2023-08-29 15:21:38.342	2023-08-29 15:21:38.342	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
125	2023-08-29 15:21:40.143	2023-08-29 15:21:40.143	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
126	2023-08-29 15:21:42.217	2023-08-29 15:21:42.217	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
137	2023-08-29 15:25:41.642	2023-08-29 15:25:41.642	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
127	2023-08-29 15:23:08.765	2023-08-29 15:23:08.765	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "556", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Refreshing Mint Smoothie. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
128	2023-08-29 15:24:03.331	2023-08-29 15:24:03.331	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
129	2023-08-29 15:24:09.745	2023-08-29 15:24:09.745	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "351", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: . Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
130	2023-08-29 15:24:26.108	2023-08-29 15:24:26.108	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
131	2023-08-29 15:24:45.347	2023-08-29 15:24:45.347	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "548", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Black Bean Tacos. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
132	2023-08-29 15:24:48.05	2023-08-29 15:24:48.05	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
133	2023-08-29 15:24:59.965	2023-08-29 15:24:59.965	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "351", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: . Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
134	2023-08-29 15:25:06.105	2023-08-29 15:25:06.105	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
135	2023-08-29 15:25:27.989	2023-08-29 15:25:27.989	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "400", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Windex, Bleach, Ammonia, Meth, Cocaine, Motor Oil. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
136	2023-08-29 15:25:34.639	2023-08-29 15:25:34.639	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "551", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Mediterranean Salad. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
138	2023-08-29 15:25:48.578	2023-08-29 15:25:48.578	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "366", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Cholesterol. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
139	2023-08-29 15:26:34.196	2023-08-29 15:26:34.196	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "385", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Gloom, Sundelions, Sizzlefin Trout. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
140	2023-08-29 15:26:55.784	2023-08-29 15:26:55.784	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "542", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Gloom Stew. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
141	2023-08-29 15:26:56.168	2023-08-29 15:26:56.168	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "385", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Gloom, Sundelions, Sizzlefin Trout. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
142	2023-08-29 15:27:25.935	2023-08-29 15:27:25.935	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "542", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Gloom Stew. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
143	2023-08-29 15:27:36.068	2023-08-29 15:27:36.068	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "542", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Gloom Stew. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
144	2023-08-29 15:27:41.105	2023-08-29 15:27:41.105	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "563", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Baked Chicken Breast with Herbs. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
145	2023-08-29 15:28:16.584	2023-08-29 15:28:16.584	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "385", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Gloom, Sundelions, Sizzlefin Trout. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
146	2023-08-29 15:28:38.498	2023-08-29 15:28:38.498	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "359", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
147	2023-08-29 15:29:24.271	2023-08-29 15:29:24.271	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "366", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Cholesterol. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
148	2023-08-29 15:29:34.249	2023-08-29 15:29:34.249	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
149	2023-08-29 15:29:56.392	2023-08-29 15:29:56.392	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
150	2023-08-29 15:30:00.813	2023-08-29 15:30:00.813	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "555", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Vibrant Vegetable Curry. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
151	2023-08-29 15:30:46.889	2023-08-29 15:30:46.889	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "555", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Vibrant Vegetable Curry. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
152	2023-08-29 15:31:53.267	2023-08-29 15:31:53.267	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
153	2023-08-29 15:31:54.985	2023-08-29 15:31:54.985	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
154	2023-08-29 15:31:57.222	2023-08-29 15:31:57.222	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
155	2023-08-29 15:31:59.204	2023-08-29 15:31:59.204	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
156	2023-08-29 15:32:01.494	2023-08-29 15:32:01.494	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
157	2023-08-29 15:32:03.491	2023-08-29 15:32:03.491	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
158	2023-08-29 15:32:05.462	2023-08-29 15:32:05.462	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
159	2023-08-29 15:32:07.198	2023-08-29 15:32:07.198	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
160	2023-08-29 15:32:08.904	2023-08-29 15:32:08.904	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
162	2023-08-29 15:32:12.645	2023-08-29 15:32:12.645	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
163	2023-08-29 15:32:14.449	2023-08-29 15:32:14.449	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
164	2023-08-29 15:32:16.686	2023-08-29 15:32:16.686	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
165	2023-08-29 15:32:18.522	2023-08-29 15:32:18.522	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
167	2023-08-29 15:32:23.06	2023-08-29 15:32:23.06	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
169	2023-08-29 15:32:26.959	2023-08-29 15:32:26.959	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
161	2023-08-29 15:32:10.791	2023-08-29 15:32:10.791	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
166	2023-08-29 15:32:20.63	2023-08-29 15:32:20.63	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
168	2023-08-29 15:32:25.063	2023-08-29 15:32:25.063	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "402", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: No Gloom, Bleach Free, Zero Cannibalism, Human Hair. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
170	2023-08-29 15:56:28.647	2023-08-29 15:56:28.647	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "372", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Elon Musk, Zuckerberg. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
171	2023-08-29 15:56:38.957	2023-08-29 15:56:38.957	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "557", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Low Carb Zucchini Noodles. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
172	2023-08-30 15:54:08.94	2023-08-30 15:54:08.94	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "382", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a list of five recipe names that fit within the following dietary restrictions: Low Carb, No Grains, Sugar Free. Have your message return in the JSON format: \\n      {\\n        \\"recipeNames\\": [\\"recipe name 1\\", \\"recipe name 2\\", \\"recipe name 3\\", \\"recipe name 4\\", \\"recipe name 5\\"]\\n      }"}]}
173	2023-08-30 15:54:39.571	2023-08-30 15:54:39.571	https://api.openai.com/v1/chat/completions	post	{"Accept": "application/json, text/plain, */*", "User-Agent": "axios/1.4.0", "Content-Type": "application/json", "Authorization": "REDACTED", "Content-Length": "564", "Accept-Encoding": "gzip, compress, deflate, br"}	{"model": "gpt-3.5-turbo", "messages": [{"role": "system", "content": "Please provide a recipe for Greek Salad with Grilled Chicken. \\n    Have your message return in the format of JSON \\n      { \\n        \\"name\\": \\"meal name\\", \\n        \\"ingredients\\": [\\n          \\"name\\": \\"flour\\", \\n          \\"quantity\\": 0.5, \\n          \\"unit\\": \\"cup\\"\\n        ],\\n        \\"instructions\\": \\"instructions\\" \\n      }\\n    Ensure none of the quantity values are fractional, they should all be decimal fields.\\n    Ensure that the JSON is parseable via JSON.parse()."}]}
\.


--
-- Data for Name: request_response_cache; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.request_response_cache (id, created_at, updated_at, "requestId", "responseId") FROM stdin;
1	2023-08-20 13:41:26.032	2023-08-20 13:41:26.032	1	1
2	2023-08-20 13:41:44.916	2023-08-20 13:41:44.916	2	2
3	2023-08-20 13:46:25.641	2023-08-20 13:46:25.641	3	3
4	2023-08-20 13:46:39.928	2023-08-20 13:46:39.928	4	4
5	2023-08-20 13:47:17.115	2023-08-20 13:47:17.115	5	5
6	2023-08-20 13:47:24.454	2023-08-20 13:47:24.454	6	6
7	2023-08-20 13:47:41.269	2023-08-20 13:47:41.269	7	7
8	2023-08-20 13:47:59.548	2023-08-20 13:47:59.548	8	8
9	2023-08-20 13:48:16.648	2023-08-20 13:48:16.648	9	9
10	2023-08-20 14:02:29.232	2023-08-20 14:02:29.232	10	10
11	2023-08-20 14:02:59.765	2023-08-20 14:02:59.765	11	11
12	2023-08-20 14:03:13.531	2023-08-20 14:03:13.531	12	12
13	2023-08-20 15:34:22.812	2023-08-20 15:34:22.812	13	13
14	2023-08-20 15:35:03.211	2023-08-20 15:35:03.211	14	14
15	2023-08-20 15:35:17.575	2023-08-20 15:35:17.575	15	15
16	2023-08-20 15:35:39.328	2023-08-20 15:35:39.328	16	16
17	2023-08-20 17:13:05.776	2023-08-20 17:13:05.776	17	17
18	2023-08-20 17:13:23.754	2023-08-20 17:13:23.754	18	18
19	2023-08-20 17:27:08.783	2023-08-20 17:27:08.783	19	19
20	2023-08-20 17:27:29.335	2023-08-20 17:27:29.335	20	20
21	2023-08-20 17:32:48.381	2023-08-20 17:32:48.381	21	21
22	2023-08-20 19:08:53.11	2023-08-20 19:08:53.11	22	22
23	2023-08-22 15:57:35.664	2023-08-22 15:57:35.664	23	23
24	2023-08-22 15:57:55.789	2023-08-22 15:57:55.789	24	24
25	2023-08-22 19:20:05.368	2023-08-22 19:20:05.368	25	25
26	2023-08-22 19:20:46.458	2023-08-22 19:20:46.458	26	26
27	2023-08-26 14:50:34.952	2023-08-26 14:50:34.952	27	27
28	2023-08-26 14:50:52.923	2023-08-26 14:50:52.923	28	28
29	2023-08-26 14:51:08.75	2023-08-26 14:51:08.75	29	29
30	2023-08-26 14:51:30.567	2023-08-26 14:51:30.567	30	30
31	2023-08-26 14:56:12.477	2023-08-26 14:56:12.477	31	31
32	2023-08-26 14:56:58.853	2023-08-26 14:56:58.853	32	32
33	2023-08-26 14:57:14.261	2023-08-26 14:57:14.261	33	33
34	2023-08-26 14:57:26.233	2023-08-26 14:57:26.233	34	34
35	2023-08-26 14:57:30.235	2023-08-26 14:57:30.235	35	35
36	2023-08-26 14:57:44.924	2023-08-26 14:57:44.924	36	36
37	2023-08-26 14:57:54.873	2023-08-26 14:57:54.873	37	37
38	2023-08-26 14:57:56.353	2023-08-26 14:57:56.353	38	38
39	2023-08-26 14:58:12.961	2023-08-26 14:58:12.961	39	39
40	2023-08-26 14:58:35.281	2023-08-26 14:58:35.281	40	40
41	2023-08-26 14:59:26.113	2023-08-26 14:59:26.113	41	41
42	2023-08-26 15:00:42.777	2023-08-26 15:00:42.777	42	42
43	2023-08-26 15:04:19.729	2023-08-26 15:04:19.729	43	43
44	2023-08-26 15:04:35.196	2023-08-26 15:04:35.196	44	44
45	2023-08-26 16:51:25.153	2023-08-26 16:51:25.153	45	45
46	2023-08-26 16:51:40.556	2023-08-26 16:51:40.556	46	46
47	2023-08-29 12:51:30.995	2023-08-29 12:51:30.995	47	47
48	2023-08-29 12:51:33.248	2023-08-29 12:51:33.248	48	48
49	2023-08-29 12:51:35.099	2023-08-29 12:51:35.099	49	49
50	2023-08-29 15:15:51.99	2023-08-29 15:15:51.99	50	50
51	2023-08-29 15:15:54.263	2023-08-29 15:15:54.263	51	51
52	2023-08-29 15:15:56.194	2023-08-29 15:15:56.194	52	52
53	2023-08-29 15:15:58.515	2023-08-29 15:15:58.515	53	53
54	2023-08-29 15:16:00.879	2023-08-29 15:16:00.879	54	54
55	2023-08-29 15:16:03.724	2023-08-29 15:16:03.724	55	55
56	2023-08-29 15:16:05.925	2023-08-29 15:16:05.925	56	56
57	2023-08-29 15:16:08.359	2023-08-29 15:16:08.359	57	57
58	2023-08-29 15:16:10.8	2023-08-29 15:16:10.8	58	58
59	2023-08-29 15:16:13.407	2023-08-29 15:16:13.407	59	59
60	2023-08-29 15:16:15.702	2023-08-29 15:16:15.702	60	60
61	2023-08-29 15:16:17.681	2023-08-29 15:16:17.681	61	61
62	2023-08-29 15:16:19.93	2023-08-29 15:16:19.93	62	62
63	2023-08-29 15:16:21.955	2023-08-29 15:16:21.955	63	63
64	2023-08-29 15:16:23.78	2023-08-29 15:16:23.78	64	64
65	2023-08-29 15:16:26.499	2023-08-29 15:16:26.499	65	65
66	2023-08-29 15:16:28.439	2023-08-29 15:16:28.439	66	66
67	2023-08-29 15:18:30.793	2023-08-29 15:18:30.793	67	67
68	2023-08-29 15:18:32.628	2023-08-29 15:18:32.628	68	68
69	2023-08-29 15:18:34.382	2023-08-29 15:18:34.382	69	69
70	2023-08-29 15:18:36.385	2023-08-29 15:18:36.385	70	70
71	2023-08-29 15:18:38.447	2023-08-29 15:18:38.447	71	71
72	2023-08-29 15:18:40.032	2023-08-29 15:18:40.032	72	72
73	2023-08-29 15:18:42.327	2023-08-29 15:18:42.327	73	73
74	2023-08-29 15:18:44.05	2023-08-29 15:18:44.05	74	74
75	2023-08-29 15:18:46.124	2023-08-29 15:18:46.124	75	75
76	2023-08-29 15:18:49.735	2023-08-29 15:18:49.735	76	76
77	2023-08-29 15:18:51.747	2023-08-29 15:18:51.747	77	77
78	2023-08-29 15:18:53.267	2023-08-29 15:18:53.267	78	78
79	2023-08-29 15:20:01.049	2023-08-29 15:20:01.049	79	79
80	2023-08-29 15:20:03.936	2023-08-29 15:20:03.936	80	80
81	2023-08-29 15:20:05.458	2023-08-29 15:20:05.458	81	81
82	2023-08-29 15:20:08.076	2023-08-29 15:20:08.076	82	82
83	2023-08-29 15:20:09.932	2023-08-29 15:20:09.932	83	83
84	2023-08-29 15:20:12.334	2023-08-29 15:20:12.334	84	84
85	2023-08-29 15:20:15.267	2023-08-29 15:20:15.267	85	85
86	2023-08-29 15:20:17.279	2023-08-29 15:20:17.279	86	86
87	2023-08-29 15:20:19.831	2023-08-29 15:20:19.831	87	87
88	2023-08-29 15:20:25.051	2023-08-29 15:20:25.051	88	88
89	2023-08-29 15:20:27.373	2023-08-29 15:20:27.373	89	89
90	2023-08-29 15:20:29.296	2023-08-29 15:20:29.296	90	90
91	2023-08-29 15:20:31.581	2023-08-29 15:20:31.581	91	91
92	2023-08-29 15:20:33.835	2023-08-29 15:20:33.835	92	92
93	2023-08-29 15:20:35.403	2023-08-29 15:20:35.403	93	93
94	2023-08-29 15:20:37.244	2023-08-29 15:20:37.244	94	94
95	2023-08-29 15:20:39.634	2023-08-29 15:20:39.634	95	95
96	2023-08-29 15:20:41.774	2023-08-29 15:20:41.774	96	96
97	2023-08-29 15:20:43.905	2023-08-29 15:20:43.905	97	97
98	2023-08-29 15:20:46.465	2023-08-29 15:20:46.465	98	98
99	2023-08-29 15:20:48.672	2023-08-29 15:20:48.672	99	99
100	2023-08-29 15:20:50.537	2023-08-29 15:20:50.537	100	100
101	2023-08-29 15:20:52.151	2023-08-29 15:20:52.151	101	101
102	2023-08-29 15:20:54.233	2023-08-29 15:20:54.233	102	102
103	2023-08-29 15:20:56.803	2023-08-29 15:20:56.803	103	103
104	2023-08-29 15:20:58.949	2023-08-29 15:20:58.949	104	104
105	2023-08-29 15:21:01.258	2023-08-29 15:21:01.258	105	105
106	2023-08-29 15:21:03.073	2023-08-29 15:21:03.073	106	106
107	2023-08-29 15:21:05.322	2023-08-29 15:21:05.322	107	107
108	2023-08-29 15:21:07.214	2023-08-29 15:21:07.214	108	108
109	2023-08-29 15:21:09.539	2023-08-29 15:21:09.539	109	109
110	2023-08-29 15:21:11.31	2023-08-29 15:21:11.31	110	110
111	2023-08-29 15:21:13.716	2023-08-29 15:21:13.716	111	111
112	2023-08-29 15:21:15.775	2023-08-29 15:21:15.775	112	112
113	2023-08-29 15:21:17.651	2023-08-29 15:21:17.651	113	113
114	2023-08-29 15:21:20.133	2023-08-29 15:21:20.133	114	114
115	2023-08-29 15:21:21.973	2023-08-29 15:21:21.973	115	115
116	2023-08-29 15:21:23.896	2023-08-29 15:21:23.896	116	116
117	2023-08-29 15:21:25.786	2023-08-29 15:21:25.786	117	117
118	2023-08-29 15:21:27.892	2023-08-29 15:21:27.892	118	118
119	2023-08-29 15:21:30.031	2023-08-29 15:21:30.031	119	119
120	2023-08-29 15:21:32.143	2023-08-29 15:21:32.143	120	120
121	2023-08-29 15:21:34.261	2023-08-29 15:21:34.261	121	121
122	2023-08-29 15:21:36.354	2023-08-29 15:21:36.354	122	122
123	2023-08-29 15:21:37.305	2023-08-29 15:21:37.305	123	123
124	2023-08-29 15:21:38.347	2023-08-29 15:21:38.347	124	124
125	2023-08-29 15:21:40.149	2023-08-29 15:21:40.149	125	125
126	2023-08-29 15:21:42.233	2023-08-29 15:21:42.233	126	126
127	2023-08-29 15:23:08.774	2023-08-29 15:23:08.774	127	127
128	2023-08-29 15:24:03.344	2023-08-29 15:24:03.344	128	128
129	2023-08-29 15:24:09.839	2023-08-29 15:24:09.839	129	129
130	2023-08-29 15:24:26.115	2023-08-29 15:24:26.115	130	130
131	2023-08-29 15:24:45.369	2023-08-29 15:24:45.369	131	131
132	2023-08-29 15:24:48.056	2023-08-29 15:24:48.056	132	132
133	2023-08-29 15:24:59.974	2023-08-29 15:24:59.974	133	133
134	2023-08-29 15:25:06.112	2023-08-29 15:25:06.112	134	134
135	2023-08-29 15:25:27.997	2023-08-29 15:25:27.997	135	135
136	2023-08-29 15:25:34.654	2023-08-29 15:25:34.654	136	136
137	2023-08-29 15:25:41.655	2023-08-29 15:25:41.655	137	137
138	2023-08-29 15:25:48.588	2023-08-29 15:25:48.588	138	138
139	2023-08-29 15:26:34.203	2023-08-29 15:26:34.203	139	139
140	2023-08-29 15:26:55.792	2023-08-29 15:26:55.792	140	140
141	2023-08-29 15:26:56.176	2023-08-29 15:26:56.176	141	141
142	2023-08-29 15:27:25.946	2023-08-29 15:27:25.946	142	142
143	2023-08-29 15:27:36.08	2023-08-29 15:27:36.08	143	143
144	2023-08-29 15:27:41.115	2023-08-29 15:27:41.115	144	144
145	2023-08-29 15:28:16.594	2023-08-29 15:28:16.594	145	145
146	2023-08-29 15:28:38.507	2023-08-29 15:28:38.507	146	146
147	2023-08-29 15:29:24.278	2023-08-29 15:29:24.278	147	147
148	2023-08-29 15:29:34.258	2023-08-29 15:29:34.258	148	148
149	2023-08-29 15:29:56.398	2023-08-29 15:29:56.398	149	149
150	2023-08-29 15:30:00.819	2023-08-29 15:30:00.819	150	150
151	2023-08-29 15:30:46.898	2023-08-29 15:30:46.898	151	151
152	2023-08-29 15:31:53.274	2023-08-29 15:31:53.274	152	152
153	2023-08-29 15:31:54.991	2023-08-29 15:31:54.991	153	153
154	2023-08-29 15:31:57.235	2023-08-29 15:31:57.235	154	154
155	2023-08-29 15:31:59.231	2023-08-29 15:31:59.231	155	155
156	2023-08-29 15:32:01.501	2023-08-29 15:32:01.501	156	156
157	2023-08-29 15:32:03.498	2023-08-29 15:32:03.498	157	157
158	2023-08-29 15:32:05.469	2023-08-29 15:32:05.469	158	158
159	2023-08-29 15:32:07.209	2023-08-29 15:32:07.209	159	159
160	2023-08-29 15:32:08.922	2023-08-29 15:32:08.922	160	160
161	2023-08-29 15:32:10.797	2023-08-29 15:32:10.797	161	161
162	2023-08-29 15:32:12.662	2023-08-29 15:32:12.662	162	162
163	2023-08-29 15:32:14.455	2023-08-29 15:32:14.455	163	163
164	2023-08-29 15:32:16.695	2023-08-29 15:32:16.695	164	164
165	2023-08-29 15:32:18.532	2023-08-29 15:32:18.532	165	165
166	2023-08-29 15:32:20.638	2023-08-29 15:32:20.638	166	166
167	2023-08-29 15:32:23.067	2023-08-29 15:32:23.067	167	167
168	2023-08-29 15:32:25.089	2023-08-29 15:32:25.089	168	168
169	2023-08-29 15:32:26.967	2023-08-29 15:32:26.967	169	169
170	2023-08-29 15:56:28.661	2023-08-29 15:56:28.661	170	170
171	2023-08-29 15:56:38.966	2023-08-29 15:56:38.966	171	171
172	2023-08-30 15:54:08.948	2023-08-30 15:54:08.948	172	172
173	2023-08-30 15:54:39.632	2023-08-30 15:54:39.632	173	173
\.


--
-- Data for Name: response_cache; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.response_cache (id, created_at, updated_at, status_code, headers, body) FROM stdin;
1	2023-08-20 13:41:26.01	2023-08-20 13:41:26.01	200	{"date": "Sun, 20 Aug 2023 13:41:25 GMT", "cf-ray": "7f9b0dbd0c4a116f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "790f92824e1457358280c73b177b052f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1222", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pcyC95iDOVuMlEiqVOBmDt6TogsY", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 129, "prompt_tokens": 80, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Keto Cauliflower Fried Rice\\", \\"Low Carb Zucchini Lasagna\\", \\"Grain Free Chicken Parmesan\\", \\"Keto Broccoli Cheddar Soup\\", \\"Low Carb Almond Flour Pancakes\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692538884}
2	2023-08-20 13:41:44.912	2023-08-20 13:41:44.912	200	{"date": "Sun, 20 Aug 2023 13:41:44 GMT", "cf-ray": "7f9b0ddfad34231b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "f4b9b17cc0c78a0447f7eeb31fdba583", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "14620", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89868", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pcyI83Xkt2AJ9IACHUigTbbeUSnq", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 702, "prompt_tokens": 114, "completion_tokens": 588}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Keto Cauliflower Fried Rice\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"cauliflower florets\\",\\n      \\"quantity\\": 1.5,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"sesame oil\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"ginger\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"green onions\\",\\n      \\"quantity\\": 3,\\n      \\"unit\\": \\"stalks\\"\\n    },\\n    {\\n      \\"name\\": \\"frozen mixed vegetables\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"tamari sauce\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"eggs\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"sesame seeds\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Place the cauliflower florets in a food processor and pulse until they resemble rice-like grains. Set aside.\\\\n\\\\n2. Heat the sesame oil in a large skillet or wok over medium heat.\\\\n\\\\n3. Add the garlic and ginger to the skillet and cook for 1 minute, until fragrant.\\\\n\\\\n4. Add the green onions and frozen mixed vegetables to the skillet and cook for 3-4 minutes, until the vegetables are heated through.\\\\n\\\\n5. Push the vegetables to one side of the skillet and add the cauliflower rice to the empty side. Cook for 5-6 minutes, stirring occasionally, until the cauliflower is tender.\\\\n\\\\n6. In a small bowl, whisk the tamari sauce with the eggs, salt, and black pepper.\\\\n\\\\n7. Push the cauliflower rice to one side of the skillet again and pour the tamari sauce mixture into the empty side. Let it cook for a minute, then scramble the eggs with a spatula and mix them with the cauliflower rice and vegetables.\\\\n\\\\n8. Remove from heat and sprinkle with sesame seeds.\\\\n\\\\n9. Serve the keto cauliflower fried rice hot as a delicious low-carb side dish or main course.\\"\\n}"}, "finish_reason": "stop"}], "created": 1692538890}
3	2023-08-20 13:46:25.629	2023-08-20 13:46:25.629	200	{"date": "Sun, 20 Aug 2023 13:46:25 GMT", "cf-ray": "7f9b150d5ccf10d5-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "4babdf2a931ee3a435006e984520b13f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1296", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd32oGqENEDylqWVp3KsrwsfRjOt", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 127, "prompt_tokens": 80, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Cauliflower Fried Rice\\", \\"Zucchini Noodles with Shrimp\\", \\"Baked Parmesan Crusted Chicken\\", \\"Garlic Butter Steak Bites\\", \\"Broccoli Cheddar Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692539184}
4	2023-08-20 13:46:39.829	2023-08-20 13:46:39.829	200	{"date": "Sun, 20 Aug 2023 13:46:39 GMT", "cf-ray": "7f9b152a5fe32a5d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "980b1aa09a045ebb84d7fc3384413824", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "10819", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89868", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd36dMkN1J43IAOxnTvv9IywUqpi", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 535, "prompt_tokens": 116, "completion_tokens": 419}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Zucchini Noodles with Shrimp\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"zucchini\\",\\n      \\"quantity\\": \\"2\\",\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"shrimp\\",\\n      \\"quantity\\": \\"1\\",\\n      \\"unit\\": \\"lb\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": \\"3\\",\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": \\"2\\",\\n      \\"unit\\": \\"tbsp\\"\\n    },\\n    {\\n      \\"name\\": \\"cherry tomatoes\\",\\n      \\"quantity\\": \\"1\\",\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh basil\\",\\n      \\"quantity\\": \\"1\\",\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": \\"to taste\\",\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": \\"to taste\\",\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"red pepper flakes\\",\\n      \\"quantity\\": \\"to taste\\",\\n      \\"unit\\": \\"\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Use a spiralizer to cut the zucchini into noodles.\\\\n2. Heat olive oil in a large pan over medium heat. Add minced garlic and cook for 1 minute.\\\\n3. Add the shrimp to the pan and cook until pink and cooked through, about 3-4 minutes per side. Season with salt, black pepper, and red pepper flakes.\\\\n4. Remove the shrimp from the pan and set aside.\\\\n5. In the same pan, add the zucchini noodles and cherry tomatoes. Cook for 2-3 minutes until the noodles are tender but still crisp.\\\\n6. Return the shrimp to the pan and toss to combine.\\\\n7. Remove from heat and stir in fresh basil.\\\\n8. Serve hot and enjoy!\\" \\n}"}, "finish_reason": "stop"}], "created": 1692539188}
5	2023-08-20 13:47:17.113	2023-08-20 13:47:17.113	200	{"date": "Sun, 20 Aug 2023 13:47:17 GMT", "cf-ray": "7f9b164e799d119b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fcd90e3c24dd9ba0793a4745baef82de", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1412", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd3rEXheRKHUVq7mm8vZGfBO7sdM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 80, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Low Carb Chicken Alfredo\\", \\"Keto Cauliflower Fried Rice\\", \\"Grain Free Zucchini Muffins\\", \\"Low Carb Beef Stir Fry\\", \\"Keto Avocado Salad\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692539235}
6	2023-08-20 13:47:24.432	2023-08-20 13:47:24.432	200	{"date": "Sun, 20 Aug 2023 13:47:24 GMT", "cf-ray": "7f9b167bdc6ee13b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "098da88538b6231fa5b287330daed1da", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1428", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89909", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd3yjvSkNFScsRAU4ChJmPVazygK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 137, "prompt_tokens": 80, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Cauliflower Fried Rice\\",\\n    \\"Zucchini Noodles with Alfredo Sauce\\",\\n    \\"Garlic Parmesan Chicken Wings\\",\\n    \\"Lemon Garlic Shrimp\\",\\n    \\"Broccoli and Cheese Stuffed Chicken Breast\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692539242}
7	2023-08-20 13:47:41.265	2023-08-20 13:47:41.265	200	{"date": "Sun, 20 Aug 2023 13:47:41 GMT", "cf-ray": "7f9b16a089c82cb8-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "080296af7ad6ff233f2cd5cf5f0bf812", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "12352", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89868", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd44085PORDW3X6FgW9M7tmcavxK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 607, "prompt_tokens": 114, "completion_tokens": 493}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Garlic Parmesan Chicken Wings\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken wings\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pounds\\"\\n    },\\n    {\\n      \\"name\\": \\"all-purpose flour\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic powder\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"butter\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"minced garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"teaspoons\\"\\n    },\\n    {\\n      \\"name\\": \\"grated Parmesan cheese\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"chopped parsley\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the oven to 425°F (220°C). Line a baking sheet with foil and place a wire rack on top.\\\\n\\\\n2. In a shallow dish, combine the flour, garlic powder, salt, and black pepper. Dredge the chicken wings in the flour mixture, making sure to coat them evenly.\\\\n\\\\n3. Place the coated wings on the wire rack and bake for 40-45 minutes, or until they are crispy and cooked through.\\\\n\\\\n4. While the wings are baking, melt the butter in a small saucepan over medium heat. Add the minced garlic and cook for 1-2 minutes, until fragrant.\\\\n\\\\n5. Remove the wings from the oven and transfer them to a large bowl. Pour the melted garlic butter over the wings and toss to coat.\\\\n\\\\n6. Sprinkle the grated Parmesan cheese and chopped parsley over the wings and toss again to evenly distribute.\\\\n\\\\n7. Serve the garlic Parmesan chicken wings hot and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1692539248}
8	2023-08-20 13:47:59.545	2023-08-20 13:47:59.545	200	{"date": "Sun, 20 Aug 2023 13:47:59 GMT", "cf-ray": "7f9b1757b9df125d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "2c011c0727e378a5b1bb9dd7f2aec261", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1413", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd4Y9zODRHxPZ7OQUS1xoksjHnhf", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 137, "prompt_tokens": 80, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Keto Chicken Alfredo\\",\\n    \\"Low Carb Cauliflower Fried Rice\\",\\n    \\"Grain Free Zucchini Lasagna\\",\\n    \\"Keto Avocado Bacon and Egg Salad\\",\\n    \\"Low Carb Broccoli Cheese Soup\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692539278}
9	2023-08-20 13:48:16.643	2023-08-20 13:48:16.643	200	{"date": "Sun, 20 Aug 2023 13:48:16 GMT", "cf-ray": "7f9b177f1b276362-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a710e16f566e4420ae3fe7ccaedda4ff", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "12197", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pd4ee3QG3dCeJ0VMtW6wFpCPZY0l", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 589, "prompt_tokens": 113, "completion_tokens": 476}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{ \\n  \\"name\\": \\"Keto Chicken Alfredo\\", \\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breast\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"butter\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"heavy cream\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"parmesan cheese\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh parsley\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"zucchini noodles\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cups\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Season the chicken breast with salt and black pepper. \\n    2. Heat 2 tablespoons of butter in a large skillet over medium heat. Cook the chicken breast until no longer pink in the center, about 6-8 minutes per side. Remove from the skillet and set aside.\\n    3. In the same skillet, melt the remaining 2 tablespoons of butter. Add the minced garlic and sauté until fragrant, about 1 minute.\\n    4. Pour in the heavy cream and bring to a simmer. Stir in the parmesan cheese until melted and smooth. Season with salt and black pepper to taste.\\n    5. Slice the cooked chicken breast into thin strips and add it back to the skillet. Cook for another 2-3 minutes to heat through.\\n    6. Serve the chicken alfredo over zucchini noodles and garnish with fresh parsley.\\n    Enjoy your keto chicken alfredo!\\"\\n}"}, "finish_reason": "stop"}], "created": 1692539284}
10	2023-08-20 14:02:29.214	2023-08-20 14:02:29.214	200	{"date": "Sun, 20 Aug 2023 14:02:29 GMT", "cf-ray": "7f9b2c45cfc5226d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "87877e96e978cc2e824daa13f31fd842", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "13652", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pdINFsQV7aKt1K3MqvugQNkCiLmw", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 639, "prompt_tokens": 113, "completion_tokens": 526}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Keto Chicken Alfredo\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breast\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic powder\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"heavy cream\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"cream cheese\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"ounces\\"\\n    },\\n    {\\n      \\"name\\": \\"parmesan cheese\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"nutmeg\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh parsley\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the oven to 400°F (200°C).\\\\n2. Season the chicken breasts with salt, black pepper, and garlic powder.\\\\n3. Heat olive oil in an oven-safe skillet over medium-high heat.\\\\n4. Add the chicken breasts to the skillet and cook for 3-4 minutes on each side until browned.\\\\n5. Transfer the skillet to the preheated oven and bake for about 15 minutes or until the chicken is cooked through.\\\\n6. Remove the skillet from the oven and transfer the chicken to a plate. Let it rest for a few minutes, then slice it.\\\\n7. In the same skillet, add heavy cream and cream cheese. Cook over medium heat, stirring frequently, until the cream cheese is melted and the sauce is smooth.\\\\n8. Stir in parmesan cheese and nutmeg until well combined and creamy.\\\\n9. Return the sliced chicken to the skillet and cook for another 2-3 minutes until heated through.\\\\n10. Serve the chicken Alfredo topped with fresh parsley.\\\\nEnjoy your Keto Chicken Alfredo!\\"\\n}"}, "finish_reason": "stop"}], "created": 1692540135}
11	2023-08-20 14:02:59.751	2023-08-20 14:02:59.751	200	{"date": "Sun, 20 Aug 2023 14:02:59 GMT", "cf-ray": "7f9b2d512d26e25e-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "346403ac6c75a4f458b6e755e06b35af", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1259", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "60ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pdJ4DLZZBftoIo49WV3uq5WTphqw", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 80, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Cauliflower Pizza Crust\\", \\"Grilled Lemon Herb Chicken\\", \\"Zucchini Noodles with Pesto\\", \\"Low Carb Mexican Casserole\\", \\"Baked Salmon with Garlic and Dijon\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692540178}
12	2023-08-20 14:03:13.525	2023-08-20 14:03:13.525	200	{"date": "Sun, 20 Aug 2023 14:03:13 GMT", "cf-ray": "7f9b2d7c086b10b6-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "397883993167fa4dd4ea6f059b3dc47a", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "8131", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89868", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pdJBlQKXQ7sl0qjrSpprvPeIULVK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 749, "prompt_tokens": 115, "completion_tokens": 634}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Low Carb Mexican Casserole\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"ground beef\\",\\n      \\"quantity\\": 1.5,\\n      \\"unit\\": \\"lbs\\"\\n    },\\n    {\\n      \\"name\\": \\"cauliflower rice\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"salsa\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"canned black beans\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"shredded cheddar cheese\\",\\n      \\"quantity\\": 1.5,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"diced tomatoes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"chopped green bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"chopped red onion\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"minced garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"chili powder\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tbsp\\"\\n    },\\n    {\\n      \\"name\\": \\"ground cumin\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tbsp\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tsp\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"tsp\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tbsp\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the oven to 375°F (190°C).\\\\n2. In a large skillet, heat olive oil over medium heat. Add minced garlic and sauté for 1-2 minutes.\\\\n3. Add ground beef to the skillet and cook until browned. Drain excess grease.\\\\n4. Stir in chili powder, ground cumin, salt, and black pepper.\\\\n5. Add diced tomatoes, chopped green bell pepper, and chopped red onion. Cook for 5 minutes.\\\\n6. Stir in cauliflower rice, salsa, and canned black beans. Cook for another 5 minutes.\\\\n7. Transfer the mixture to a casserole dish and spread it evenly.\\\\n8. Sprinkle shredded cheddar cheese on top.\\\\n9. Bake in the preheated oven for 20-25 minutes, or until the cheese is melted and bubbly.\\\\n10. Remove from the oven and let it cool for a few minutes before serving.\\\\n11. Enjoy your Low Carb Mexican Casserole!\\"\\n}"}, "finish_reason": "stop"}], "created": 1692540185}
13	2023-08-20 15:34:22.808	2023-08-20 15:34:22.808	200	{"date": "Sun, 20 Aug 2023 15:34:22 GMT", "cf-ray": "7f9bb32f7f3113cf-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "062b6c71849b92fc44bb890bdd6a4db6", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1250", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "56ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pejVtxsbsUQOD73CD66mvtNLamj1", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 124, "prompt_tokens": 74, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Peach and Arugula Salad\\", \\"Peach and Prosciutto Crostini\\", \\"Peach Caprese Skewers\\", \\"Peach Ginger Smoothie\\", \\"Peach Salsa\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692545661}
14	2023-08-20 15:35:03.208	2023-08-20 15:35:03.208	200	{"date": "Sun, 20 Aug 2023 15:35:03 GMT", "cf-ray": "7f9bb42b5d642ada-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "d027128a4c2935642e5a23a060bc5391", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1354", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89913", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pek95aD95SutkxyVkbMNaXBn1UkS", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 112, "prompt_tokens": 75, "completion_tokens": 37}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Blueberry Muffins\\", \\"Blueberry Pancakes\\", \\"Blueberry Smoothie\\", \\"Blueberry Salad\\", \\"Blueberry Crumble\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692545701}
15	2023-08-20 15:35:17.571	2023-08-20 15:35:17.571	200	{"date": "Sun, 20 Aug 2023 15:35:17 GMT", "cf-ray": "7f9bb46cdb462d49-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "f41072a139b94bd972d0fd764a5ba1ac", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "5016", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pekKXYP2J5dIbbiEDAbVSjYCCjBu", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 310, "prompt_tokens": 113, "completion_tokens": 197}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{ \\n    \\"name\\": \\"Blueberry Smoothie\\", \\n    \\"ingredients\\": [\\n        {\\n            \\"name\\": \\"blueberries\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"cup\\"\\n        },\\n        {\\n            \\"name\\": \\"yogurt\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"cup\\"\\n        },\\n        {\\n            \\"name\\": \\"milk\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"cup\\"\\n        },\\n        {\\n            \\"name\\": \\"honey\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"tablespoon\\"\\n        },\\n        {\\n            \\"name\\": \\"ice cubes\\",\\n            \\"quantity\\": 5,\\n            \\"unit\\": \\"\\"\\n        }\\n    ],\\n    \\"instructions\\": \\"1. Place the blueberries, yogurt, milk, honey, and ice cubes in a blender.\\\\n2. Blend until smooth and creamy.\\\\n3. Pour into glasses and serve immediately.\\" \\n}"}, "finish_reason": "stop"}], "created": 1692545712}
16	2023-08-20 15:35:39.255	2023-08-20 15:35:39.255	200	{"date": "Sun, 20 Aug 2023 15:35:39 GMT", "cf-ray": "7f9bb50c2fb91049-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1fc90d820180068dbae4fc07683acf6a", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1257", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89913", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pekjpyLFs236QjpwWuMeEjHnrPII", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 121, "prompt_tokens": 75, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Blueberry Pancakes\\",\\n    \\"Blueberry Smoothie\\",\\n    \\"Blueberry Muffins\\",\\n    \\"Blueberry Salad\\",\\n    \\"Blueberry Oatmeal\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692545737}
28	2023-08-26 14:50:52.92	2023-08-26 14:50:52.92	200	{"date": "Sat, 26 Aug 2023 14:50:52 GMT", "cf-ray": "7fcce367ebf61060-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "8404aba83a3eb9eb5ffded94b714cbbf", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "13742", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rouV9wOEDNEbE2MCt6OimaILrluc", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 629, "prompt_tokens": 114, "completion_tokens": 515}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Stuffed Bell Peppers\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"bell peppers\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"ground beef\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic cloves\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"cooked rice\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"diced tomatoes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"can\\"\\n    },\\n    {\\n      \\"name\\": \\"cheddar cheese\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"paprika\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the oven to 350°F (175°C).\\\\n2. Cut off the tops of the bell peppers and remove the seeds and membranes inside.\\\\n3. In a large skillet, heat the olive oil over medium heat.\\\\n4. Add the onion and garlic cloves to the skillet and cook until the onion is translucent.\\\\n5. Add the ground beef to the skillet and cook until browned.\\\\n6. Stir in the cooked rice, diced tomatoes, salt, black pepper, and paprika.\\\\n7. Fill each bell pepper with the ground beef mixture and place them upright in a baking dish.\\\\n8. Sprinkle cheddar cheese evenly over the stuffed peppers.\\\\n9. Cover the baking dish with foil and bake for 30 minutes.\\\\n10. Remove the foil and bake for an additional 10 minutes or until the peppers are tender.\\\\n11. Serve hot and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061439}
17	2023-08-20 17:13:05.758	2023-08-20 17:13:05.758	200	{"date": "Sun, 20 Aug 2023 17:13:05 GMT", "cf-ray": "7f9c43cb8a06297a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "09c47e729ac210d05b54d0e31032f8e8", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1033", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pgH2imUSYF1RaJVyt7Qn57eOtjJK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 82, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Keto Chicken Salad\\",\\n    \\"Low Carb Chicken Stir Fry\\",\\n    \\"No Sugar BBQ Chicken\\",\\n    \\"Keto Lemon Pepper Chicken\\",\\n    \\"Low Carb Chicken Alfredo\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692551584}
18	2023-08-20 17:13:23.745	2023-08-20 17:13:23.745	200	{"date": "Sun, 20 Aug 2023 17:13:23 GMT", "cf-ray": "7f9c43eb7ea2116b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a2a53cdbbaf059470dacbc9b8b657b76", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "13944", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pgH7hXndoVoMSH1jderffwnZ9Cfk", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 645, "prompt_tokens": 114, "completion_tokens": 531}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Low Carb Chicken Stir Fry\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breast\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"lb\\"\\n    },\\n    {\\n      \\"name\\": \\"broccoli florets\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"bell pepper\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"mushrooms\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"ginger\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"inch\\"\\n    },\\n    {\\n      \\"name\\": \\"soy sauce\\",\\n      \\"quantity\\": 3.0,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"sesame oil\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Slice the chicken breast into thin strips.\\\\n2. Chop the broccoli florets, bell pepper, mushrooms, onion, garlic, and ginger.\\\\n3. In a small bowl, mix together soy sauce, sesame oil, and salt.\\\\n4. Heat olive oil in a large skillet or wok over medium-high heat.\\\\n5. Add the chicken and stir-fry until cooked through, about 5-6 minutes.\\\\n6. Remove the chicken from the skillet and set aside.\\\\n7. In the same skillet, add the vegetables and stir-fry for 3-4 minutes until tender-crisp.\\\\n8. Add the cooked chicken back to the skillet.\\\\n9. Pour the soy sauce mixture over the chicken and vegetables.\\\\n10. Stir-fry for an additional 2-3 minutes until everything is well coated and heated through.\\\\n11. Serve hot and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1692551589}
19	2023-08-20 17:27:08.78	2023-08-20 17:27:08.78	200	{"date": "Sun, 20 Aug 2023 17:27:08 GMT", "cf-ray": "7f9c5860e964112d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "43099201b8baf498984a97c984df58ea", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "994", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "56ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89916", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pgUdgsOg9BWThKKfIgxPkfuPL4Ay", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 121, "prompt_tokens": 73, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegan Curry Stir-Fry\\", \\"Gluten-Free Quinoa Salad\\", \\"Paleo Chicken Lettuce Wraps\\", \\"Keto Cauliflower Fried Rice\\", \\"Dairy-Free Banana Bread\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692552427}
20	2023-08-20 17:27:29.333	2023-08-20 17:27:29.333	200	{"date": "Sun, 20 Aug 2023 17:27:29 GMT", "cf-ray": "7f9c58a5c9421125-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "2c9460daadb77ad378eed9e09a4d2ecb", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "10502", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pgUoNQqORjODEwGjEnh7DwVT6SKK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 631, "prompt_tokens": 114, "completion_tokens": 517}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{ \\"name\\": \\"Vegan Curry Stir-Fry\\", \\n\\"ingredients\\": [ \\n{ \\"name\\": \\"Tofu\\", \\"quantity\\": 1, \\"unit\\": \\"block\\" }, \\n{ \\"name\\": \\"Broccoli\\", \\"quantity\\": 2, \\"unit\\": \\"cup\\" }, \\n{ \\"name\\": \\"Bell pepper\\", \\"quantity\\": 1, \\"unit\\": \\"piece\\" }, \\n{ \\"name\\": \\"Carrot\\", \\"quantity\\": 2, \\"unit\\": \\"piece\\" }, \\n{ \\"name\\": \\"Onion\\", \\"quantity\\": 1, \\"unit\\": \\"piece\\" }, \\n{ \\"name\\": \\"Garlic\\", \\"quantity\\": 2, \\"unit\\": \\"clove\\" }, \\n{ \\"name\\": \\"Ginger\\", \\"quantity\\": 1, \\"unit\\": \\"inch\\" }, \\n{ \\"name\\": \\"Coconut milk\\", \\"quantity\\": 1, \\"unit\\": \\"can\\" }, \\n{ \\"name\\": \\"Curry powder\\", \\"quantity\\": 2, \\"unit\\": \\"teaspoon\\" }, \\n{ \\"name\\": \\"Soy sauce\\", \\"quantity\\": 2, \\"unit\\": \\"tablespoon\\" }, \\n{ \\"name\\": \\"Salt\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\" }, \\n{ \\"name\\": \\"Black pepper\\", \\"quantity\\": 0.5, \\"unit\\": \\"teaspoon\\" }, \\n{ \\"name\\": \\"Olive oil\\", \\"quantity\\": 1, \\"unit\\": \\"tablespoon\\" } ], \\n\\"instructions\\": \\"1. Press tofu to remove excess water, then cut into cubes.\\\\n2. Heat olive oil in a large pan or wok over medium heat.\\\\n3. Add tofu to the pan and cook until golden brown on all sides.\\\\n4. Remove tofu from the pan and set aside.\\\\n5. In the same pan, add chopped onion, minced garlic, and grated ginger. Saute for 2 minutes.\\\\n6. Add chopped bell pepper, carrot, and broccoli to the pan. Stir-fry for 5 minutes.\\\\n7. In a separate bowl, mix coconut milk, curry powder, soy sauce, salt, and black pepper.\\\\n8. Pour the sauce mixture into the pan with the vegetables and stir well.\\\\n9. Add the cooked tofu back to the pan and stir-fry for an additional 2 minutes.\\\\n10. Serve the vegan curry stir-fry over rice or noodles.\\\\n\\" }"}, "finish_reason": "stop"}], "created": 1692552438}
21	2023-08-20 17:32:48.379	2023-08-20 17:32:48.379	200	{"date": "Sun, 20 Aug 2023 17:32:48 GMT", "cf-ray": "7f9c60ab6ca201ec-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "8f72a28554783bacb48559fc8b535e6c", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1003", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pga7iNHJacDcCyir1M27JFjVAlcE", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 82, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Keto Grilled Chicken\\", \\"Low Carb Baked Chicken\\", \\"Chicken Cauliflower Rice Stir-Fry\\", \\"Keto Chicken Alfredo\\", \\"No Sugar Lemon Garlic Chicken\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692552767}
22	2023-08-20 19:08:53.107	2023-08-20 19:08:53.107	200	{"date": "Sun, 20 Aug 2023 19:08:53 GMT", "cf-ray": "7f9ced69bd751d04-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0f2f3243bac26bb41c187e8d43a7c906", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "841", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7pi56jAcDj72HUm1J1amkb1WBYjrL", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 131, "prompt_tokens": 82, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Keto Chicken Alfredo\\",\\n    \\"Low Carb Chicken Stir Fry\\",\\n    \\"No Sugar Chicken Salad\\",\\n    \\"Keto Chicken Parmesan\\",\\n    \\"Low Carb Lemon Garlic Chicken\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692558532}
23	2023-08-22 15:57:35.661	2023-08-22 15:57:35.661	200	{"date": "Tue, 22 Aug 2023 15:57:35 GMT", "cf-ray": "7fac4fefb82e83d1-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1149b922189cc9cdb328335985ba303b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1390", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7qO3454ypUoerhVkQnFH2pvyFpjLR", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 82, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n    \\"recipeNames\\": [\\"Cauliflower Fried Rice\\", \\"Zucchini Noodles with Pesto\\", \\"Lemon Garlic Shrimp with Broccoli\\", \\"Baked Parmesan Chicken\\", \\"Spaghetti Squash Carbonara\\"]\\n}"}, "finish_reason": "stop"}], "created": 1692719854}
24	2023-08-22 15:57:55.784	2023-08-22 15:57:55.784	200	{"date": "Tue, 22 Aug 2023 15:57:55 GMT", "cf-ray": "7fac5047bd7de256-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "62521307db231a9d0719e40e9fe90482", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "7548", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89867", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7qO3IeTePMVbK2RxYGCKWoeeAWKU8", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 477, "prompt_tokens": 116, "completion_tokens": 361}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Lemon Garlic Shrimp with Broccoli\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"shrimp\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"broccoli\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon\\",\\n      \\"quantity\\": 1.0,\\n      \\"unit\\": \\"whole\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2.0,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a large skillet, heat olive oil over medium heat.\\\\n2. Add minced garlic and cook for 1-2 minutes until fragrant.\\\\n3. Add shrimp to the skillet and cook for 2-3 minutes on each side until pink and opaque.\\\\n4. Squeeze the juice of one lemon over the shrimp.\\\\n5. Season with salt and black pepper.\\\\n6. In a separate pot, steam the broccoli until tender, about 5 minutes.\\\\n7. Serve the lemon garlic shrimp with the steamed broccoli.\\\\n8. Optional: garnish with lemon slices and chopped parsley.\\" \\n}"}, "finish_reason": "stop"}], "created": 1692719868}
25	2023-08-22 19:20:05.362	2023-08-22 19:20:05.362	200	{"date": "Tue, 22 Aug 2023 19:20:05 GMT", "cf-ray": "7fad788e8ab7295c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "426d0f0f94197c0852696949a63bb5fc", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1032", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7qRD2zo8Dcvz04JVuwl9aSWz3sZIT", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 143, "prompt_tokens": 86, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Cauliflower Fried Rice\\",\\n    \\"Zucchini Noodles with Pesto\\",\\n    \\"Baked Salmon with Lemon and Herbs\\",\\n    \\"Chicken Stir-Fry with Vegetables\\",\\n    \\"Eggplant Lasagna\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1692732004}
26	2023-08-22 19:20:46.455	2023-08-22 19:20:46.455	200	{"date": "Tue, 22 Aug 2023 19:20:46 GMT", "cf-ray": "7fad790d8de462ab-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "79dad6a8ea02e2e7e4666c925759753a", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "22176", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89867", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7qRDMEuDUrbWplCwnDPZaBrFhf3T9", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 859, "prompt_tokens": 116, "completion_tokens": 743}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{ \\n  \\"name\\": \\"Chicken Stir-Fry with Vegetables\\", \\n  \\"ingredients\\": [\\n    { \\n      \\"name\\": \\"chicken breast\\", \\n      \\"quantity\\": 2, \\n      \\"unit\\": \\"pieces\\" \\n    },\\n    { \\n      \\"name\\": \\"soy sauce\\", \\n      \\"quantity\\": 2, \\n      \\"unit\\": \\"tablespoons\\" \\n    },\\n    { \\n      \\"name\\": \\"cornstarch\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"tablespoon\\" \\n    },\\n    { \\n      \\"name\\": \\"sesame oil\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"tablespoon\\" \\n    },\\n    { \\n      \\"name\\": \\"vegetable oil\\", \\n      \\"quantity\\": 2, \\n      \\"unit\\": \\"tablespoons\\" \\n    },\\n    { \\n      \\"name\\": \\"garlic\\", \\n      \\"quantity\\": 3, \\n      \\"unit\\": \\"cloves\\" \\n    },\\n    { \\n      \\"name\\": \\"ginger\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"tablespoon\\" \\n    },\\n    { \\n      \\"name\\": \\"bell pepper\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"piece\\" \\n    },\\n    { \\n      \\"name\\": \\"broccoli\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"head\\" \\n    },\\n    { \\n      \\"name\\": \\"carrot\\", \\n      \\"quantity\\": 1, \\n      \\"unit\\": \\"piece\\" \\n    },\\n    { \\n      \\"name\\": \\"snow peas\\", \\n      \\"quantity\\": 0.5, \\n      \\"unit\\": \\"cup\\" \\n    },\\n    { \\n      \\"name\\": \\"chicken broth\\", \\n      \\"quantity\\": 0.5, \\n      \\"unit\\": \\"cup\\" \\n    },\\n    { \\n      \\"name\\": \\"hoisin sauce\\", \\n      \\"quantity\\": 2, \\n      \\"unit\\": \\"tablespoons\\" \\n    },\\n    { \\n      \\"name\\": \\"salt\\", \\n      \\"quantity\\": 0.5, \\n      \\"unit\\": \\"teaspoon\\" \\n    },\\n    { \\n      \\"name\\": \\"black pepper\\", \\n      \\"quantity\\": 0.25, \\n      \\"unit\\": \\"teaspoon\\" \\n    },\\n    { \\n      \\"name\\": \\"green onions\\", \\n      \\"quantity\\": 2, \\n      \\"unit\\": \\"stalks\\" \\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a bowl, mix soy sauce, cornstarch, and sesame oil. Add chicken, toss to coat, and marinate for 15 minutes.\\\\n\\\\n2. Heat vegetable oil in a pan over medium-high heat. Add garlic and ginger, and stir-fry for 1 minute.\\\\n\\\\n3. Add marinated chicken and stir-fry until cooked, about 5-7 minutes. Remove from pan and set aside.\\\\n\\\\n4. In the same pan, add bell pepper, broccoli, carrot, and snow peas. Stir-fry for 3-4 minutes.\\\\n\\\\n5. In a small bowl, mix chicken broth and hoisin sauce. Pour into the pan with vegetables.\\\\n\\\\n6. Return cooked chicken to the pan and stir to combine. Season with salt and black pepper.\\\\n\\\\n7. Cook for another 2-3 minutes, until the sauce thickens.\\\\n\\\\n8. Serve hot, garnished with chopped green onions.\\" \\n}"}, "finish_reason": "stop"}], "created": 1692732024}
27	2023-08-26 14:50:34.948	2023-08-26 14:50:34.948	200	{"date": "Sat, 26 Aug 2023 14:50:34 GMT", "cf-ray": "7fcce34798bb637b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "48d8fee2544c33a7240a2124fe494509", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1298", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rouPajiGPrF2VbqVfhA4VrY0yr26", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 131, "prompt_tokens": 86, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Keto Chicken Alfredo\\", \\"Cauliflower Fried Rice\\", \\"Zucchini Noodle Carbonara\\", \\"Salmon with Lemon Dill Sauce\\", \\"Stuffed Bell Peppers\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693061433}
29	2023-08-26 14:51:08.747	2023-08-26 14:51:08.747	200	{"date": "Sat, 26 Aug 2023 14:51:08 GMT", "cf-ray": "7fcce4180b2c1401-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "edd7e41017b587e5ebb2743e9e8498d2", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1755", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7roux4FXAxI2IkVZUTelN4rMz0Ssa", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 86, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Cauliflower Fried Rice\\",\\n    \\"Zucchini Noodle Alfredo\\",\\n    \\"Chicken and Broccoli Stir Fry\\",\\n    \\"Spaghetti Squash with Meatballs\\",\\n    \\"Avocado and Bacon Salad\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693061467}
30	2023-08-26 14:51:30.563	2023-08-26 14:51:30.563	200	{"date": "Sat, 26 Aug 2023 14:51:30 GMT", "cf-ray": "7fcce436d8b46303-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "613bbe0768052813eea7d15b0225d733", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "16209", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rov4NDUczXS1U7JRqLZqEPk3JKXf", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 768, "prompt_tokens": 113, "completion_tokens": 655}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Cauliflower Fried Rice\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"cauliflower\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"head\\"\\n    },\\n    {\\n      \\"name\\": \\"carrots\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"green peas\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic cloves\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"ginger\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"soy sauce\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"sesame oil\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"eggs\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"spring onions\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"stalks\\"\\n    },\\n    {\\n      \\"name\\": \\"vegetable oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Cut the cauliflower into florets and pulse them in a food processor until they resemble rice grains. Set aside.\\\\n2. Peel and finely chop the carrots, dice the onion, mince the garlic cloves, grate the ginger, and chop the spring onions.\\\\n3. Heat 1 tablespoon of vegetable oil in a large skillet or wok over medium heat.\\\\n4. Add the chopped onion and cook until translucent, about 2 minutes.\\\\n5. Add the minced garlic and grated ginger, and cook for another 1 minute.\\\\n6. Push the onion, garlic, and ginger mixture to one side of the skillet and crack the eggs into the empty space. Scramble the eggs using a spatula until they are cooked through.\\\\n7. Add the chopped carrots and green peas to the skillet and cook for 2-3 minutes, stirring occasionally.\\\\n8. Add the cauliflower rice to the skillet and stir to combine all the ingredients.\\\\n9. Add soy sauce, sesame oil, salt, and black pepper to the skillet. Stir well to coat the cauliflower rice evenly with the sauce.\\\\n10. Cook for another 3-4 minutes, stirring occasionally, until the cauliflower rice is tender but not mushy.\\\\n11. Garnish with chopped spring onions and serve hot. Enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061474}
31	2023-08-26 14:56:12.474	2023-08-26 14:56:12.474	200	{"date": "Sat, 26 Aug 2023 14:56:12 GMT", "cf-ray": "7fcceb7fbed72312-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a6480beebba40cefff3426cf8fa1141f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1930", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rozqmYO6aAdEyUhYFaS87g0uCKMr", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 131, "prompt_tokens": 78, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Quinoa salad with roasted vegetables\\", \\"Chicken and vegetable stir-fry\\", \\"Grilled salmon with lemon and herbs\\", \\"Zucchini noodles with pesto and grilled chicken\\", \\"Spicy black bean tacos with avocado salsa\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693061770}
32	2023-08-26 14:56:58.847	2023-08-26 14:56:58.847	200	{"date": "Sat, 26 Aug 2023 14:56:58 GMT", "cf-ray": "7fcceca5788e2a21-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "61d6171cf42f02cd9e42610bc78cc903", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1509", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp0bVsHX74hKopPTo0QfeZuGXOxh", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 81, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Hamburg Stir Fry\\", \\"Hamburg Casserole\\", \\"Hamburg Tacos\\", \\"Hamburg Lettuce Wraps\\", \\"Hamburg Stuffed Bell Peppers\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693061817}
33	2023-08-26 14:57:14.258	2023-08-26 14:57:14.258	200	{"date": "Sat, 26 Aug 2023 14:57:14 GMT", "cf-ray": "7fcceccb2bdf2a8a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "9f8938d2d463dc4f12696191af50805d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "10904", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "85ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89872", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp0huemt22TpJNlXN3V7K8MMg8DD", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 487, "prompt_tokens": 112, "completion_tokens": 375}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Hamburg Tacos\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"flour\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"ground beef\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"diced tomatoes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"shredded lettuce\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"shredded cheese\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"sour cream\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"taco seasoning\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"packet\\"\\n    },\\n    {\\n      \\"name\\": \\"tortillas\\",\\n      \\"quantity\\": 8,\\n      \\"unit\\": \\"pieces\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a large skillet, brown the ground beef over medium heat.\\\\n2. Drain any excess grease from the skillet.\\\\n3. Add the taco seasoning and diced tomatoes to the skillet. Stir well.\\\\n4. Simmer for 5-10 minutes until the flavors are well combined.\\\\n5. Warm the tortillas in a separate skillet or in the microwave.\\\\n6. Place a scoop of the ground beef mixture onto each tortilla.\\\\n7. Top with shredded lettuce, shredded cheese, and sour cream.\\\\n8. Fold the tortilla over the filling to form a taco.\\\\n9. Serve and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061823}
34	2023-08-26 14:57:26.225	2023-08-26 14:57:26.225	200	{"date": "Sat, 26 Aug 2023 14:57:26 GMT", "cf-ray": "7fcced11f80310e6-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3385de0d5feb1026722a82b75aabc0f3", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "11565", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "85ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89872", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp0svPXVuLTynlpC39IIrWfMR9js", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 499, "prompt_tokens": 112, "completion_tokens": 387}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Hamburg Tacos\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"ground beef\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"taco seasoning\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"flour tortillas\\",\\n      \\"quantity\\": 8,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"shredded lettuce\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"diced tomatoes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"shredded cheddar cheese\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"sour cream\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salsa\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"guacamole\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a large skillet, cook the ground beef over medium heat until browned. Drain any excess grease.\\\\n2. Stir in the taco seasoning and cook for an additional 2-3 minutes.\\\\n3. Warm the flour tortillas in a dry skillet or microwave until pliable.\\\\n4. Divide the ground beef mixture evenly among the tortillas.\\\\n5. Top with shredded lettuce, diced tomatoes, shredded cheddar cheese, sour cream, salsa, and guacamole.\\\\n6. Fold the tortillas in half and serve immediately.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061834}
35	2023-08-26 14:57:30.229	2023-08-26 14:57:30.229	200	{"date": "Sat, 26 Aug 2023 14:57:30 GMT", "cf-ray": "7fcced68ac652925-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5820acd7bb0b96ce649af7fb5f35562a", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1393", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp16ggUMmP2cnDYDoCIu78gqW0rb", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 124, "prompt_tokens": 78, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Garlic Shrimp\\", \\"Balsamic Roasted Chicken\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Mexican Grilled Chicken Salad\\", \\"Thai Basil Beef Stir Fry\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693061848}
36	2023-08-26 14:57:44.92	2023-08-26 14:57:44.92	200	{"date": "Sat, 26 Aug 2023 14:57:44 GMT", "cf-ray": "7fcced7e9f1c10f4-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "486b899d7f1713dc85a109dd434d4c15", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "10175", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp1C25XVIvIj7GoMV6HTHrnanQcM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 509, "prompt_tokens": 113, "completion_tokens": 396}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Lemon Garlic Shrimp\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"shrimp\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic cloves\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"butter\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"parsley\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Peel and devein the shrimp.\\\\n2. Mince the garlic cloves.\\\\n3. Juice one lemon.\\\\n4. Cut the other lemon into wedges.\\\\n5. In a large skillet, melt the butter and olive oil over medium heat.\\\\n6. Add the minced garlic and sauté for 1-2 minutes until fragrant.\\\\n7. Add the shrimp to the skillet and cook for 2-3 minutes per side until pink and opaque.\\\\n8. Season with salt and black pepper.\\\\n9. Pour the lemon juice over the shrimp and cook for an additional minute.\\\\n10. Remove from heat and sprinkle with chopped parsley.\\\\n11. Serve with lemon wedges and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061854}
37	2023-08-26 14:57:54.865	2023-08-26 14:57:54.865	200	{"date": "Sat, 26 Aug 2023 14:57:54 GMT", "cf-ray": "7fccedcc8b33108c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6822e0a65d8af527574137f021bcf103", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "9386", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp1Nqogkljidyrticup6LSPPgGZJ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 482, "prompt_tokens": 113, "completion_tokens": 369}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Lemon Garlic Shrimp\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"shrimp\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"butter\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"parsley\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Peel and devein the shrimp.\\\\n2. Mince the garlic.\\\\n3. Juice the lemon.\\\\n4. In a large skillet, heat the butter and olive oil over medium heat.\\\\n5. Add the minced garlic and sauté for 1-2 minutes.\\\\n6. Add the shrimp, salt, and black pepper to the skillet, and cook until the shrimp are pink and cooked through, about 3-4 minutes per side.\\\\n7. Remove the skillet from heat and stir in the lemon juice.\\\\n8. Sprinkle with parsley and serve hot.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061865}
44	2023-08-26 15:04:35.193	2023-08-26 15:04:35.193	200	{"date": "Sat, 26 Aug 2023 15:04:35 GMT", "cf-ray": "7fccf784ff311064-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "dee65049ed129c4ce8a6ff994d3f3222", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "12534", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89868", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp7mYAr3lFm7FCSey8gtAKmD22vM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 517, "prompt_tokens": 116, "completion_tokens": 401}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Zucchini Noodles with Pesto\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"zucchini\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh basil leaves\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"pine nuts\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic cloves\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"extra-virgin olive oil\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"grated Parmesan cheese\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Create zucchini noodles using a spiralizer or julienne peeler.\\\\n2. In a food processor, add the basil, pine nuts, garlic, Parmesan cheese, salt, and black pepper. Pulse until roughly chopped.\\\\n3. With the food processor running, slowly pour in the olive oil until the mixture is well combined and reaches a pesto consistency.\\\\n4. Heat a large skillet over medium heat. Add the zucchini noodles and cook for 3-5 minutes, tossing occasionally, until tender.\\\\n5. Remove the skillet from heat and toss the zucchini noodles with the pesto sauce until well coated.\\\\n6. Serve immediately and garnish with additional Parmesan cheese if desired.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693062262}
38	2023-08-26 14:57:56.325	2023-08-26 14:57:56.325	200	{"date": "Sat, 26 Aug 2023 14:57:56 GMT", "cf-ray": "7fccee0c7a5d2225-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ed9032f4eaa44e458feadace74fc5a85", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1582", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp1WqDgTzcd5o2bZDaOAU3QuMzSx", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 137, "prompt_tokens": 78, "completion_tokens": 59}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n   \\"recipeNames\\": [\\n      \\"Grilled chicken with roasted vegetables\\",\\n      \\"Zucchini noodles with shrimp\\",\\n      \\"Baked salmon with quinoa and roasted asparagus\\",\\n      \\"Mexican-style stuffed bell peppers\\",\\n      \\"Thai coconut curry with chicken and vegetables\\"\\n   ]\\n}"}, "finish_reason": "stop"}], "created": 1693061874}
39	2023-08-26 14:58:12.958	2023-08-26 14:58:12.958	200	{"date": "Sat, 26 Aug 2023 14:58:12 GMT", "cf-ray": "7fccee23081022dc-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "12c2e5c1b14626d5eebc634bcd423462", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "14611", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "90ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89865", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp1aSPcEMcheRXTmnJV4ZoOXpMSJ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 622, "prompt_tokens": 115, "completion_tokens": 507}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{ \\n  \\"name\\": \\"Grilled Chicken with Roasted Vegetables\\", \\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breasts\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"bell peppers\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"zucchini\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"balsamic vinegar\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the grill to medium-high heat.\\\\n\\\\n2. Season the chicken breasts with 1/2 teaspoon of salt and 1/2 teaspoon of black pepper.\\\\n\\\\n3. In a mixing bowl, combine olive oil, balsamic vinegar, minced garlic, 1/2 teaspoon of salt, and 1/2 teaspoon of black pepper.\\\\n\\\\n4. Slice the bell peppers, zucchini, and red onion into thick strips.\\\\n\\\\n5. Toss the sliced vegetables with the prepared marinade.\\\\n\\\\n6. Grill the chicken breasts for about 6-8 minutes on each side or until cooked through.\\\\n\\\\n7. While the chicken is grilling, place the marinated vegetables onto a grill pan or vegetable grill basket.\\\\n\\\\n8. Grill the vegetables for 10-12 minutes, turning occasionally, until they are tender and lightly charred.\\\\n\\\\n9. Remove the chicken and vegetables from the grill and let them rest for a few minutes.\\\\n\\\\n10. Serve the grilled chicken with roasted vegetables on the side.\\\\n\\\\nEnjoy your delicious grilled chicken with roasted vegetables!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061878}
40	2023-08-26 14:58:35.275	2023-08-26 14:58:35.275	200	{"date": "Sat, 26 Aug 2023 14:58:35 GMT", "cf-ray": "7fcceeaf5d801253-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "094fcc891bdd5943039d859b8d6e07ec", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "14468", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "90ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89865", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp1wPby6S4KJoXWaNpwf0nFvJyvF", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 605, "prompt_tokens": 115, "completion_tokens": 490}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Grilled Chicken with Roasted Vegetables\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breasts\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"zucchini\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"red bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"yellow bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"dried oregano\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1.5,\\n      \\"unit\\": \\"teaspoons\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat the grill to medium-high heat.\\\\n\\\\n2. In a small bowl, mix together the olive oil, minced garlic, dried oregano, salt, and black pepper.\\\\n\\\\n3. Place the chicken breasts in a shallow dish and brush both sides with the marinade.\\\\n\\\\n4. Cut the zucchini, red bell pepper, yellow bell pepper, and red onion into bite-sized pieces.\\\\n\\\\n5. Place the vegetables in a large bowl and toss with the remaining marinade.\\\\n\\\\n6. Thread the chicken and vegetables onto skewers, alternating between chicken and vegetables.\\\\n\\\\n7. Grill the skewers for about 10-12 minutes, turning occasionally, until the chicken is cooked through and the vegetables are tender.\\\\n\\\\n8. Remove from the grill and let the skewers rest for a few minutes before serving.\\\\n\\\\n9. Serve the grilled chicken skewers with the roasted vegetables. Enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061900}
41	2023-08-26 14:59:26.105	2023-08-26 14:59:26.105	200	{"date": "Sat, 26 Aug 2023 14:59:26 GMT", "cf-ray": "7fcceff52a25123d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fc0f01d05760d6245539753975e8259d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "13161", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "90ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89865", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp2mCIoIHYbuXJDSLlSHWcDzQu1j", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 593, "prompt_tokens": 115, "completion_tokens": 478}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Grilled Chicken with Roasted Vegetables\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breasts\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"red bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"yellow bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"zucchini\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic powder\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"paprika\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat grill to medium-high heat.\\\\n2. Cut the red and yellow bell peppers, zucchini, and red onion into thick slices.\\\\n3. In a large bowl, toss the sliced vegetables with olive oil, salt, black pepper, garlic powder, and paprika until evenly coated.\\\\n4. Place the chicken breasts on the preheated grill and cook for about 6-8 minutes per side, or until the internal temperature reaches 165°F.\\\\n5. While the chicken is cooking, arrange the seasoned vegetables on a grill pan or directly on the grill grates.\\\\n6. Grill the vegetables for about 6-8 minutes, or until they are tender and slightly charred.\\\\n7. Remove the chicken and vegetables from the grill.\\\\n8. Serve the grilled chicken with the roasted vegetables.\\\\n9. Enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693061952}
42	2023-08-26 15:00:42.775	2023-08-26 15:00:42.775	200	{"date": "Sat, 26 Aug 2023 15:00:42 GMT", "cf-ray": "7fccf21c3a34298c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a9ebb7f7af0903a3ab411efef6ab405e", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1685", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp4DCUDC8ozU0dH8mW5Axz95XRRp", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 86, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Grilled Lemon Herb Chicken\\",\\n    \\"Baked Salmon with Garlic Butter\\",\\n    \\"Zucchini Noodles with Pesto\\",\\n    \\"Cauliflower Fried Rice\\",\\n    \\"Greek Salad with Grilled Chicken\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693062041}
43	2023-08-26 15:04:19.636	2023-08-26 15:04:19.636	200	{"date": "Sat, 26 Aug 2023 15:04:19 GMT", "cf-ray": "7fccf768d8f2e1ef-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "11b688d99fa827577fa13e1c3297ada4", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1409", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rp7idDE3ANg9fbJ6zlP77YwFWuha", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 131, "prompt_tokens": 86, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Zucchini Noodles with Pesto\\", \\"Cauliflower Fried Rice\\", \\"Baked Lemon Herb Salmon\\", \\"Turkey Lettuce Wraps\\", \\"Cheesy Broccoli Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693062258}
45	2023-08-26 16:51:25.145	2023-08-26 16:51:25.145	200	{"date": "Sat, 26 Aug 2023 16:51:25 GMT", "cf-ray": "7fcd9446d85f2d46-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "c5aa3842a584e317ed0281292771003d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1680", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rqnL8k6hE3agWBhsQHvYxdfCy9Yb", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 86, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Low Carb Zucchini Noodles with Pesto\\", \\"Sugar Free Baked Chicken Thighs\\", \\"Grain-Free Cauliflower Fried Rice\\", \\"No Olive Greek Salad\\", \\"Low Carb Salmon with Lemon Garlic Butter Sauce\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693068683}
46	2023-08-26 16:51:40.551	2023-08-26 16:51:40.551	200	{"date": "Sat, 26 Aug 2023 16:51:40 GMT", "cf-ray": "7fcd94609ff82919-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "c6e32a3f4d70ddf1ae2921f6565d9cb7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "12984", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89870", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7rqnPXED4m3ouoSJnChXvsBhE8ykE", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 514, "prompt_tokens": 113, "completion_tokens": 401}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"No Olive Greek Salad\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"cucumber\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"tomato\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"small\\"\\n    },\\n    {\\n      \\"name\\": \\"bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"feta cheese\\",\\n      \\"quantity\\": 200,\\n      \\"unit\\": \\"grams\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon juice\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"dried oregano\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Chop the cucumber, tomato, red onion, and bell pepper into bite-sized pieces.\\\\n2. In a large bowl, combine the chopped vegetables.\\\\n3. Crumble the feta cheese over the vegetables.\\\\n4. In a small bowl, whisk together the olive oil, lemon juice, dried oregano, salt, and black pepper.\\\\n5. Pour the dressing over the salad and toss to coat evenly.\\\\n6. Serve immediately and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693068687}
47	2023-08-29 12:51:30.99	2023-08-29 12:51:30.99	200	{"date": "Tue, 29 Aug 2023 12:51:30 GMT", "cf-ray": "7fe4ecfb6897112f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cacc524a920e27697127442cddabf2cc", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1637", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7ssTpFg5JIkDPO2PAl4B82GRiLjYD", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 86, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Garlic Chicken\\", \\"Zucchini Noodles with Pesto\\", \\"Stuffed Bell Peppers\\", \\"Spicy Buffalo Cauliflower Bites\\", \\"Grilled Salmon with Asparagus\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693313489}
48	2023-08-29 12:51:33.238	2023-08-29 12:51:33.238	200	{"date": "Tue, 29 Aug 2023 12:51:33 GMT", "cf-ray": "7fe4ed07ed591150-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "f76476db1986eb424012f820b6229c16", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1938", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7ssTrQnrW7Wgtz4YmEFsESfMeySKo", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 141, "prompt_tokens": 86, "completion_tokens": 55}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Grilled Salmon with Asparagus\\",\\n    \\"Cauliflower Fried Rice\\",\\n    \\"Chicken and Broccoli Stir-Fry\\",\\n    \\"Zucchini Noodles with Pesto\\",\\n    \\"Eggplant Lasagna\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693313491}
49	2023-08-29 12:51:35.096	2023-08-29 12:51:35.096	200	{"date": "Tue, 29 Aug 2023 12:51:35 GMT", "cf-ray": "7fe4ed15d967629f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cd2df5e2edf3eee471228ae24f0a3256", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1568", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7ssTt7TapTIboppoz9cGDB96RQ7CZ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 86, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Avocado Chicken Salad\\", \\"Broccoli Cheddar Soup\\", \\"Cauliflower Crusted Pizza\\", \\"Stuffed Bell Peppers\\", \\"Keto Chicken Alfredo\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693313493}
50	2023-08-29 15:15:51.985	2023-08-29 15:15:51.985	200	{"date": "Tue, 29 Aug 2023 15:15:51 GMT", "cf-ray": "7fe5c06c18c22934-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "733f283c4fe9a1b011eb80fa0367de69", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2074", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujVNyFSFUqMASFIGiQ4rwYgAHLg", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 142, "prompt_tokens": 77, "completion_tokens": 65}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Pineapple Chicken Stir-Fry\\",\\n    \\"Grilled Pineapple and Shrimp Skewers\\",\\n    \\"Pineapple Mango Smoothie Bowl\\",\\n    \\"Teriyaki Tofu with Pineapple\\",\\n    \\"Pineapple Coconut Quinoa Salad\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322149}
51	2023-08-29 15:15:54.258	2023-08-29 15:15:54.258	200	{"date": "Tue, 29 Aug 2023 15:15:54 GMT", "cf-ray": "7fe5c07b68dfe258-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e5b3dae691cd69c09dfec6b5e75a80f7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1840", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujYZ3bEmBTzVdoSUI9M1wPwt2mM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 77, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Skewers\\", \\"Pineapple Salsa\\", \\"Hawaiian Chicken Stir-Fry\\", \\"Pineapple Yogurt Parfait\\", \\"Pineapple Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322152}
52	2023-08-29 15:15:56.188	2023-08-29 15:15:56.188	200	{"date": "Tue, 29 Aug 2023 15:15:56 GMT", "cf-ray": "7fe5c089bcde2b1c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "7ba107cd882a69f726e55ff8f1b04007", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1566", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujaaUo4tCqIBnUWbXMKUNsiPzh2", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 77, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Chicken\\", \\"Pineapple Quinoa Salad\\", \\"Teriyaki Pineapple Shrimp Stir-Fry\\", \\"Pineapple Coconut Smoothie\\", \\"Pineapple Salsa\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322154}
53	2023-08-29 15:15:58.512	2023-08-29 15:15:58.512	200	{"date": "Tue, 29 Aug 2023 15:15:58 GMT", "cf-ray": "7fe5c09688f72d85-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a5e7731d7c65b820794e7160d0fb4d59", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1807", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujcJCfaD0VZwqxVmi7SYgzAzvxf", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 77, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Grilled Pineapple with Honey Glaze\\",\\n    \\"Pineapple Salsa\\",\\n    \\"Pineapple Coconut Smoothie\\",\\n    \\"Grilled Chicken Pineapple Skewers\\",\\n    \\"Pineapple Fried Rice\\"\\n   ]\\n}"}, "finish_reason": "stop"}], "created": 1693322156}
54	2023-08-29 15:16:00.875	2023-08-29 15:16:00.875	200	{"date": "Tue, 29 Aug 2023 15:16:00 GMT", "cf-ray": "7fe5c0a4dc320400-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "40a00e0bf2dad501182f45f9f779d357", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1895", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujfMbUmpwggQEyau1qQHqtVWmag", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 135, "prompt_tokens": 77, "completion_tokens": 58}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Grilled Pineapple Skewers\\",\\n    \\"Pineapple Salsa Chicken\\",\\n    \\"Teriyaki Pineapple Fried Rice\\",\\n    \\"Pineapple Coconut Smoothie\\",\\n    \\"Pineapple Chicken Stir-fry\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322159}
55	2023-08-29 15:16:03.72	2023-08-29 15:16:03.72	200	{"date": "Tue, 29 Aug 2023 15:16:03 GMT", "cf-ray": "7fe5c0b35fca871d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0353143ea46030dffdc9b270bbfc0a82", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2172", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujhE6TDZYb5lCSBbWy0g2vVSaLW", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 77, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Pineapple Teriyaki Chicken\\",\\n    \\"Hawaiian Pineapple Fried Rice\\",\\n    \\"Grilled Pineapple and Chicken Salad\\",\\n    \\"Pineapple Coconut Smoothie\\",\\n    \\"Pineapple Salsa\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322161}
56	2023-08-29 15:16:05.917	2023-08-29 15:16:05.917	200	{"date": "Tue, 29 Aug 2023 15:16:05 GMT", "cf-ray": "7fe5c0c5fb7b1cde-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "d94d24f9c130aea9117124f938bb785d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1632", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujkADdU1yIhcaiXUUVW0mkqFoH6", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 77, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Pineapple Teriyaki Chicken\\", \\"Pineapple Fried Rice\\", \\"Grilled Pineapple Chicken Skewers\\", \\"Pineapple Salsa Chicken\\", \\"Pineapple Coconut Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322164}
57	2023-08-29 15:16:08.356	2023-08-29 15:16:08.356	200	{"date": "Tue, 29 Aug 2023 15:16:08 GMT", "cf-ray": "7fe5c0d2ee9a1112-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1d6c0a799ed11a19fc5832def6a2f36e", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2018", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujmJqM1rw8JHXTRdNVdvAJ0dCsn", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 77, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Pineapple Chicken Stir-Fry\\", \\"Grilled Pineapple Shrimp Skewers\\", \\"Pineapple Coconut Smoothie\\", \\"Teriyaki Pineapple Turkey Burgers\\", \\"Pineapple Quinoa Salad\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322166}
58	2023-08-29 15:16:10.795	2023-08-29 15:16:10.795	200	{"date": "Tue, 29 Aug 2023 15:16:10 GMT", "cf-ray": "7fe5c0e1ed2a104d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "584b50496d882b7a5c343f0acb6ec792", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2028", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujomwcsu2syZOqMVw6TdVv7vT9g", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 77, "completion_tokens": 55}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Pineapple Chicken Stir-Fry\\", \\"Grilled Pineapple Teriyaki Burgers\\", \\"Pineapple Salsa Stuffed Avocado\\", \\"Pineapple Coconut Smoothie\\", \\"Hawaiian Pineapple Fried Rice\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322168}
59	2023-08-29 15:16:13.395	2023-08-29 15:16:13.395	200	{"date": "Tue, 29 Aug 2023 15:16:13 GMT", "cf-ray": "7fe5c0f20fc7806c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0b671b4462b3da4ef57b7b98712febeb", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2054", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89910", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujrws3pFkaPKwhtqMxMwpFP2omO", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 77, "completion_tokens": 56}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Pineapple Chicken Stir-Fry\\", \\"Hawaiian Grilled Shrimp Skewers\\", \\"Pineapple and Spinach Smoothie\\", \\"Teriyaki Pineapple Turkey Burgers\\", \\"Pineapple Salsa Chicken\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322171}
60	2023-08-29 15:16:15.699	2023-08-29 15:16:15.699	200	{"date": "Tue, 29 Aug 2023 15:16:15 GMT", "cf-ray": "7fe5c101ac14e1c6-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "4356569753f2e31052bcd3f1b8126435", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1863", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujta1eflbj95mnLBnhWgr3fKY7o", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 77, "completion_tokens": 51}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Pineapple Chicken Stir-Fry\\", \\"Grilled Pineapple and Shrimp Skewers\\", \\"Pineapple Quinoa Salad\\", \\"Pineapple Salsa\\", \\"Pineapple Coconut Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322173}
61	2023-08-29 15:16:17.677	2023-08-29 15:16:17.677	200	{"date": "Tue, 29 Aug 2023 15:16:17 GMT", "cf-ray": "7fe5c10f69602c68-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a31e25cd55608493cd190c33050744bb", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1669", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89910", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujv7HNviiuIncrtJJl4wbmNuPaF", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 77, "completion_tokens": 51}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Pineapple Smoothie\\",\\n    \\"Grilled Pineapple Chicken\\",\\n    \\"Pineapple Fried Rice\\",\\n    \\"Pineapple Salsa\\",\\n    \\"Pineapple Coconut Chicken Curry\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322175}
62	2023-08-29 15:16:19.836	2023-08-29 15:16:19.836	200	{"date": "Tue, 29 Aug 2023 15:16:19 GMT", "cf-ray": "7fe5c11cefbd233b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "2fd4e9c53670be9b56cb0b8bcf34a190", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1652", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sujyCdMWP8EJItBP7CDTNQxmRJrJ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 77, "completion_tokens": 51}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Chicken Salad\\", \\"Pineapple Fried Rice\\", \\"Pineapple Salsa Fish Tacos\\", \\"Pineapple Coconut Smoothie Bowl\\", \\"Teriyaki Pineapple Turkey Burgers\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322178}
63	2023-08-29 15:16:21.952	2023-08-29 15:16:21.952	200	{"date": "Tue, 29 Aug 2023 15:16:21 GMT", "cf-ray": "7fe5c12aa85b10ab-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a44349ccfdae53e9c23d68023ebea853", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1530", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suk0J1teKObj7f4cTlTWNriPYitv", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 119, "prompt_tokens": 77, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Chicken\\", \\"Pineapple Fried Rice\\", \\"Pineapple Salsa\\", \\"Pineapple Smoothie\\", \\"Pineapple Coconut Curry\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322180}
64	2023-08-29 15:16:23.776	2023-08-29 15:16:23.776	200	{"date": "Tue, 29 Aug 2023 15:16:23 GMT", "cf-ray": "7fe5c1371e8c2be1-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e0531b42fea3aa335b2f2040da537908", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1402", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suk21vAQm7NB9jP67yZub4R3c5sU", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 123, "prompt_tokens": 77, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Chicken\\", \\"Pineapple Fried Rice\\", \\"Healthy Pineapple Smoothie\\", \\"Pineapple Salsa\\", \\"Pineapple Teriyaki Tofu\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322182}
65	2023-08-29 15:16:26.495	2023-08-29 15:16:26.495	200	{"date": "Tue, 29 Aug 2023 15:16:26 GMT", "cf-ray": "7fe5c1426d2f6321-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fb687a03df4d25a06ca758f80fd92203", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1658", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suk4LFntIfbd3uDQeKQyDgGvwEXP", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 120, "prompt_tokens": 77, "completion_tokens": 43}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n\\"recipeNames\\": [\\"Grilled Pineapple Salad\\", \\"Pineapple Chicken Stir-Fry\\", \\"Pineapple Fried Rice\\", \\"Pineapple Salsa\\", \\"Pineapple Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322184}
66	2023-08-29 15:16:28.434	2023-08-29 15:16:28.434	200	{"date": "Tue, 29 Aug 2023 15:16:28 GMT", "cf-ray": "7fe5c1533eb0635d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "99cbc33446d87632fcc1b7d4a142775f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1538", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suk6gYwi0QSVaw3VT5ZPXMLPdvya", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 124, "prompt_tokens": 77, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Grilled Pineapple Chicken\\", \\"Pineapple Shrimp Stir Fry\\", \\"Pineapple Quinoa Salad\\", \\"Spicy Pineapple Salsa\\", \\"Pineapple Coconut Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322186}
67	2023-08-29 15:18:30.788	2023-08-29 15:18:30.788	200	{"date": "Tue, 29 Aug 2023 15:18:30 GMT", "cf-ray": "7fe5c44f6b682a51-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "8622e8a7367be643b847ed19dd28a09c", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1650", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sum5cIe1Cxr3SFuEgH4wUTZcOBlN", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 120, "prompt_tokens": 75, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Salad\\",\\n    \\"Windex Roasted Chicken\\",\\n    \\"Windex Stir-Fry\\",\\n    \\"Windex Smoothie\\",\\n    \\"Windex Soup\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322309}
68	2023-08-29 15:18:32.624	2023-08-29 15:18:32.624	200	{"date": "Tue, 29 Aug 2023 15:18:32 GMT", "cf-ray": "7fe5c45c1a6b2b20-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cd249a511e9de076ce91da9e6c8016e1", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1455", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sum7dDKcgXGQ0q50tEi5S3W37ihx", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 121, "prompt_tokens": 75, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Smoothie\\",\\n    \\"Windex Salad\\",\\n    \\"Windex Stir-fry\\",\\n    \\"Windex Soup\\",\\n    \\"Windex Roasted Vegetables\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322311}
69	2023-08-29 15:18:34.373	2023-08-29 15:18:34.373	200	{"date": "Tue, 29 Aug 2023 15:18:34 GMT", "cf-ray": "7fe5c4675a582256-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "94f8a7d89e55e1b2edf4e8baa13a3fa7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1324", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sum974zJC5uFZW6Sj2wQKcqr4aWL", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 112, "prompt_tokens": 75, "completion_tokens": 37}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex Smoothie\\", \\"Windex Salad\\", \\"Windex Stir-Fry\\", \\"Windex Soup\\", \\"Windex Quinoa Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322313}
140	2023-08-29 15:26:55.788	2023-08-29 15:26:55.788	200	{"date": "Tue, 29 Aug 2023 15:26:55 GMT", "cf-ray": "7fe5d045ff48114f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cc7fb62f7b694b093c5120780581075f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "16593", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "85ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89872", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sutzQDjhWlg8HgTeRZ2wU2TP0xBP", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 652, "prompt_tokens": 113, "completion_tokens": 539}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Gloom Stew\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"beef\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"carrot\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"potato\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"beef broth\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"tomato paste\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"soy sauce\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"flour\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"paprika\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a large pot, heat some oil over medium-high heat.\\\\n2. Add the beef and cook until browned. Remove the beef from the pot and set it aside.\\\\n3. In the same pot, add the onion, carrot, and potato. Cook for about 5 minutes until they start to soften.\\\\n4. Add the garlic and cook for another minute.\\\\n5. Return the beef to the pot and stir in the beef broth, tomato paste, and soy sauce.\\\\n6. In a separate small bowl, whisk together the flour, salt, black pepper, and paprika. Sprinkle this mixture over the stew and stir well to combine.\\\\n7. Bring the stew to a boil, then reduce the heat to low, cover, and simmer for about 1 hour until the beef is tender and the flavors have melded together.\\\\n8. Serve hot and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322799}
70	2023-08-29 15:18:36.381	2023-08-29 15:18:36.381	200	{"date": "Tue, 29 Aug 2023 15:18:36 GMT", "cf-ray": "7fe5c4728e92e26a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1fae77c5b210c2864f85219ee1535907", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1609", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumAAmsWclNudG4JyBewSrdwefdj", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 119, "prompt_tokens": 75, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Salad\\",\\n    \\"Windex Stir Fry\\",\\n    \\"Windex Soup\\",\\n    \\"Windex Smoothie\\",\\n    \\"Windex Grilled Chicken\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322314}
71	2023-08-29 15:18:38.443	2023-08-29 15:18:38.443	200	{"date": "Tue, 29 Aug 2023 15:18:38 GMT", "cf-ray": "7fe5c47eda8e2a72-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "38bb2f1f8c184f3b8e011becfbb5ad0d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1725", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumCx7CX1ssDoH7rmYOAzdhzoyTb", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 122, "prompt_tokens": 75, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Salad\\",\\n    \\"Windex Stir-Fry\\",\\n    \\"Windex Soup\\",\\n    \\"Windex Stuffed Bell Peppers\\",\\n    \\"Windex Smoothie\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322316}
72	2023-08-29 15:18:40.028	2023-08-29 15:18:40.028	200	{"date": "Tue, 29 Aug 2023 15:18:39 GMT", "cf-ray": "7fe5c48c3c4400fc-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1ae52ef0f3c8921a00895ad55020dbc1", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1131", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumEP8Ee8OzMbNRktdfEP8SIt8ZI", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 110, "prompt_tokens": 75, "completion_tokens": 35}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex Salad\\", \\"Windex Soup\\", \\"Windex Stir-Fry\\", \\"Windex Curry\\", \\"Windex Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322318}
73	2023-08-29 15:18:42.323	2023-08-29 15:18:42.323	200	{"date": "Tue, 29 Aug 2023 15:18:42 GMT", "cf-ray": "7fe5c4978d5f22d0-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3bd4760fc2788dbadf1eda674921f24b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1647", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumGF8gdMVfRpshAJZAIxdw6yxMQ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 75, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Caesar Salad\\",\\n    \\"Windex Roasted Chicken\\",\\n    \\"Windex Vegetable Stir-fry\\",\\n    \\"Windex Quinoa Salad\\",\\n    \\"Windex Berry Smoothie\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322320}
74	2023-08-29 15:18:44.047	2023-08-29 15:18:44.047	200	{"date": "Tue, 29 Aug 2023 15:18:44 GMT", "cf-ray": "7fe5c4a45a8886da-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6c4fbb399120e3dfa4b2293d8f39e63d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1331", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumIs4ik1GScMJ16vVnEwuUReqm9", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 112, "prompt_tokens": 75, "completion_tokens": 37}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex Salad\\", \\"Windex Stir-Fry\\", \\"Windex Soup\\", \\"Windex Smoothie\\", \\"Windex Quinoa Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322322}
173	2023-08-30 15:54:39.628	2023-08-30 15:54:39.628	200	{"date": "Wed, 30 Aug 2023 15:54:39 GMT", "cf-ray": "7fee3641ec781158-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ef4b2b5e4038478a19000ff7dc544126", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "17084", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89866", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7tHoM5KkCuUEli2aedVByAlm9XOSn", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 661, "prompt_tokens": 115, "completion_tokens": 546}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Greek Salad with Grilled Chicken\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breast\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"romaine lettuce\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"head\\"\\n    },\\n    {\\n      \\"name\\": \\"cucumber\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"tomato\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"piece\\"\\n    },\\n    {\\n      \\"name\\": \\"kalamata olives\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"feta cheese\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"extra virgin olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon juice\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"dried oregano\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat grill to medium-high heat.\\\\n2. Season the chicken breasts with salt, black pepper, and dried oregano.\\\\n3. Grill the chicken for about 6-8 minutes per side, or until cooked through. Let it rest for a few minutes, then cut into slices.\\\\n4. Meanwhile, chop the romaine lettuce, cucumber, red onion, and tomato.\\\\n5. In a large bowl, combine the lettuce, cucumber, red onion, tomato, kalamata olives, and feta cheese.\\\\n6. In a small bowl, whisk together the extra virgin olive oil, lemon juice, dried oregano, salt, and black pepper.\\\\n7. Pour the dressing over the salad and toss to combine.\\\\n8. Divide the salad onto plates and top with the grilled chicken slices.\\\\n9. Serve and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693410862}
75	2023-08-29 15:18:46.12	2023-08-29 15:18:46.12	200	{"date": "Tue, 29 Aug 2023 15:18:46 GMT", "cf-ray": "7fe5c4aeecade180-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a9c7d58805624beead2199e303a43cd9", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1701", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumKBbAFdYFlOtyerhvG6I16FVul", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 124, "prompt_tokens": 75, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex Chicken Stir Fry\\", \\"Windex Salad with Grilled Shrimp\\", \\"Windex Veggie Curry\\", \\"Windex and Quinoa Stuffed Peppers\\", \\"Windex Berry Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322324}
76	2023-08-29 15:18:49.731	2023-08-29 15:18:49.731	200	{"date": "Tue, 29 Aug 2023 15:18:49 GMT", "cf-ray": "7fe5c4bc48576342-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cd4c64eef8a49d8688b97d4decfb8615", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1793", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumNEh2h9brykn9mtjv9daBQWqDj", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 75, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex Salad\\",\\n    \\"Windex Stir-Fry\\",\\n    \\"Windex Stuffed Bell Peppers\\",\\n    \\"Windex Tofu Scramble\\",\\n    \\"Windex Veggie Wrap\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322327}
77	2023-08-29 15:18:51.74	2023-08-29 15:18:51.74	200	{"date": "Tue, 29 Aug 2023 15:18:51 GMT", "cf-ray": "7fe5c4d3af0d6315-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "db5df21274fa5e97762aa2a3c0bdbe3b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1438", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumQ3UvojUOHweyC2JmYRZ0HKsYg", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 120, "prompt_tokens": 75, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Windex-Tini\\",\\n    \\"Windex Soup\\",\\n    \\"Windex Stir-Fry\\",\\n    \\"Windex Salad\\",\\n    \\"Windex Grilled Chicken\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322330}
78	2023-08-29 15:18:53.263	2023-08-29 15:18:53.263	200	{"date": "Tue, 29 Aug 2023 15:18:53 GMT", "cf-ray": "7fe5c4df1f246321-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "035594b8b9d605dc6dd396648c64db18", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1140", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89914", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sumSfiRYU6Pchut1q63kiBxK9Oui", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 110, "prompt_tokens": 75, "completion_tokens": 35}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex Salad\\", \\"Windex Smoothie\\", \\"Windex Stir-fry\\", \\"Windex Soup\\", \\"Windex Wrap\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322332}
79	2023-08-29 15:20:01.044	2023-08-29 15:20:01.044	200	{"date": "Tue, 29 Aug 2023 15:20:01 GMT", "cf-ray": "7fe5c683fbcc104c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "d4cd31c60411f54083a098eb873756a9", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1545", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunX2j4B7qyGFwTubtEbO9K655ne", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 90, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemonade with a Twist\\", \\"Healthy Green Smoothie\\", \\"Roasted Vegetable Salad\\", \\"Spicy Black Bean Tacos\\", \\"Quinoa Stuffed Bell Peppers\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322399}
80	2023-08-29 15:20:03.932	2023-08-29 15:20:03.932	200	{"date": "Tue, 29 Aug 2023 15:20:03 GMT", "cf-ray": "7fe5c68f798310ea-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "d4b32bb6c53e941ec7d1f3afe5e42330", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1788", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunaLvIbtZMpcc7Xd5XKgY0svQik", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 144, "prompt_tokens": 90, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Creamy Chicken Alfredo\\", \\"Grilled Salmon with Lemon and Dill\\", \\"Vegetable Stir-Fry with Tofu\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Black Bean and Corn Tacos\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322402}
81	2023-08-29 15:20:05.454	2023-08-29 15:20:05.454	200	{"date": "Tue, 29 Aug 2023 15:20:05 GMT", "cf-ray": "7fe5c6a23db92aee-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fc8a44a4ac53f25f7fd5d9c8f233e559", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1152", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunclgvYhPasIIf8OXYSBx073Snc", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 90, "completion_tokens": 35}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Detox Soup\\", \\"Vegetable Stir-Fry\\", \\"Quinoa Salad\\", \\"Grilled Salmon\\", \\"Berry Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322404}
82	2023-08-29 15:20:08.074	2023-08-29 15:20:08.074	200	{"date": "Tue, 29 Aug 2023 15:20:08 GMT", "cf-ray": "7fe5c6abdbdc2d82-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "67eb9a4558623b9af90d22e0cbc542a6", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2211", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sund45hZIWt5hT6iV1ai6y0n2LpO", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 152, "prompt_tokens": 90, "completion_tokens": 62}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Lemon Herb Baked Chicken\\",\\n    \\"Quinoa Salad with Roasted Vegetables\\",\\n    \\"Black Bean Tacos with Avocado Lime Sauce\\",\\n    \\"Roasted Salmon with Garlic and Dill\\",\\n    \\"Greek Salad with Grilled Chicken\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322405}
83	2023-08-29 15:20:09.929	2023-08-29 15:20:09.929	200	{"date": "Tue, 29 Aug 2023 15:20:09 GMT", "cf-ray": "7fe5c6bb5ca26399-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "69d4eae5ee5314294596525a2f5e0155", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1556", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sungVWgETUMaFMmuYT4uia6W53om", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 90, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Toxic-Free Stir Fry\\",\\n    \\"Chemical-Free Salad\\",\\n    \\"Harmless Smoothie Bowl\\",\\n    \\"Clean and Safe Pasta Dish\\",\\n    \\"Pure and Healthy Soup\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322408}
84	2023-08-29 15:20:12.324	2023-08-29 15:20:12.324	200	{"date": "Tue, 29 Aug 2023 15:20:12 GMT", "cf-ray": "7fe5c6c78efd870b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "46770a443175396c94d906edbebf8267", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1964", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suniw9kBjCXVPC5vmRoEt2Tfa2kv", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 147, "prompt_tokens": 90, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Spicy Cauliflower Bites\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Black Bean Tacos with Avocado Lime Sauce\\", \\"Roasted Vegetable Salad with Balsamic Glaze\\", \\"Mango Salsa and Grilled Chicken\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322410}
85	2023-08-29 15:20:15.263	2023-08-29 15:20:15.263	200	{"date": "Tue, 29 Aug 2023 15:20:15 GMT", "cf-ray": "7fe5c6d669db10fa-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6098738506784ee723c312ff4fa76487", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2355", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunl5NnUq9bw7DHr0mtbydsK6h9A", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 144, "prompt_tokens": 90, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Cauliflower Rice Stir-Fry\\", \\"Grilled Salmon with Lemon and Herbs\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Mediterranean Chickpea Salad\\", \\"Spinach and Mushroom Frittata\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322413}
86	2023-08-29 15:20:17.276	2023-08-29 15:20:17.276	200	{"date": "Tue, 29 Aug 2023 15:20:17 GMT", "cf-ray": "7fe5c6e93d1d6380-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "7874472261c4eeabceb6017bf1f6b4b5", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1617", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunnztfcptoxtb5GySobr5DvxIkr", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 135, "prompt_tokens": 90, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Windex and Ammonia Salad\\", \\"Bleach-Baked Chicken\\", \\"Meth-infused Stir Fry\\", \\"Cocaine Cocktail\\", \\"Motor Oil Marinated Steak\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322415}
87	2023-08-29 15:20:19.827	2023-08-29 15:20:19.827	200	{"date": "Tue, 29 Aug 2023 15:20:19 GMT", "cf-ray": "7fe5c6f51cecf21a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "bc7a1a76e2d11aedea8dc333e691a747", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1732", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunpfHuyztfrfNRFQNTjDClk3QGC", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 144, "prompt_tokens": 90, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Lemon-Rosemary Chicken\\",\\n    \\"Roasted Garlic Cauliflower\\",\\n    \\"Balsamic Glazed Salmon\\",\\n    \\"Quinoa Stuffed Peppers\\",\\n    \\"Mango Avocado Salsa\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322417}
88	2023-08-29 15:20:25.046	2023-08-29 15:20:25.046	200	{"date": "Tue, 29 Aug 2023 15:20:25 GMT", "cf-ray": "7fe5c70609e222e0-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cedd2f8b19efe31791078f9da44fc4f9", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1620", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunv5auopyoX3GqnrAal0sd4PPa0", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 90, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Garlic Chicken\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Grilled Salmon with Avocado Salsa\\", \\"Vegan Black Bean Soup\\", \\"Mango Coconut Chia Pudding\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322423}
89	2023-08-29 15:20:27.367	2023-08-29 15:20:27.367	200	{"date": "Tue, 29 Aug 2023 15:20:27 GMT", "cf-ray": "7fe5c7274e322300-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "289413dc8dcbbeff178375cb777f6847", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1695", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunxRcntKN6n19z8z2kaOR5RBFFd", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Detox Smoothie\\", \\"Vegan Lentil Soup\\", \\"Gluten-Free Thai Curry\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Roasted Vegetable Salad\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322425}
90	2023-08-29 15:20:29.293	2023-08-29 15:20:29.293	200	{"date": "Tue, 29 Aug 2023 15:20:29 GMT", "cf-ray": "7fe5c734af792daa-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "89daca0a5d0d5a16165ba390c9f54bec", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1476", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sunzt9uOlRBGzbwfLbc7O7D76lR8", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 90, "completion_tokens": 38}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Tofu Stir-Fry\\", \\"Quinoa Salad\\", \\"Veggie Wrap\\", \\"Black Bean Tacos\\", \\"Mango Salsa\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322427}
91	2023-08-29 15:20:31.578	2023-08-29 15:20:31.578	200	{"date": "Tue, 29 Aug 2023 15:20:31 GMT", "cf-ray": "7fe5c740cf94631b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3dce3c8930bde60acb6eaec4a7df9cea", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1867", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suo16oF2GOOztVqQighJpSwC6V9p", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 146, "prompt_tokens": 90, "completion_tokens": 56}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Herb Roasted Chicken\\", \\"Grilled Salmon with Dill Sauce\\", \\"Spaghetti with Tomato and Basil\\", \\"Quinoa Salad with Avocado and Black Beans\\", \\"Stuffed Bell Peppers with Quinoa and Vegetables\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322429}
92	2023-08-29 15:20:33.825	2023-08-29 15:20:33.825	200	{"date": "Tue, 29 Aug 2023 15:20:33 GMT", "cf-ray": "7fe5c74f8ba51ce2-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "00a28486557b2e674127809aebbc18b4", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1726", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suo45JsVpZHLhfgHRwTLj03qDU5P", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 90, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Garlic Chicken\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Thai Coconut Curry Soup\\", \\"Mediterranean Stuffed Peppers\\", \\"Greek Yogurt Parfait\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322432}
93	2023-08-29 15:20:35.4	2023-08-29 15:20:35.4	200	{"date": "Tue, 29 Aug 2023 15:20:35 GMT", "cf-ray": "7fe5c75d0a318723-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fe19908d4d576b0b6aea0eb160f8b819", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1180", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suo67VO6YXc8TivZYw5xXf3jRYF5", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 122, "prompt_tokens": 90, "completion_tokens": 32}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"recipe 1\\", \\"recipe 2\\", \\"recipe 3\\", \\"recipe 4\\", \\"recipe 5\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322434}
94	2023-08-29 15:20:37.241	2023-08-29 15:20:37.241	200	{"date": "Tue, 29 Aug 2023 15:20:37 GMT", "cf-ray": "7fe5c7673d541101-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cf5a37f939b6e15c46aac8bd7b2b5eb9", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1413", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suo7L9Ob3a5AJHNkzRnXYY9W8KuI", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 90, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegetable Stir-Fry\\", \\"Quinoa Salad\\", \\"Grilled Chicken with Roasted Vegetables\\", \\"Tofu Scramble\\", \\"Cauliflower Rice\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322435}
95	2023-08-29 15:20:39.599	2023-08-29 15:20:39.599	200	{"date": "Tue, 29 Aug 2023 15:20:39 GMT", "cf-ray": "7fe5c7737996c510-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0cb910b9f3ec473d2d9762eb96f009c5", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1729", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suo9bFICw53m4TcJfzMov7ZAFtV5", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 90, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Detox Water\\", \\"Vegan Stir-Fry\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Spicy Black Bean Tacos\\", \\"Mango Smoothie Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322437}
96	2023-08-29 15:20:41.767	2023-08-29 15:20:41.767	200	{"date": "Tue, 29 Aug 2023 15:20:41 GMT", "cf-ray": "7fe5c781ba3800f8-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3a603e37c53d9aa7bb016b13036fc24e", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1681", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoC6UytP0HnoFgJG9kME2SfmXVo", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 142, "prompt_tokens": 90, "completion_tokens": 52}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon-Rosemary Chicken\\", \\"Quinoa-Stuffed Bell Peppers\\", \\"Vegan Lentil Curry\\", \\"Zucchini Noodles with Avocado Pesto\\", \\"Mediterranean Chickpea Salad\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322440}
97	2023-08-29 15:20:43.902	2023-08-29 15:20:43.902	200	{"date": "Tue, 29 Aug 2023 15:20:43 GMT", "cf-ray": "7fe5c78eed196293-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e1722f1dd7a94c7c086666d90dc6c0a8", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1732", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoEVlCZecnHgbPr7joKHF3CjAu8", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 142, "prompt_tokens": 90, "completion_tokens": 52}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Scented Pancakes\\", \\"Ginger Turmeric Stir-Fry\\", \\"Roasted Vegetable Quinoa Salad\\", \\"Black Bean and Sweet Potato Tacos\\", \\"Mango Coconut Chia Pudding\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322442}
98	2023-08-29 15:20:46.462	2023-08-29 15:20:46.462	200	{"date": "Tue, 29 Aug 2023 15:20:46 GMT", "cf-ray": "7fe5c79cab5561ec-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3a2001ade76abae10014cb7ff31dfbb6", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1812", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoGvJYyCbJsWfHAnigy9vwKr7Bp", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 147, "prompt_tokens": 90, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Lemon Garlic Shrimp\\",\\n    \\"Baked Chicken with Herbs\\",\\n    \\"Quinoa Salad with Roasted Vegetables\\",\\n    \\"Grilled Salmon with Dill Sauce\\",\\n    \\"Mango Avocado Salsa\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322444}
99	2023-08-29 15:20:48.669	2023-08-29 15:20:48.669	200	{"date": "Tue, 29 Aug 2023 15:20:48 GMT", "cf-ray": "7fe5c7ac69c20276-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e26752e8eb7dbf1fb3d568ba1765b349", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1527", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoIAJ6zBiOOuyNVtvhAnJ0TVc1x", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 90, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n   \\"recipeNames\\": [\\"Sparkling Watermelon Salad\\", \\"Homemade Lemonade\\", \\"Fresh Strawberry Smoothie\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Chickpea Curry with Spinach\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322446}
100	2023-08-29 15:20:50.534	2023-08-29 15:20:50.534	200	{"date": "Tue, 29 Aug 2023 15:20:50 GMT", "cf-ray": "7fe5c7ba088b2b18-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0be93cdbf188c6312c7c5f57a91733bc", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1453", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoLJFanyPXBa9TymYKrfhqJfa0r", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 90, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegetable Stir-Fry\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Black Bean Tacos\\", \\"Mushroom Risotto\\", \\"Lentil Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322449}
101	2023-08-29 15:20:52.148	2023-08-29 15:20:52.148	200	{"date": "Tue, 29 Aug 2023 15:20:52 GMT", "cf-ray": "7fe5c7c5fc151130-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ad072b15343bcd0aacf7876a1736d11b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1160", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoM2BizsGoWIjbv27LxRYzdVCoB", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 90, "completion_tokens": 35}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Safety Salad\\", \\"Clean Energy Smoothie\\", \\"Fresh Lemonade\\", \\"Sparkling Watermelon Cooler\\", \\"Refreshing Mint Mojito\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322450}
102	2023-08-29 15:20:54.224	2023-08-29 15:20:54.224	200	{"date": "Tue, 29 Aug 2023 15:20:54 GMT", "cf-ray": "7fe5c7cf5a63e250-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3a295fe38967368f3a306486d7dd5211", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1748", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoOACVapvi88u2oLQh3TB1B35vJ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 90, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Healthy Green Smoothie\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Grilled Chicken with Lemon and Herbs\\", \\"Vegan Lentil Soup\\", \\"Baked Salmon with Garlic and Dill\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322452}
103	2023-08-29 15:20:56.8	2023-08-29 15:20:56.8	200	{"date": "Tue, 29 Aug 2023 15:20:56 GMT", "cf-ray": "7fe5c7dd1c7f233a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "7a0fae134e176507b30565f8abcc3488", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1861", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoRHmyPbYaANiT8aX2zvVTOw899", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 131, "prompt_tokens": 90, "completion_tokens": 41}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Toxic-Free Smoothie\\", \\"Chemical-Free Salad\\", \\"Natural Detox Soup\\", \\"Eco-Friendly Stir-Fry\\", \\"Organic Power Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322455}
104	2023-08-29 15:20:58.946	2023-08-29 15:20:58.946	200	{"date": "Tue, 29 Aug 2023 15:20:58 GMT", "cf-ray": "7fe5c7ed9e6a291f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e801ee038b840e1a278f317e1c8330d2", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1504", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoTGSrrjxNLnkeWsAVjvHA4z3HA", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 90, "completion_tokens": 43}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Lemon Garlic Chicken\\",\\n    \\"Quinoa Salad\\",\\n    \\"Grilled Vegetables\\",\\n    \\"Black Bean Tacos\\",\\n    \\"Baked Salmon\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322457}
105	2023-08-29 15:21:01.244	2023-08-29 15:21:01.244	200	{"date": "Tue, 29 Aug 2023 15:21:01 GMT", "cf-ray": "7fe5c7fa9f761163-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "b1e0c4b7d51464663fb84fd58e8c305c", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1840", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoV6wMhFQa8VBpDIUoUH4QrvHF2", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 145, "prompt_tokens": 90, "completion_tokens": 55}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Citrus Chicken Stir-Fry\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Black Bean Tacos with Avocado Salsa\\", \\"Mediterranean Stuffed Peppers\\", \\"Spicy Thai Basil Tofu\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322459}
106	2023-08-29 15:21:03.069	2023-08-29 15:21:03.069	200	{"date": "Tue, 29 Aug 2023 15:21:03 GMT", "cf-ray": "7fe5c8092f562305-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "1dad30a342485f43171dc2c9da9b8415", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1336", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoXSG3n4HczHR8VUOG0rrIwd93f", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 125, "prompt_tokens": 90, "completion_tokens": 35}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Cleaning Solution Salad\\", \\"Toxic Smoothie\\", \\"Chemical Cocktail\\", \\"Hazardous Pasta\\", \\"Motor Oil Marinade\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322461}
107	2023-08-29 15:21:05.314	2023-08-29 15:21:05.314	200	{"date": "Tue, 29 Aug 2023 15:21:05 GMT", "cf-ray": "7fe5c814895b2318-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5fd5cdfca24d13aa76830bc501376eaf", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1755", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoZnsH7oYFWvZ60LaaG3RgJrWJ3", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 142, "prompt_tokens": 90, "completion_tokens": 52}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Toxic-Free Quinoa Salad\\",\\n    \\"Natural Detox Smoothie\\",\\n    \\"Vegan Lentil Stew\\",\\n    \\"Gluten-Free Vegetable Stir Fry\\",\\n    \\"Healthy Fruit Parfait\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322463}
108	2023-08-29 15:21:07.211	2023-08-29 15:21:07.211	200	{"date": "Tue, 29 Aug 2023 15:21:07 GMT", "cf-ray": "7fe5c821fed32a36-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ef733326b0d7e8a213c18e9a88293141", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1503", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suob5BA1YnYwkSoLk2MjNUJa4DMt", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Safe and Healthy Salad\\", \\"Nutritious Smoothie Bowl\\", \\"Vegan Quinoa Stir-Fry\\", \\"Roasted Vegetable Medley\\", \\"Refreshing Fruit Salad\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322465}
109	2023-08-29 15:21:09.536	2023-08-29 15:21:09.536	200	{"date": "Tue, 29 Aug 2023 15:21:09 GMT", "cf-ray": "7fe5c82d5e6e61ec-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a5f32d450b27c26240be224999a902bc", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2011", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suodKhdssAL2iTWow4drF8Fo4j8c", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 150, "prompt_tokens": 90, "completion_tokens": 60}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Non-Toxic All-Purpose Cleaner\\",\\n    \\"Natural DIY Laundry Detergent\\",\\n    \\"Vinegar and Baking Soda Drain Cleaner\\",\\n    \\"Homemade Glass Cleaner\\",\\n    \\"Eco-Friendly Stovetop Cleaner\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322467}
110	2023-08-29 15:21:11.304	2023-08-29 15:21:11.304	200	{"date": "Tue, 29 Aug 2023 15:21:11 GMT", "cf-ray": "7fe5c83c9c9d61c2-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "05d8bb1820b03d3016cadedc99218046", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1346", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suogBalWdl0ZxYSW9pNph81DbZZJ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 128, "prompt_tokens": 90, "completion_tokens": 38}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean & Green Smoothie\\", \\"Fresh Lemonade\\", \\"Herbal Detox Tea\\", \\"Oven-Baked Salmon\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322470}
111	2023-08-29 15:21:13.713	2023-08-29 15:21:13.713	200	{"date": "Tue, 29 Aug 2023 15:21:13 GMT", "cf-ray": "7fe5c8477b561177-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "c745fd07f70e381efca5c5b172bfc5e7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2010", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suohq3hA9Of68Lr2lqkES6rZVhbD", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 152, "prompt_tokens": 90, "completion_tokens": 62}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Lemon Garlic Shrimp\\",\\n    \\"Mediterranean Quinoa Salad\\",\\n    \\"Grilled Chicken with Roasted Vegetables\\",\\n    \\"Baked Salmon with Dill Sauce\\",\\n    \\"Vegetable Stir-Fry with Tofu\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322471}
112	2023-08-29 15:21:15.772	2023-08-29 15:21:15.772	200	{"date": "Tue, 29 Aug 2023 15:21:15 GMT", "cf-ray": "7fe5c8568b4861aa-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "be246a5727639892653f251103652d6d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1662", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suokWywfmLux86d78N7aR2wtDigI", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 142, "prompt_tokens": 90, "completion_tokens": 52}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sparkling Lemonade\\",\\n    \\"Crunchy Kale Salad\\",\\n    \\"Quinoa Stuffed Bell Peppers\\",\\n    \\"Coconut Curry Tofu\\",\\n    \\"Chocolate Avocado Mousse\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322474}
113	2023-08-29 15:21:17.648	2023-08-29 15:21:17.648	200	{"date": "Tue, 29 Aug 2023 15:21:17 GMT", "cf-ray": "7fe5c863ae461254-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a565e32f04bcac827c8d6f3db4dd201e", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1431", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suompsGYXMEe7ZWvWUIAgLW2F0zL", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 90, "completion_tokens": 43}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n    \\"recipeNames\\": [\\"Fresh Green Salad\\", \\"Quinoa-Stuffed Bell Peppers\\", \\"Grilled Lemon Herb Chicken\\", \\"Roasted Vegetable Medley\\", \\"Black Bean and Corn Tacos\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322476}
114	2023-08-29 15:21:20.13	2023-08-29 15:21:20.13	200	{"date": "Tue, 29 Aug 2023 15:21:20 GMT", "cf-ray": "7fe5c86eff520256-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5c98307d4dbf4ac40fdf4bfae733d8a7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2029", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suook6dK1Iagg82HZ4GsVt6Q0Yqz", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 146, "prompt_tokens": 90, "completion_tokens": 56}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegetable Stir-Fry\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Black Bean Tacos with Avocado Salsa\\", \\"Grilled Salmon with Lemon and Dill\\", \\"Mango Coconut Chia Pudding\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322478}
115	2023-08-29 15:21:21.968	2023-08-29 15:21:21.968	200	{"date": "Tue, 29 Aug 2023 15:21:21 GMT", "cf-ray": "7fe5c87ddb3e2a66-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "2d97532470b568224ff8e9e946e7d862", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1494", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoqxvcPHudY3QNWOWgTbqrwT8iI", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 129, "prompt_tokens": 90, "completion_tokens": 39}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Basil Chicken\\", \\"Quinoa Veggie Stir-Fry\\", \\"Black Bean Tacos\\", \\"Greek Salad\\", \\"Oven Roasted Salmon\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322480}
116	2023-08-29 15:21:23.884	2023-08-29 15:21:23.884	200	{"date": "Tue, 29 Aug 2023 15:21:23 GMT", "cf-ray": "7fe5c88a2896e1a9-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "23d0bf2def8315346ea60fa7ad59d69f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1503", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suosUVgfDvVyew2LOamjPkoCGwx8", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Refreshing Lemonade\\", \\"Zesty Chicken Stir-Fry\\", \\"Quinoa Salad with Veggies\\", \\"Baked Salmon with Herbs\\", \\"Vegetable Curry\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322482}
117	2023-08-29 15:21:25.783	2023-08-29 15:21:25.783	200	{"date": "Tue, 29 Aug 2023 15:21:25 GMT", "cf-ray": "7fe5c896088a1124-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5d50388d5cc552449da9e8d39c0cd282", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1490", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suousBfYscbQBrFR996OEzJAck6F", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Quinoa Salad\\", \\"Spicy Black Bean Tacos\\", \\"Sweet Potato Curry\\", \\"Mango Salsa Chicken\\", \\"Greek Salad with Grilled Chicken\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322484}
118	2023-08-29 15:21:27.889	2023-08-29 15:21:27.889	200	{"date": "Tue, 29 Aug 2023 15:21:27 GMT", "cf-ray": "7fe5c8a21acb6396-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ac8e363b5592946bcff5b40128670e9f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1687", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suowY1Afn75pHOag0lM4BXcP8Cd5", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 90, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Fresh Vegetable Stir-Fry\\", \\"Grilled Salmon with Lemon Herb Sauce\\", \\"Quinoa and Black Bean Salad\\", \\"Roasted Chicken with Rosemary and Garlic\\", \\"Baked Sweet Potato Fries\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322486}
119	2023-08-29 15:21:30.027	2023-08-29 15:21:30.027	200	{"date": "Tue, 29 Aug 2023 15:21:30 GMT", "cf-ray": "7fe5c8af19ec2aa8-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "076b75fe17a82ea5a48ff0569e927283", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1751", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suoyjyXCLuARMVad9Yp81agBSvE9", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 90, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Toxic-Free Salad\\",\\n    \\"Purifying Smoothie\\",\\n    \\"Natural Detox Soup\\",\\n    \\"Clean and Lean Stir-Fry\\",\\n    \\"Organic Energy Bites\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322488}
120	2023-08-29 15:21:32.14	2023-08-29 15:21:32.14	200	{"date": "Tue, 29 Aug 2023 15:21:32 GMT", "cf-ray": "7fe5c8bcc8d5108c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ca1375eea18a6e9297d28f02742d9b85", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1674", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup0knd6c6H52YdXF49ifxev7HOc", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 143, "prompt_tokens": 90, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Healthy Green Smoothie\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Baked Salmon with Lemon and Dill\\", \\"Mango Salsa Chicken Wrap\\", \\"Vegetable Stir-Fry with Tofu\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322490}
121	2023-08-29 15:21:34.258	2023-08-29 15:21:34.258	200	{"date": "Tue, 29 Aug 2023 15:21:34 GMT", "cf-ray": "7fe5c8c9eab522e6-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "c00e6ded53d7ed44b6efc6779ad0cc21", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1693", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup2DeDnBg88EK5IQ1S06NDKQN0G", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 90, "completion_tokens": 50}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Detergent-Free Vegan Pasta\\", \\"All-Natural Disinfectant Salad\\", \\"Chemical-Free Homemade Salsa\\", \\"Non-Toxic Energy Smoothie\\", \\"Eco-Friendly Motor Oil Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322492}
122	2023-08-29 15:21:36.325	2023-08-29 15:21:36.325	200	{"date": "Tue, 29 Aug 2023 15:21:36 GMT", "cf-ray": "7fe5c8d71ddc6357-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5049723768f2b68d1fc5d65ff22b28e6", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1626", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup4FK0kdkxwdidYd0xZwTGOMYEg", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 138, "prompt_tokens": 90, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Clean Green Smoothie\\", \\"Citrus Grilled Chicken\\", \\"Sautéed Vegetable Stir-Fry\\", \\"Spicy Black Bean Tacos\\", \\"Quinoa Salad with Lemon Vinaigrette\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322494}
123	2023-08-29 15:21:37.302	2023-08-29 15:21:37.302	200	{"date": "Tue, 29 Aug 2023 15:21:37 GMT", "cf-ray": "7fe5c8dd0f251044-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "3943935fd88d2e7954879d26b97dc0e7", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1662", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "63ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89905", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup5ZQEi9qAONa5Bg0gzwKt5hV3d", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 86, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Garlic Butter Shrimp\\", \\"Cauliflower Fried Rice\\", \\"Spinach and Feta Stuffed Chicken\\", \\"Baked Lemon Herb Salmon\\", \\"Zucchini Noodles with Pesto\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322495}
124	2023-08-29 15:21:38.345	2023-08-29 15:21:38.345	200	{"date": "Tue, 29 Aug 2023 15:21:38 GMT", "cf-ray": "7fe5c8e40f0a123f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "10f6b690c6d45b1681a4d6fac13d0511", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1585", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup6oyXrOEhD1I7s6CL0yWTlHoxZ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sparkling Lemonade\\", \\"Quinoa Salad\\", \\"Grilled Chicken with Vegetables\\", \\"Vegetarian Stir-Fry\\", \\"Baked Salmon with Herbs\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322496}
125	2023-08-29 15:21:40.146	2023-08-29 15:21:40.146	200	{"date": "Tue, 29 Aug 2023 15:21:40 GMT", "cf-ray": "7fe5c8f01ea46392-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6cdf693e1ecd2faaeeb5612157ffbf3a", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1475", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sup8DARe3uFHmQo3n329VjOxEMzW", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 90, "completion_tokens": 46}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Toxic-Free Salad\\",\\n    \\"Natural Cleaning Potion\\",\\n    \\"Non-Toxic All-Purpose Cleaner\\",\\n    \\"Refreshing Lemonade\\",\\n    \\"Homemade Face Mask\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322498}
126	2023-08-29 15:21:42.221	2023-08-29 15:21:42.221	200	{"date": "Tue, 29 Aug 2023 15:21:42 GMT", "cf-ray": "7fe5c8fc39b9c568-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "57e285067eeea230d9324c3968a33354", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1580", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7supAiamZRXhnlnSHhCgjb7wcpJfL", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Zesty Lemonade\\", \\"Refreshing Mint Smoothie\\", \\"Homemade Vegetable Soup\\", \\"Mushroom Risotto\\", \\"Grilled Salmon with Lemon-Dill Sauce\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322500}
127	2023-08-29 15:23:08.771	2023-08-29 15:23:08.771	200	{"date": "Tue, 29 Aug 2023 15:23:08 GMT", "cf-ray": "7fe5caea4db32ad6-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cfcf54f5da21e8f756bf388290cc861d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "9087", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suqRyZfUrTgCL7xPQMI4BAxPcpvi", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 404, "prompt_tokens": 114, "completion_tokens": 290}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Refreshing Mint Smoothie\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"fresh mint leaves\\",\\n      \\"quantity\\": 8,\\n      \\"unit\\": \\"leaves\\"\\n    },\\n    {\\n      \\"name\\": \\"spinach\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"cucumber\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"banana\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"lime juice\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"honey\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"almond milk\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"ice cubes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a blender, combine the fresh mint leaves, spinach, cucumber, banana, lime juice, honey, almond milk, and ice cubes.\\\\n2. Blend on high speed until smooth and creamy.\\\\n3. Pour into glasses and serve immediately.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322579}
128	2023-08-29 15:24:03.337	2023-08-29 15:24:03.337	200	{"date": "Tue, 29 Aug 2023 15:24:03 GMT", "cf-ray": "7fe5cc6d5ba32340-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "cdd8ed92510e59ff8f0db1190ab73a66", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1722", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7surRNGucjZC1suOzOye4mBYlUitF", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 90, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sparkling Lemonade\\",\\n    \\"Homemade Vegetable Soup\\",\\n    \\"Herb-Roasted Chicken\\",\\n    \\"Quinoa and Black Bean Salad\\",\\n    \\"Berry Smoothie Bowl\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322641}
129	2023-08-29 15:24:09.828	2023-08-29 15:24:09.828	200	{"date": "Tue, 29 Aug 2023 15:24:09 GMT", "cf-ray": "7fe5cc966d5510cc-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "e2a83f7dbd61466bc4b192018cc3738b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1482", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "56ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89916", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7surYKSbP1FzYtKU2XUB9sLlNOl0U", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 122, "prompt_tokens": 73, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegetable Stir-Fry\\", \\"Quinoa Salad with Roasted Vegetables\\", \\"Zucchini Noodles with Avocado Pesto\\", \\"Cauliflower Fried Rice\\", \\"Black Bean Tacos\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322648}
130	2023-08-29 15:24:26.112	2023-08-29 15:24:26.112	200	{"date": "Tue, 29 Aug 2023 15:24:26 GMT", "cf-ray": "7fe5ccfa9ed822e8-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "97ec6507543afec4eff762a46e48b597", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1908", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suroPZ7MFwHEKjPpR9DYVKzt4btv", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 144, "prompt_tokens": 90, "completion_tokens": 54}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegan Curry Tofu Stir Fry\\", \\"Gluten-Free Quinoa Salad\\", \\"Paleo Cauliflower Fried Rice\\", \\"Keto Chicken Zucchini Noodle Soup\\", \\"Dairy-Free Chocolate Chia Pudding\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322664}
131	2023-08-29 15:24:45.362	2023-08-29 15:24:45.362	200	{"date": "Tue, 29 Aug 2023 15:24:45 GMT", "cf-ray": "7fe5cd24dd2be15b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "080ac0b6fe471a822f5cf005632839e5", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "14396", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89871", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7survlu2SvBuR4Il4bBbgQ6VCR3ca", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 580, "prompt_tokens": 113, "completion_tokens": 467}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\"name\\": \\"Black Bean Tacos\\", \\n\\"ingredients\\": [\\n  {\\"name\\": \\"flour\\", \\"quantity\\": 0.5, \\"unit\\": \\"cup\\"}, \\n  {\\"name\\": \\"black beans\\", \\"quantity\\": 1, \\"unit\\": \\"can\\"}, \\n  {\\"name\\": \\"onion\\", \\"quantity\\": 1, \\"unit\\": \\"medium\\"}, \\n  {\\"name\\": \\"garlic\\", \\"quantity\\": 2, \\"unit\\": \\"cloves\\"}, \\n  {\\"name\\": \\"cumin\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\"}, \\n  {\\"name\\": \\"paprika\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\"}, \\n  {\\"name\\": \\"salt\\", \\"quantity\\": 0.5, \\"unit\\": \\"teaspoon\\"}, \\n  {\\"name\\": \\"black pepper\\", \\"quantity\\": 0.5, \\"unit\\": \\"teaspoon\\"}, \\n  {\\"name\\": \\"olive oil\\", \\"quantity\\": 2, \\"unit\\": \\"tablespoons\\"}, \\n  {\\"name\\": \\"tortillas\\", \\"quantity\\": 4, \\"unit\\": \\"medium\\"},\\n  {\\"name\\": \\"avocado\\", \\"quantity\\": 1, \\"unit\\": \\"large\\"},\\n  {\\"name\\": \\"lime\\", \\"quantity\\": 1, \\"unit\\": \\"medium\\"}\\n],\\n\\"instructions\\": \\"1. Heat olive oil in a pan over medium heat. Add chopped onion and minced garlic. Cook until onion is translucent. \\\\n2. Add cumin, paprika, salt, and black pepper to the pan. Stir well. \\\\n3. Drain and rinse black beans. Add black beans to the pan and cook for 5 minutes, stirring occasionally. \\\\n4. Mash the black beans slightly with a fork or potato masher, leaving some whole beans for texture. \\\\n5. Slice the avocado and squeeze lime juice over it to prevent browning. \\\\n6. Warm tortillas in a separate pan or in the oven. \\\\n7. Assemble the tacos by spreading a layer of black beans on each tortilla, topping with sliced avocado, and adding any additional desired toppings such as salsa or shredded cheese. \\\\n8. Serve warm and enjoy!\\" \\n}"}, "finish_reason": "stop"}], "created": 1693322671}
132	2023-08-29 15:24:48.053	2023-08-29 15:24:48.053	200	{"date": "Tue, 29 Aug 2023 15:24:48 GMT", "cf-ray": "7fe5cd86be872928-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "c63d1c203390833233b6c9e31431e162", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1433", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7susAbrfv4ZzBKVV6lc7zOWqUjHux", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 90, "completion_tokens": 43}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegan Detox Soup\\", \\"Gluten-Free Quinoa Salad\\", \\"Paleo Baked Salmon\\", \\"Dairy-Free Chocolate Smoothie\\", \\"Sugar-Free Banana Bread\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322686}
133	2023-08-29 15:24:59.969	2023-08-29 15:24:59.969	200	{"date": "Tue, 29 Aug 2023 15:24:59 GMT", "cf-ray": "7fe5cdcd2f4022fc-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "91aa8b00d4143eb23aff2c0285c7e43d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2056", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "56ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89916", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7susLSXg0Ie2JBqLHE1RHyoLVolX7", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 134, "prompt_tokens": 73, "completion_tokens": 61}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Vegan Chickpea Curry\\",\\n    \\"Gluten-Free Quinoa Salad\\",\\n    \\"Dairy-Free Cauliflower Soup\\",\\n    \\"Paleo Salmon with Roasted Vegetables\\",\\n    \\"Low-Carb Zucchini Noodles with Pesto\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322697}
134	2023-08-29 15:25:06.109	2023-08-29 15:25:06.109	200	{"date": "Tue, 29 Aug 2023 15:25:06 GMT", "cf-ray": "7fe5cdf6da7d033f-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "9611b42d15317889a60396d9364da404", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1547", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7susSiKoYHBxB0Surk8f9sZKQOmhT", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 90, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Herb Chicken\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Mediterranean Salad\\", \\"Roasted Veggie Tacos\\", \\"Black Bean Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322704}
135	2023-08-29 15:25:27.994	2023-08-29 15:25:27.994	200	{"date": "Tue, 29 Aug 2023 15:25:27 GMT", "cf-ray": "7fe5ce80a99c813d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "f5d0f2e06b7d0f124a555d1d20502f08", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1378", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7susoYHhPJ4Lw0Bzf4ZTaZ222Fvmj", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 90, "completion_tokens": 40}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Clean Eating Smoothie\\", \\"All-Natural Salad Dressing\\", \\"Healthy Homemade Soup\\", \\"Organic Vegetable Stir-Fry\\", \\"Plant-Based Protein Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322726}
136	2023-08-29 15:25:34.646	2023-08-29 15:25:34.646	200	{"date": "Tue, 29 Aug 2023 15:25:34 GMT", "cf-ray": "7fe5ce4f4870e236-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "78d1570194b6a6d76c6b4bf8771a5f90", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "15928", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "86ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7susgjFusItt1r65jtIri7Xhhjgxs", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 578, "prompt_tokens": 111, "completion_tokens": 467}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Mediterranean Salad\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"romaine lettuce\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"head\\"\\n    },\\n    {\\n      \\"name\\": \\"cucumber\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"tomatoes\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"red onion\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"kalamata olives\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"feta cheese\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"extra virgin olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"lemon juice\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"tablespoon\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"dried oregano\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Chop the romaine lettuce, cucumber, tomatoes, and red onion.\\\\n2. In a large bowl, combine the chopped vegetables with kalamata olives and crumbled feta cheese.\\\\n3. In a small bowl, whisk together extra virgin olive oil, lemon juice, minced garlic, dried oregano, salt, and black pepper.\\\\n4. Pour the dressing over the salad and toss well to coat.\\\\n5. Serve immediately or refrigerate until ready to serve.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322718}
137	2023-08-29 15:25:41.651	2023-08-29 15:25:41.651	200	{"date": "Tue, 29 Aug 2023 15:25:41 GMT", "cf-ray": "7fe5ced389b4112a-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "da2526ff4f3aba6e403f491fe903eec9", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1698", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89904", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sut2pPHiU43zOKTHnfu1W11rwYKa", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 137, "prompt_tokens": 90, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Roasted Chicken\\", \\"Quinoa Veggie Stir-Fry\\", \\"Baked Salmon with Herbs\\", \\"Vegan Lentil Soup\\", \\"Grilled Shrimp Skewers\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322740}
138	2023-08-29 15:25:48.583	2023-08-29 15:25:48.583	200	{"date": "Tue, 29 Aug 2023 15:25:48 GMT", "cf-ray": "7fe5cefce8548710-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "71e28d4c7f3c0fef09bb40211ce82598", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2085", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sut8pIQexx5ntMeFrFXk0MP8gRB5", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 76, "completion_tokens": 60}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Grilled Salmon with Lemon and Dill\\",\\n    \\"Mediterranean Quinoa Salad\\",\\n    \\"Baked Chicken Breast with Herbs\\",\\n    \\"Roasted Vegetable Wrap\\",\\n    \\"Greek Yogurt Parfait with Fresh Berries\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322746}
139	2023-08-29 15:26:34.2	2023-08-29 15:26:34.2	200	{"date": "Tue, 29 Aug 2023 15:26:34 GMT", "cf-ray": "7fe5d01e59152a0c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "598f1759208c28a15987252b30f8c5cb", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1392", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "62ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89907", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sutsDwFyApLFd4L5QiZKvUNEvGY3", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 84, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sundelion Salad\\", \\"Gloom Soup\\", \\"Sizzlefin Trout Tacos\\", \\"Sundelion Stir-fry\\", \\"Gloom Stew\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322792}
141	2023-08-29 15:26:56.172	2023-08-29 15:26:56.172	200	{"date": "Tue, 29 Aug 2023 15:26:56 GMT", "cf-ray": "7fe5d0a7882d8710-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "70b204442267da72751fa7203875c504", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1420", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "62ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89907", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suuEZdAmseqJQZDFpIqe3CFvSGa1", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 123, "prompt_tokens": 84, "completion_tokens": 39}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Gloom Pasta\\", \\"Sundelion Salad\\", \\"Sizzlefin Trout Tacos\\", \\"Gloom Burger\\", \\"Sundelion Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322814}
142	2023-08-29 15:27:25.941	2023-08-29 15:27:25.941	200	{"date": "Tue, 29 Aug 2023 15:27:25 GMT", "cf-ray": "7fe5d10acab510d3-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "9f4fc87570839baec623bdc1c937860d", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "15239", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "85ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89872", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suuUUyRqq8oJ0RdtrNYBCOYr9MRC", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 604, "prompt_tokens": 113, "completion_tokens": 491}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Gloom Stew\\",\\n  \\"ingredients\\": [\\n    {\\"name\\": \\"flour\\", \\"quantity\\": 0.5, \\"unit\\": \\"cup\\"},\\n    {\\"name\\": \\"olive oil\\", \\"quantity\\": 2, \\"unit\\": \\"tablespoons\\"},\\n    {\\"name\\": \\"onion\\", \\"quantity\\": 1, \\"unit\\": \\"medium\\"},\\n    {\\"name\\": \\"garlic\\", \\"quantity\\": 2, \\"unit\\": \\"cloves\\"},\\n    {\\"name\\": \\"carrot\\", \\"quantity\\": 1, \\"unit\\": \\"medium\\"},\\n    {\\"name\\": \\"potato\\", \\"quantity\\": 2, \\"unit\\": \\"large\\"},\\n    {\\"name\\": \\"mushrooms\\", \\"quantity\\": 8, \\"unit\\": \\"ounces\\"},\\n    {\\"name\\": \\"vegetable broth\\", \\"quantity\\": 4, \\"unit\\": \\"cups\\"},\\n    {\\"name\\": \\"thyme\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\"},\\n    {\\"name\\": \\"bay leaves\\", \\"quantity\\": 2, \\"unit\\": \\"leaves\\"},\\n    {\\"name\\": \\"salt\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\"},\\n    {\\"name\\": \\"black pepper\\", \\"quantity\\": 0.5, \\"unit\\": \\"teaspoon\\"},\\n    {\\"name\\": \\"liquid smoke\\", \\"quantity\\": 1, \\"unit\\": \\"teaspoon\\"},\\n    {\\"name\\": \\"sour cream\\", \\"quantity\\": 0.25, \\"unit\\": \\"cup\\"}\\n  ],\\n  \\"instructions\\": \\"1. In a large pot, heat olive oil over medium heat. Add chopped onion and minced garlic, and cook until the onion becomes translucent.\\\\n\\\\n2. Add sliced carrots and potatoes to the pot, and cook for a few minutes until they start to soften.\\\\n\\\\n3. Stir in sliced mushrooms and continue cooking for a couple of minutes.\\\\n\\\\n4. Pour in vegetable broth, and add thyme, bay leaves, salt, and black pepper. Bring to a simmer and let it cook for about 20 minutes, or until the vegetables are tender.\\\\n\\\\n5. Remove the bay leaves from the stew and stir in liquid smoke.\\\\n\\\\n6. Serve the Gloom Stew hot with a dollop of sour cream on top.\\\\n\\\\nEnjoy your comforting and flavorful Gloom Stew!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322830}
143	2023-08-29 15:27:36.077	2023-08-29 15:27:36.077	200	{"date": "Tue, 29 Aug 2023 15:27:36 GMT", "cf-ray": "7fe5d13f5fdc0297-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "16747ff7c879fb8593ea87987f72ed04", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "17028", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "85ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89871", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suuddeV79B1eISFc1hhwTG3mzatw", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 661, "prompt_tokens": 113, "completion_tokens": 548}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Gloom Stew\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"beef\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"pound\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"carrot\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"potato\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"tomato\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"medium\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"beef broth\\",\\n      \\"quantity\\": 4,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"red wine\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"thyme\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Cut the beef into bite-sized cubes.\\\\n2. Dice the onion, carrot, and potato.\\\\n3. Peel and dice the tomato.\\\\n4. Mince the garlic.\\\\n5. In a large pot, heat olive oil over medium-high heat.\\\\n6. Add the beef to the pot and cook until browned on all sides.\\\\n7. Add the diced onion and minced garlic to the pot and cook for 2-3 minutes, until fragrant.\\\\n8. Add the diced carrot, potato, and tomato to the pot.\\\\n9. Pour in the beef broth and red wine.\\\\n10. Season with thyme, salt, and black pepper.\\\\n11. Stir well and bring the stew to a boil.\\\\n12. Reduce heat to low, cover the pot, and simmer for 1-2 hours, until the beef is tender.\\\\n13. Serve the Gloom Stew hot with crusty bread.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322839}
144	2023-08-29 15:27:41.11	2023-08-29 15:27:41.11	200	{"date": "Tue, 29 Aug 2023 15:27:41 GMT", "cf-ray": "7fe5d183d9b6812d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "40a0c5f281f4812ab4b4f941ee8b9b9b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "11109", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "88ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89866", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suuns7rwimFRDVE9OP3qPA5Hz8Nv", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 473, "prompt_tokens": 116, "completion_tokens": 357}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Baked Chicken Breast with Herbs\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"chicken breast\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"pieces\\"\\n    },\\n    {\\n      \\"name\\": \\"olive oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh herbs (such as rosemary, thyme, or oregano)\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"teaspoons\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic powder\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. Preheat your oven to 400°F (200°C).\\\\n\\\\n2. In a small bowl, mix together the olive oil, fresh herbs, garlic powder, salt, and black pepper.\\\\n\\\\n3. Place the chicken breasts on a baking sheet lined with parchment paper.\\\\n\\\\n4. Brush both sides of the chicken breasts with the herb mixture.\\\\n\\\\n5. Bake in the preheated oven for 20-25 minutes, or until the chicken is cooked through and reaches an internal temperature of 165°F (75°C).\\\\n\\\\n6. Remove from the oven and let the chicken rest for a few minutes before serving.\\\\n\\\\n7. Serve the baked chicken breast with your favorite side dishes and enjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322849}
145	2023-08-29 15:28:16.589	2023-08-29 15:28:16.589	200	{"date": "Tue, 29 Aug 2023 15:28:16 GMT", "cf-ray": "7fe5d293b90e029d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "88afb01b62d19e3b22dd5f40fb59e020", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2075", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "62ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89907", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suvW8XvcrPoe8P328V8DBrjXtfiG", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 145, "prompt_tokens": 84, "completion_tokens": 61}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Gloomy Sundelion Salad\\",\\n    \\"Sizzlefin Trout Tacos\\",\\n    \\"Sundelion and Gloom Soup\\",\\n    \\"Sizzlefin Trout with Gloom Sauce\\",\\n    \\"Gloom-filled Sundelion Rolls\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322894}
146	2023-08-29 15:28:38.502	2023-08-29 15:28:38.502	200	{"date": "Tue, 29 Aug 2023 15:28:38 GMT", "cf-ray": "7fe5d3270f431131-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "f3cb3ab6150dc7e6867ad89d88ed2e20", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1425", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "57ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89913", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suvtO0SGDj8ql0IgPtlol4wC3K4H", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 121, "prompt_tokens": 76, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Cheerful Chicken Stir-Fry\\", \\"Happy Herb-Roasted Vegetables\\", \\"Joyful Quinoa Salad\\", \\"Blissful Banana Smoothie\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322917}
147	2023-08-29 15:29:24.275	2023-08-29 15:29:24.275	200	{"date": "Tue, 29 Aug 2023 15:29:24 GMT", "cf-ray": "7fe5d441989fc510-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "0e40535f6a38b0203f64d8f376e785d3", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1899", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "58ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suwcNHjO5B7PdUp5Ae7H2PsXQwUU", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 76, "completion_tokens": 56}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n    \\"recipeNames\\": [\\"Grilled Salmon with Lemon and Herbs\\", \\"Quinoa-Stuffed Bell Peppers\\", \\"Mediterranean Chickpea Salad\\", \\"Roasted Chicken with Mixed Vegetables\\", \\"Spaghetti Squash with Garlic and Spinach\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693322962}
148	2023-08-29 15:29:34.255	2023-08-29 15:29:34.255	200	{"date": "Tue, 29 Aug 2023 15:29:34 GMT", "cf-ray": "7fe5d47f3d952335-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "71a50fc0385b278658a15b176c85d79c", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "2119", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suwmZRpGTiki2uG8vbXPKNwq9Xt2", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 144, "prompt_tokens": 88, "completion_tokens": 56}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [ \\n    \\"Vibrant Vegetable Curry\\",\\n    \\"Lemon Garlic Shrimp Scampi\\",\\n    \\"Quinoa-Stuffed Bell Peppers\\",\\n    \\"Coconut Lime Chicken\\",\\n    \\"Mango Avocado Salsa\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322972}
149	2023-08-29 15:29:56.396	2023-08-29 15:29:56.396	200	{"date": "Tue, 29 Aug 2023 15:29:56 GMT", "cf-ray": "7fe5d50c9f0a1125-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "069fc33643e4cb1f5f1e5f75d321af13", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1625", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7sux8Ds4Kq4mg08gHxbbt07lNNrVa", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 135, "prompt_tokens": 88, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunshine Salad\\",\\n    \\"Clean Eating Quinoa Bowl\\",\\n    \\"Vegan Lentil Soup\\",\\n    \\"Roasted Vegetable Medley\\",\\n    \\"Refreshing Fruit Smoothie\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693322994}
150	2023-08-29 15:30:00.816	2023-08-29 15:30:00.816	200	{"date": "Tue, 29 Aug 2023 15:30:00 GMT", "cf-ray": "7fe5d4aadd44036c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "407464d3cbe200253ea2820e4351cff3", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "21688", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suwtvtPwduMeNPggEoIqosg4r397", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 818, "prompt_tokens": 113, "completion_tokens": 705}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n    \\"name\\": \\"Vibrant Vegetable Curry\\",\\n    \\"ingredients\\": [\\n        {\\n            \\"name\\": \\"vegetable oil\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"tablespoons\\"\\n        },\\n        {\\n            \\"name\\": \\"onion\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"large\\"\\n        },\\n        {\\n            \\"name\\": \\"garlic cloves\\",\\n            \\"quantity\\": 3,\\n            \\"unit\\": \\"cloves\\"\\n        },\\n        {\\n            \\"name\\": \\"ginger\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"inch\\"\\n        },\\n        {\\n            \\"name\\": \\"curry powder\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"teaspoons\\"\\n        },\\n        {\\n            \\"name\\": \\"turmeric\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"ground cumin\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"ground coriander\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"cayenne pepper\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"carrots\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"large\\"\\n        },\\n        {\\n            \\"name\\": \\"sweet potato\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"large\\"\\n        },\\n        {\\n            \\"name\\": \\"cauliflower florets\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"cups\\"\\n        },\\n        {\\n            \\"name\\": \\"coconut milk\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"can (14 oz)\\"\\n        },\\n        {\\n            \\"name\\": \\"vegetable broth\\",\\n            \\"quantity\\": 1.5,\\n            \\"unit\\": \\"cups\\"\\n        },\\n        {\\n            \\"name\\": \\"salt\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"pepper\\",\\n            \\"quantity\\": 0.5,\\n            \\"unit\\": \\"teaspoon\\"\\n        },\\n        {\\n            \\"name\\": \\"lime juice\\",\\n            \\"quantity\\": 1,\\n            \\"unit\\": \\"tablespoon\\"\\n        },\\n        {\\n            \\"name\\": \\"fresh cilantro\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"tablespoons\\"\\n        }\\n    ],\\n    \\"instructions\\": \\"1. Heat vegetable oil in a large pot over medium heat.\\\\n\\\\n2. Add the onion, garlic, and ginger. Cook for 5 minutes until onions are translucent.\\\\n\\\\n3. Add curry powder, turmeric, ground cumin, ground coriander, and cayenne pepper to the pot. Stir well to coat the onions and spices.\\\\n\\\\n4. Add carrots, sweet potato, and cauliflower to the pot. Stir to coat the vegetables with the spices.\\\\n\\\\n5. Pour in the coconut milk and vegetable broth. Season with salt and pepper. Bring to a simmer and cook for 20 minutes until the vegetables are tender.\\\\n\\\\n6. Stir in lime juice and fresh cilantro.\\\\n\\\\n7. Serve the vibrant vegetable curry over cooked rice or with naan bread.\\\\n\\\\nEnjoy!\\"\\n}"}, "finish_reason": "stop"}], "created": 1693322979}
151	2023-08-29 15:30:46.894	2023-08-29 15:30:46.894	200	{"date": "Tue, 29 Aug 2023 15:30:46 GMT", "cf-ray": "7fe5d5b4288a124b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "169faaef8cb007439084c6993f971894", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "25310", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suxZMwY5RgOwT4zA8Gc4x3h8vnyT", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 948, "prompt_tokens": 113, "completion_tokens": 835}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"name\\": \\"Vibrant Vegetable Curry\\",\\n  \\"ingredients\\": [\\n    {\\n      \\"name\\": \\"flour\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"vegetable oil\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"onion\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"garlic\\",\\n      \\"quantity\\": 3,\\n      \\"unit\\": \\"cloves\\"\\n    },\\n    {\\n      \\"name\\": \\"ginger\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"inch\\"\\n    },\\n    {\\n      \\"name\\": \\"red bell pepper\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"carrots\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"\\"\\n    },\\n    {\\n      \\"name\\": \\"sweet potato\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"large\\"\\n    },\\n    {\\n      \\"name\\": \\"cauliflower\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"small head\\"\\n    },\\n    {\\n      \\"name\\": \\"curry powder\\",\\n      \\"quantity\\": 2,\\n      \\"unit\\": \\"tablespoons\\"\\n    },\\n    {\\n      \\"name\\": \\"ground turmeric\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"ground cumin\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"ground coriander\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"ground cinnamon\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"cayenne pepper\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"coconut milk\\",\\n      \\"quantity\\": 1.5,\\n      \\"unit\\": \\"cups\\"\\n    },\\n    {\\n      \\"name\\": \\"vegetable broth\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"cherry tomatoes\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"fresh cilantro\\",\\n      \\"quantity\\": 0.25,\\n      \\"unit\\": \\"cup\\"\\n    },\\n    {\\n      \\"name\\": \\"salt\\",\\n      \\"quantity\\": 1,\\n      \\"unit\\": \\"teaspoon\\"\\n    },\\n    {\\n      \\"name\\": \\"black pepper\\",\\n      \\"quantity\\": 0.5,\\n      \\"unit\\": \\"teaspoon\\"\\n    }\\n  ],\\n  \\"instructions\\": \\"1. In a large pot, heat the vegetable oil over medium heat.\\\\n2. Add the chopped onion and cook until translucent, about 5 minutes.\\\\n3. Add the minced garlic and grated ginger, cook for another minute.\\\\n4. Add the curry powder, turmeric, cumin, coriander, cinnamon, and cayenne pepper. Stir well to coat the onions and spices.\\\\n5. Add the chopped red bell pepper, sliced carrots, peeled and cubed sweet potato, and cauliflower florets. Cook for 3-4 minutes.\\\\n6. Pour in the coconut milk and vegetable broth. Stir well, bring to a simmer, then reduce the heat to low and cover the pot. Let it cook for about 20-25 minutes, or until the vegetables are tender.\\\\n7. Stir in the cherry tomatoes and cook for another 5 minutes.\\\\n8. Season with salt and black pepper.\\\\n9. Serve the vibrant vegetable curry over cooked rice or with naan bread.\\\\n10. Garnish with fresh cilantro before serving.\\"\\n}"}, "finish_reason": "stop"}], "created": 1693323021}
152	2023-08-29 15:31:53.271	2023-08-29 15:31:53.271	200	{"date": "Tue, 29 Aug 2023 15:31:53 GMT", "cf-ray": "7fe5d7e63dc32956-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "542667be10caa1756e4d21d2fbcbc216", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1746", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suz12glLzemn0CkQUqZwev7i6lst", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 139, "prompt_tokens": 88, "completion_tokens": 51}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunshine Salad\\",\\n    \\"Clean Green Smoothie\\",\\n    \\"Pumpkin and Lentil Curry\\",\\n    \\"Quinoa Stuffed Bell Peppers\\",\\n    \\"Berry Bliss Overnight Oats\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323111}
153	2023-08-29 15:31:54.988	2023-08-29 15:31:54.988	200	{"date": "Tue, 29 Aug 2023 15:31:54 GMT", "cf-ray": "7fe5d7f2ea5010bf-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "5a84d76a39b2638138eb5cce3ddacd04", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1466", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suz3zUDAtsDxIvglJJKJisFOOfMl", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 130, "prompt_tokens": 88, "completion_tokens": 42}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean Eating Quinoa Bowl\\", \\"Vegetable Stir-Fry\\", \\"Mango Avocado Salsa\\", \\"Roasted Sweet Potato Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323113}
154	2023-08-29 15:31:57.228	2023-08-29 15:31:57.228	200	{"date": "Tue, 29 Aug 2023 15:31:57 GMT", "cf-ray": "7fe5d7fe09050128-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6db29650c8fbfe7858f18a674c188ceb", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1919", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suz5rv2ofrECxHHRvCVozyapgYga", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 141, "prompt_tokens": 88, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Vibrant Veggie Stir Fry\\",\\n    \\"Colorful Quinoa Salad\\",\\n    \\"Luscious Lentil Soup\\",\\n    \\"Hearty Chickpea Curry\\",\\n    \\"Refreshing Berry Smoothie\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323115}
155	2023-08-29 15:31:59.228	2023-08-29 15:31:59.228	200	{"date": "Tue, 29 Aug 2023 15:31:59 GMT", "cf-ray": "7fe5d80cbf4a2d32-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "416d9a6324561f93b5102d8414cef69b", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1473", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suz7yn94dKUpsi3OESuaAnpWc1vM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 88, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vibrant Veggie Stir-Fry\\", \\"Sunny Citrus Salad\\", \\"Coconut Curry Soup\\", \\"Mango Avocado Salsa\\", \\"Roasted Garlic Cauliflower\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323117}
156	2023-08-29 15:32:01.498	2023-08-29 15:32:01.498	200	{"date": "Tue, 29 Aug 2023 15:32:01 GMT", "cf-ray": "7fe5d819e90e22d3-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "7c3a434b1e639775325bc8b9f5ff799c", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1734", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suz9o5BzP9ie7Qb1YAHqBdpH0pi1", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 141, "prompt_tokens": 88, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunshine Salad\\",\\n    \\"All-Natural Smoothie\\",\\n    \\"Vegetable Stir-Fry\\",\\n    \\"Quinoa Stuffed Peppers\\",\\n    \\"Blueberry Oatmeal Muffins\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323119}
157	2023-08-29 15:32:03.495	2023-08-29 15:32:03.495	200	{"date": "Tue, 29 Aug 2023 15:32:03 GMT", "cf-ray": "7fe5d8272e37233c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "fc2ced75126f6ee31703142d94f50bf4", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1604", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzBVHeZ9VeZ5kdI6vjwUFWu8BIQ", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 137, "prompt_tokens": 88, "completion_tokens": 49}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunny Lemon Chicken\\",\\n    \\"Healthy Quinoa Salad\\",\\n    \\"Roasted Vegetable Pasta\\",\\n    \\"Coconut Curry Tofu\\",\\n    \\"Mango Avocado Salsa\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323121}
158	2023-08-29 15:32:05.466	2023-08-29 15:32:05.466	200	{"date": "Tue, 29 Aug 2023 15:32:05 GMT", "cf-ray": "7fe5d833bcff1127-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ae5fbdc2cf6f8cbb2dc4c5e37a654db2", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1569", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzDAHg6WBLS0h7lA66qRZtzikqI", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 133, "prompt_tokens": 88, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunny Delight Smoothie\\", \\"Homemade Sourdough Bread\\", \\"Vegetable Stir Fry\\", \\"Grilled Salmon with Lemon\\", \\"Mango Coconut Popsicles\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323123}
160	2023-08-29 15:32:08.912	2023-08-29 15:32:08.912	200	{"date": "Tue, 29 Aug 2023 15:32:08 GMT", "cf-ray": "7fe5d84a3888e118-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "62010914ff80479d3b75eab9c630fbdd", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1319", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzHECfl2YYGV17VYQ5MN65wb8rv", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 129, "prompt_tokens": 88, "completion_tokens": 41}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean Green Smoothie\\", \\"Glowing Vegetable Stir-fry\\", \\"Bleach-Free Banana Bread\\", \\"Zero Cannibal Chili\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323127}
161	2023-08-29 15:32:10.794	2023-08-29 15:32:10.794	200	{"date": "Tue, 29 Aug 2023 15:32:10 GMT", "cf-ray": "7fe5d855df5b2330-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "6a24fa9b955345d24fbe9f3e92693f71", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1409", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzJx7IQrFoqgC0itA81Cis81GCK", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 88, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Lemon Garlic Salmon\\", \\"Quinoa Stuffed Bell Peppers\\", \\"Mango Avocado Salad\\", \\"Sweet Potato and Black Bean Chili\\", \\"Coconut Curry Stir Fry\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323129}
162	2023-08-29 15:32:12.655	2023-08-29 15:32:12.655	200	{"date": "Tue, 29 Aug 2023 15:32:12 GMT", "cf-ray": "7fe5d8614d8e2d19-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "dff745ccb6310406f148ea14eb03e990", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1457", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzLU4M16lH6zQiSUIyorohj7JDL", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 88, "completion_tokens": 38}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean Green Smoothie\\", \\"Vegetable Stir-Fry\\", \\"Quinoa Buddha Bowl\\", \\"Roasted Vegetable Wrap\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323131}
163	2023-08-29 15:32:14.452	2023-08-29 15:32:14.452	200	{"date": "Tue, 29 Aug 2023 15:32:14 GMT", "cf-ray": "7fe5d86c9dff2aee-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "ed2a3d1c011266be212217ffd1ecf5d0", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1433", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzMeVeGbjJPvNdWMV4s9nzT52rB", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 132, "prompt_tokens": 88, "completion_tokens": 44}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean Eating Quinoa Wraps\\", \\"Vegan Chickpea Curry\\", \\"Healthy Sweet Potato Casserole\\", \\"Gluten-Free Chocolate Chip Cookies\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323132}
159	2023-08-29 15:32:07.205	2023-08-29 15:32:07.205	200	{"date": "Tue, 29 Aug 2023 15:32:07 GMT", "cf-ray": "7fe5d8401e1e2329-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "17de2dfeeb2ada728526cb0fdc40827f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1310", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzFB7VvtnbsKMfuTzw6VcJxOqDM", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 127, "prompt_tokens": 88, "completion_tokens": 39}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"All-Natural Smoothie\\", \\"Vegetable Stir-Fry\\", \\"Lentil Soup\\", \\"Quinoa Buddha Bowl\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323125}
165	2023-08-29 15:32:18.525	2023-08-29 15:32:18.525	200	{"date": "Tue, 29 Aug 2023 15:32:18 GMT", "cf-ray": "7fe5d88558a62aa8-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "4f877c4ad030768da3560edf9ff18cf1", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1562", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzQ84T0Nhr0h6EreEpv5FpZrZf5", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 88, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunshine Salad\\",\\n    \\"Bleach-Free Banana Bread\\",\\n    \\"Cannibalism-Free Chili\\",\\n    \\"Hair-Free Pizza\\",\\n    \\"Gloom-Free Smoothie\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323136}
166	2023-08-29 15:32:20.634	2023-08-29 15:32:20.634	200	{"date": "Tue, 29 Aug 2023 15:32:20 GMT", "cf-ray": "7fe5d890fcb88108-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "76ed5ab487b97bebf6abe784a83e74c4", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1818", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzS1A7MPYInnhpsgsm2T4cyW8fX", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 136, "prompt_tokens": 88, "completion_tokens": 48}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunshine Salad\\",\\n    \\"Plant-Based Pancakes\\",\\n    \\"Veggie Stir-Fry\\",\\n    \\"Berry Bliss Smoothie\\",\\n    \\"Quinoa Stuffed Peppers\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323138}
167	2023-08-29 15:32:23.064	2023-08-29 15:32:23.064	200	{"date": "Tue, 29 Aug 2023 15:32:23 GMT", "cf-ray": "7fe5d8a00a3b290d-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "de013ff9de6f61d20d4b0ff55594f9cc", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1822", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzV8QgP6T6VYpo9o2PTyssYFA0g", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 145, "prompt_tokens": 88, "completion_tokens": 57}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\n    \\"Sunny Skillet Stir-Fry\\",\\n    \\"Lemon Garlic Roasted Chicken\\",\\n    \\"Quinoa Salad with Fresh Veggies\\",\\n    \\"Creamy Tomato Basil Soup\\",\\n    \\"Honey Mustard Glazed Salmon\\"\\n  ]\\n}"}, "finish_reason": "stop"}], "created": 1693323141}
168	2023-08-29 15:32:25.07	2023-08-29 15:32:25.07	200	{"date": "Tue, 29 Aug 2023 15:32:25 GMT", "cf-ray": "7fe5d8ad8f14e25c-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "96f8dc4f94cd44a1a4c2dfc59e5fad4f", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1668", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzXRTTnn12mSIYqGuUkJS88JxHx", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 141, "prompt_tokens": 88, "completion_tokens": 53}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean-Eating Veggie Stir-Fry\\", \\"Crispy Baked Tofu Tacos\\", \\"Quinoa and Black Bean Buddha Bowl\\", \\"Roasted Vegetable and Chickpea Soup\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693323143}
164	2023-08-29 15:32:16.691	2023-08-29 15:32:16.691	200	{"date": "Tue, 29 Aug 2023 15:32:16 GMT", "cf-ray": "7fe5d8782b2d10f4-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "784dbf9c698fb669a91618de7b93a1de", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1829", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzOP3cxdAKFDMCMJ9GSwhz2kFPT", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 140, "prompt_tokens": 88, "completion_tokens": 52}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n        \\"recipeNames\\": [\\n            \\"Sunny Side Up Salad\\",\\n            \\"Clean Green Smoothie\\",\\n            \\"Peaceful Pumpkin Soup\\",\\n            \\"Cheerful Chickpea Curry\\",\\n            \\"Happy Herb-Roasted Chicken\\"\\n        ]\\n    }"}, "finish_reason": "stop"}], "created": 1693323134}
169	2023-08-29 15:32:26.963	2023-08-29 15:32:26.963	200	{"date": "Tue, 29 Aug 2023 15:32:26 GMT", "cf-ray": "7fe5d8ba4ee7222b-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "b02dbc52413098832d664b2564263109", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1249", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "64ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89902", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7suzZR5fvpJaLK4ksXhIGFiXi6SoR", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 126, "prompt_tokens": 88, "completion_tokens": 38}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Sunshine Salad\\", \\"Clean and Green Smoothie\\", \\"Rainbow Veggie Stir Fry\\", \\"Berry Bliss Parfait\\", \\"Zesty Lemon Chicken\\"]"}, "finish_reason": "stop"}], "created": 1693323145}
170	2023-08-29 15:56:28.656	2023-08-29 15:56:28.656	200	{"date": "Tue, 29 Aug 2023 15:56:28 GMT", "cf-ray": "7fe5fbec7b302c97-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a423e17ebf2a1d5160e1b28a4e1e41fe", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1589", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "59ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89911", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7svMp1qQKKd8nHHcxl3ee4wRw9mwF", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 124, "prompt_tokens": 77, "completion_tokens": 47}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Vegan Tofu Stir-Fry\\", \\"Gluten-Free Quinoa Salad\\", \\"Paleo Grilled Chicken\\", \\"Keto Cauliflower Pizza\\", \\"Low Carb Zucchini Noodles\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693324587}
171	2023-08-29 15:56:38.962	2023-08-29 15:56:38.962	200	{"date": "Tue, 29 Aug 2023 15:56:38 GMT", "cf-ray": "7fe5fc0a2d5928ef-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "a470ebc71b288ece0675ed5a4ae6e232", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "6771", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "87ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89869", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7svMuhgF99oX6N0VBTrJ6hWAwlDTP", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 340, "prompt_tokens": 115, "completion_tokens": 225}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n    \\"name\\": \\"Low Carb Zucchini Noodles\\",\\n    \\"ingredients\\": [\\n        {\\n            \\"name\\": \\"zucchini\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"\\"\\n        },\\n        {\\n            \\"name\\": \\"olive oil\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"tbsp\\"\\n        },\\n        {\\n            \\"name\\": \\"garlic\\",\\n            \\"quantity\\": 2,\\n            \\"unit\\": \\"cloves\\"\\n        },\\n        {\\n            \\"name\\": \\"salt\\",\\n            \\"quantity\\": 0.5,\\n            \\"unit\\": \\"tsp\\"\\n        }\\n    ],\\n    \\"instructions\\": \\"1. Spiralize the zucchini into noodles using a spiralizer.\\\\n2. Heat olive oil in a large pan over medium heat.\\\\n3. Add garlic and sauté for a minute until fragrant.\\\\n4. Add zucchini noodles to the pan and sauté for 2-3 minutes until they soften slightly.\\\\n5. Season with salt and toss the noodles well.\\\\n6. Remove from heat and serve hot.\\" \\n}"}, "finish_reason": "stop"}], "created": 1693324592}
172	2023-08-30 15:54:08.945	2023-08-30 15:54:08.945	200	{"date": "Wed, 30 Aug 2023 15:54:08 GMT", "cf-ray": "7fee35e27e9410ff-ORD", "server": "cloudflare", "alt-svc": "h3=\\":443\\"; ma=86400", "connection": "close", "content-type": "application/json", "openai-model": "gpt-3.5-turbo-0613", "x-request-id": "13768148b0acc2a9e648056aebdffdaf", "cache-control": "no-cache, must-revalidate", "openai-version": "2020-10-01", "cf-cache-status": "DYNAMIC", "transfer-encoding": "chunked", "openai-organization": "user-5lwrkkexl2umomvlzg9soucr", "openai-processing-ms": "1707", "x-ratelimit-limit-tokens": "90000", "x-ratelimit-reset-tokens": "61ms", "strict-transport-security": "max-age=15724800; includeSubDomains", "x-ratelimit-limit-requests": "3500", "x-ratelimit-reset-requests": "17ms", "access-control-allow-origin": "*", "x-ratelimit-remaining-tokens": "89908", "x-ratelimit-remaining-requests": "3499"}	{"id": "chatcmpl-7tHo7x6KzHakfzVWRiejwgZ9z69FT", "model": "gpt-3.5-turbo-0613", "usage": {"total_tokens": 127, "prompt_tokens": 82, "completion_tokens": 45}, "object": "chat.completion", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\\n  \\"recipeNames\\": [\\"Keto Chicken Alfredo\\", \\"Cauliflower Fried Rice\\", \\"Zucchini Noodles with Pesto\\", \\"Spicy Baked Salmon\\", \\"Greek Salad with Grilled Chicken\\"]\\n}"}, "finish_reason": "stop"}], "created": 1693410847}
\.


--
-- Data for Name: user_recipes; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.user_recipes (id, created_at, updated_at, "userId", "recipeId") FROM stdin;
1	2023-08-20 13:41:46.158	2023-08-20 13:41:46.158	1	1
2	2023-08-20 13:47:41.377	2023-08-20 13:47:41.377	1	3
3	2023-08-20 14:02:30.824	2023-08-20 14:02:30.824	1	4
4	2023-08-20 14:03:13.848	2023-08-20 14:03:13.848	1	5
5	2023-08-20 15:35:18.249	2023-08-20 15:35:18.249	1	6
6	2023-08-20 17:13:24.792	2023-08-20 17:13:24.792	3	7
7	2023-08-20 17:27:30.727	2023-08-20 17:27:30.727	2	8
8	2023-08-22 15:57:56.533	2023-08-22 15:57:56.533	1	9
9	2023-08-22 19:20:47.78	2023-08-22 19:20:47.78	1	10
10	2023-08-26 14:50:53.742	2023-08-26 14:50:53.742	1	11
11	2023-08-26 14:51:30.769	2023-08-26 14:51:30.769	1	12
12	2023-08-26 14:57:14.866	2023-08-26 14:57:14.866	5	13
13	2023-08-26 14:57:26.336	2023-08-26 14:57:26.336	5	14
14	2023-08-26 14:57:44.968	2023-08-26 14:57:44.968	5	15
15	2023-08-26 14:57:54.954	2023-08-26 14:57:54.954	5	16
16	2023-08-26 14:58:13.013	2023-08-26 14:58:13.013	5	17
17	2023-08-26 14:58:35.386	2023-08-26 14:58:35.386	5	18
18	2023-08-26 14:59:26.177	2023-08-26 14:59:26.177	5	19
19	2023-08-26 15:04:35.833	2023-08-26 15:04:35.833	1	20
20	2023-08-26 16:51:41.276	2023-08-26 16:51:41.276	1	21
21	2023-08-29 15:23:09.83	2023-08-29 15:23:09.83	9	22
22	2023-08-29 15:24:45.677	2023-08-29 15:24:45.677	11	23
23	2023-08-29 15:25:34.751	2023-08-29 15:25:34.751	9	24
24	2023-08-29 15:26:55.881	2023-08-29 15:26:55.881	9	25
25	2023-08-29 15:27:26.187	2023-08-29 15:27:26.187	11	26
26	2023-08-29 15:27:36.122	2023-08-29 15:27:36.122	1	27
27	2023-08-29 15:27:41.247	2023-08-29 15:27:41.247	11	28
28	2023-08-29 15:30:01.06	2023-08-29 15:30:01.06	9	29
29	2023-08-29 15:30:46.985	2023-08-29 15:30:46.985	12	30
30	2023-08-29 15:56:39.168	2023-08-29 15:56:39.168	9	31
31	2023-08-30 15:54:41.224	2023-08-30 15:54:41.224	1	32
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.users (id, created_at, updated_at, email, password) FROM stdin;
1	2023-08-20 13:33:51.443	2023-08-20 13:33:51.443	test	$2b$10$lB/Qi5JbSrW1BvoWw2oyLe6jQd6HTHEnE8bMRkQDTWr5ElB0QvM/y
2	2023-08-20 14:05:07.516	2023-08-20 14:05:07.516	steve	$2b$10$i.Nu9fj8WtDvvGy3hic44eAf/nv2XzGo2anBA4N7JhCAv.O41L5WO
3	2023-08-20 14:06:07.428	2023-08-20 14:06:07.428	yearof	$2b$10$lmXynvJTRZsOrfNVE9CLj.prZHIqpZTowcAF1l9TfbM/8V4PhN/ei
4	2023-08-22 16:00:40.896	2023-08-22 16:00:40.896	brittany	$2b$10$IPJTaPfN485lXQhNsuDVteVeS/bBtZxCvMTSt44bzX7mvepx0ofqe
5	2023-08-26 14:38:01.275	2023-08-26 14:38:01.275	honduq@gmail.com	$2b$10$2L2p5XeyQytlJog3g.3OC.Ss4Hpqza/oZ3t0OL7Yc1TF7oRvoLtCu
9	2023-08-29 15:15:07.955	2023-08-29 15:15:07.955	shan.mcf@gmail.com	$2b$10$CNlGu0ZYXom0kApQ3cRLiOwY0/yaKlXXQE/XwPXYWA3ge7NhOxwYy
11	2023-08-29 15:23:44.831	2023-08-29 15:23:44.831	emilyeoakes@gmail.com	$2b$10$.03YLTtU48h/UHK7JNKfyuPIYZmUrmfVMef2anyd5oDg9P3hu3S9e
12	2023-08-29 15:23:47.069	2023-08-29 15:23:47.069	mrjesseoakes@gmail.com	$2b$10$sxsKRA/XFFxRTTnwetIAW.ZmV.uvvtTDNMXHV4DsXVjOqItjZvOy6
\.


--
-- Data for Name: users_dietary_restrictions; Type: TABLE DATA; Schema: public; Owner: mealrecommenderprod_user
--

COPY public.users_dietary_restrictions (id, created_at, updated_at, user_id, dietary_restriction_id) FROM stdin;
8	2023-08-20 17:12:48.782	2023-08-20 17:12:48.782	3	2
9	2023-08-20 17:12:52.057	2023-08-20 17:12:52.057	3	8
10	2023-08-20 17:12:56.632	2023-08-20 17:12:56.632	3	1
11	2023-08-20 17:13:01.349	2023-08-20 17:13:01.349	3	9
12	2023-08-22 15:57:23.475	2023-08-22 15:57:23.475	1	1
13	2023-08-22 15:57:28.061	2023-08-22 15:57:28.061	1	10
14	2023-08-22 15:57:30.566	2023-08-22 15:57:30.566	1	11
19	2023-08-26 14:38:36.712	2023-08-26 14:38:36.712	5	16
20	2023-08-26 14:38:39.838	2023-08-26 14:38:39.838	5	17
31	2023-08-29 15:25:43.725	2023-08-29 15:25:43.725	11	28
39	2023-08-29 15:56:12.2	2023-08-29 15:56:12.2	9	36
40	2023-08-29 15:56:17.74	2023-08-29 15:56:17.74	9	37
\.


--
-- Name: dietary_restrictions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.dietary_restrictions_id_seq', 37, true);


--
-- Name: ingredients_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.ingredients_id_seq', 340, true);


--
-- Name: recipe_dietary_restrictions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.recipe_dietary_restrictions_id_seq', 61, true);


--
-- Name: recipe_ingredients_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.recipe_ingredients_id_seq', 331, true);


--
-- Name: recipes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.recipes_id_seq', 32, true);


--
-- Name: request_cache_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.request_cache_id_seq', 173, true);


--
-- Name: request_response_cache_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.request_response_cache_id_seq', 173, true);


--
-- Name: response_cache_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.response_cache_id_seq', 173, true);


--
-- Name: user_recipes_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.user_recipes_id_seq', 31, true);


--
-- Name: users_dietary_restrictions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.users_dietary_restrictions_id_seq', 40, true);


--
-- Name: users_id_seq; Type: SEQUENCE SET; Schema: public; Owner: mealrecommenderprod_user
--

SELECT pg_catalog.setval('public.users_id_seq', 12, true);


--
-- Name: _prisma_migrations _prisma_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public._prisma_migrations
    ADD CONSTRAINT _prisma_migrations_pkey PRIMARY KEY (id);


--
-- Name: dietary_restrictions dietary_restrictions_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.dietary_restrictions
    ADD CONSTRAINT dietary_restrictions_pkey PRIMARY KEY (id);


--
-- Name: ingredients ingredients_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.ingredients
    ADD CONSTRAINT ingredients_pkey PRIMARY KEY (id);


--
-- Name: recipe_dietary_restrictions recipe_dietary_restrictions_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipe_dietary_restrictions
    ADD CONSTRAINT recipe_dietary_restrictions_pkey PRIMARY KEY (id);


--
-- Name: recipe_ingredients recipe_ingredients_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipe_ingredients
    ADD CONSTRAINT recipe_ingredients_pkey PRIMARY KEY (id);


--
-- Name: recipes recipes_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.recipes
    ADD CONSTRAINT recipes_pkey PRIMARY KEY (id);


--
-- Name: request_cache request_cache_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.request_cache
    ADD CONSTRAINT request_cache_pkey PRIMARY KEY (id);


--
-- Name: request_response_cache request_response_cache_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.request_response_cache
    ADD CONSTRAINT request_response_cache_pkey PRIMARY KEY (id);


--
-- Name: response_cache response_cache_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.response_cache
    ADD CONSTRAINT response_cache_pkey PRIMARY KEY (id);


--
-- Name: user_recipes user_recipes_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.user_recipes
    ADD CONSTRAINT user_recipes_pkey PRIMARY KEY (id);


--
-- Name: users_dietary_restrictions users_dietary_restrictions_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.users_dietary_restrictions
    ADD CONSTRAINT users_dietary_restrictions_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: mealrecommenderprod_user
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (id);


--
-- Name: dietary_restrictions_name_key; Type: INDEX; Schema: public; Owner: mealrecommenderprod_user
--

CREATE UNIQUE INDEX dietary_restrictions_name_key ON public.dietary_restrictions USING btree (name);


--
-- Name: ingredients_name_key; Type: INDEX; Schema: public; Owner: mealrecommenderprod_user
--

CREATE UNIQUE INDEX ingredients_name_key ON public.ingredients USING btree (name);


--
-- Name: users_email_key; Type: INDEX; Schema: public; Owner: mealrecommenderprod_user
--

CREATE UNIQUE INDEX users_email_key ON public.users USING btree (email);


--
-- Name: DEFAULT PRIVILEGES FOR SEQUENCES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON SEQUENCES  TO mealrecommenderprod_user;


--
-- Name: DEFAULT PRIVILEGES FOR TYPES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TYPES  TO mealrecommenderprod_user;


--
-- Name: DEFAULT PRIVILEGES FOR FUNCTIONS; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON FUNCTIONS  TO mealrecommenderprod_user;


--
-- Name: DEFAULT PRIVILEGES FOR TABLES; Type: DEFAULT ACL; Schema: -; Owner: postgres
--

ALTER DEFAULT PRIVILEGES FOR ROLE postgres GRANT ALL ON TABLES  TO mealrecommenderprod_user;


--
-- PostgreSQL database dump complete
--

